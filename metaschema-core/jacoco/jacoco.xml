<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Metaschema Core API"><sessioninfo id="fv-az803-441-aa032c72" start="1698198720185" dump="1698198736457"/><sessioninfo id="fv-az803-441-ad17ddfd" start="1698198719805" dump="1698198736588"/><sessioninfo id="fv-az803-441-1430d915" start="1698198720147" dump="1698198740343"/><package name="gov/nist/secauto/metaschema/core/metapath/function"><class name="gov/nist/secauto/metaschema/core/metapath/function/FunctionUtils" sourcefilename="FunctionUtils.java"><method name="asInteger" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)I" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asInteger" desc="(Ljava/math/BigInteger;)I" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asLong" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)J" line="89"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asLong" desc="(Ljava/math/BigInteger;)J" line="102"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireFirstItem" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;Z)Lgov/nist/secauto/metaschema/core/metapath/item/IItem;" line="126"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFirstItem" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;Z)Lgov/nist/secauto/metaschema/core/metapath/item/IItem;" line="160"><counter type="INSTRUCTION" missed="15" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toNumeric" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;Z)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="191"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNumeric" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="208"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNumeric" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="224"><counter type="INSTRUCTION" missed="9" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toNumericOrNull" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="242"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asType" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/IItem;" line="248"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asType" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="254"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asTypeOrNull" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/IItem;" line="260"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireType" desc="(Ljava/lang/Class;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/IItem;" line="265"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireTypeOrNull" desc="(Ljava/lang/Class;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/IItem;" line="282"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="173" covered="34"/><counter type="BRANCH" missed="20" covered="4"/><counter type="LINE" missed="37" covered="10"/><counter type="COMPLEXITY" missed="22" covered="6"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/DocumentFunctionException" sourcefilename="DocumentFunctionException.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/lang/Throwable;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/Throwable;)V" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCodePrefix" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/IArgument" sourcefilename="IArgument.java"><method name="newBuilder" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IArgument$Builder;" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/Occurrence" sourcefilename="Occurrence.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Z)V" line="56"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndicator" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOptional" desc="()Z" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="79"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/ArgumentImpl" sourcefilename="ArgumentImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lgov/nist/secauto/metaschema/core/metapath/function/ISequenceType;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSequenceType" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/ISequenceType;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSupported" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Z" line="60"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSignature" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="78"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="83"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="9"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="17" covered="4"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/OperationFunctions" sourcefilename="OperationFunctions.java"><method name="opAddYearMonthDurationToDate" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opAddDayTimeDurationToDate" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="63"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addDurationToDate" desc="(Ljava/time/ZonedDateTime;Ljava/time/temporal/TemporalAmount;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="70"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opAddYearMonthDurations" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;" line="81"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opAddDayTimeDurations" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;" line="97"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opAddYearMonthDurationToDateTime" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;" line="115"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opAddDayTimeDurationToDateTime" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;" line="128"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opSubtractDates" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;" line="138"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opSubtractYearMonthDurationFromDate" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="144"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opSubtractDayTimeDurationFromDate" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="150"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtractDurationFromDate" desc="(Ljava/time/ZonedDateTime;Ljava/time/temporal/TemporalAmount;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="157"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opSubtractYearMonthDurations" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;" line="164"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opSubtractDayTimeDurations" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;" line="175"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opSubtractDateTimes" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;" line="185"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="between" desc="(Ljava/time/ZonedDateTime;Ljava/time/ZonedDateTime;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;" line="191"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opSubtractYearMonthDurationFromDateTime" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;" line="199"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opSubtractDayTimeDurationFromDateTime" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;" line="208"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opMultiplyYearMonthDuration" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;" line="218"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opMultiplyDayTimeDuration" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;" line="234"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDivideYearMonthDuration" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;" line="248"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDivideDayTimeDuration" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;" line="268"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDivideDayTimeDurationByDayTimeDuration" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDecimalItem;" line="279"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDateEqual" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="287"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDateTimeEqual" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="292"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDurationEqual" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="297"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opBase64BinaryEqual" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="302"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDateGreaterThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="307"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDateTimeGreaterThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="312"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opYearMonthDurationGreaterThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="318"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDayTimeDurationGreaterThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="329"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opBase64BinaryGreaterThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="336"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDateLessThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="343"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDateTimeLessThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="350"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opYearMonthDurationLessThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="356"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opDayTimeDurationLessThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="367"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opBase64BinaryLessThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="374"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opNumericAdd" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="380"><counter type="INSTRUCTION" missed="16" covered="20"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="opNumericSubtract" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="403"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opNumericMultiply" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="426"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opNumericDivide" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="446"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opNumericIntegerDivide" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="481"><counter type="INSTRUCTION" missed="12" covered="43"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="opNumericMod" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="524"><counter type="INSTRUCTION" missed="9" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="opNumericUnaryMinus" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="547"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="opNumericEqual" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="570"><counter type="INSTRUCTION" missed="3" covered="27"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="opNumericGreaterThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="583"><counter type="INSTRUCTION" missed="17" covered="25"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="opNumericLessThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="598"><counter type="INSTRUCTION" missed="17" covered="25"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="opBooleanEqual" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="612"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="opBooleanGreaterThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="620"><counter type="INSTRUCTION" missed="4" covered="23"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="opBooleanLessThan" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="628"><counter type="INSTRUCTION" missed="6" covered="21"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="705" covered="235"/><counter type="BRANCH" missed="84" covered="44"/><counter type="LINE" missed="167" covered="52"/><counter type="COMPLEXITY" missed="97" covered="17"/><counter type="METHOD" missed="40" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/FunctionService" sourcefilename="FunctionService.java"><method name="getInstance" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/FunctionService;" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunctionLibrary;" line="73"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLoader" desc="()Ljava/util/ServiceLoader;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="(Ljava/lang/String;[Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="114"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFunction" desc="(Ljava/lang/String;Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="132"><counter type="INSTRUCTION" missed="19" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$load$2" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/FunctionLibrary;Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$load$1" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunctionLibrary;)Ljava/util/stream/Stream;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/FunctionService;" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="80"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/ArgumentType" sourcefilename="ArgumentType.java"><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/IFunction$FunctionProperty" sourcefilename="IFunction.java"><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/IArgument$Builder" sourcefilename="IArgument.java"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="name" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/function/IArgument$Builder;" line="69"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="(Ljava/lang/Class;)Lgov/nist/secauto/metaschema/core/metapath/function/IArgument$Builder;" line="79"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zeroOrOne" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IArgument$Builder;" line="86"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="one" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IArgument$Builder;" line="91"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zeroOrMore" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IArgument$Builder;" line="96"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="oneOrMore" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IArgument$Builder;" line="101"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="occurrence" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/Occurrence;)Lgov/nist/secauto/metaschema/core/metapath/function/IArgument$Builder;" line="106"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IArgument;" line="113"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="68"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="19"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/ISequenceType" sourcefilename="ISequenceType.java"><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/SequenceTypeImpl" sourcefilename="SequenceTypeImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lgov/nist/secauto/metaschema/core/metapath/function/Occurrence;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/Class;" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOccurrence" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/Occurrence;" line="56"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSignature" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="78"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="83"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="31"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="7"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/InvalidArgumentFunctionException" sourcefilename="InvalidArgumentFunctionException.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/lang/Throwable;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/Throwable;)V" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCodePrefix" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="6"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/InvalidTypeFunctionException" sourcefilename="InvalidTypeFunctionException.java"><method name="&lt;init&gt;" desc="(ILgov/nist/secauto/metaschema/core/metapath/item/IItem;)V" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILgov/nist/secauto/metaschema/core/metapath/item/IItem;Ljava/lang/Throwable;)V" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateMessage" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCodePrefix" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/UriFunctionException" sourcefilename="UriFunctionException.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/lang/Throwable;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/Throwable;)V" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCodePrefix" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/AbstractFunction" sourcefilename="AbstractFunction.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamespace" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arity" desc="()I" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArguments" desc="()Ljava/util/List;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder" sourcefilename="IFunction.java"><method name="&lt;init&gt;" desc="()V" line="214"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="228"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namespace" desc="(Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="238"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namespace" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="243"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deterministic" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="253"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nonDeterministic" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="259"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contextDependent" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="265"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contextIndependent" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="271"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="focusDependent" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="277"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="focusIndependent" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="283"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowUnboundedArity" desc="(Z)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="289"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnType" desc="(Ljava/lang/Class;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="299"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnZeroOrOne" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="306"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnOne" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="311"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnZeroOrMore" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="316"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnOneOrMore" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="321"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnOccurrence" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/Occurrence;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="326"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IArgument$Builder;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="333"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="argument" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IArgument;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="338"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="functionHandler" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunctionExecutor;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="345"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="353"><counter type="INSTRUCTION" missed="12" covered="46"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="182"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="12" covered="48"/><counter type="COMPLEXITY" missed="10" covered="17"/><counter type="METHOD" missed="4" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/InvalidValueForCastFunctionException" sourcefilename="InvalidValueForCastFunctionException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="6"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/DefaultFunction$CallingContext" sourcefilename="DefaultFunction.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/DefaultFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)V" line="436"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/DefaultFunction;" line="448"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContextItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/IItem;" line="458"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArguments" desc="()Ljava/util/List;" line="468"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="473"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="482"><counter type="INSTRUCTION" missed="9" covered="34"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="81"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="6" covered="16"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/ISequenceType$1" sourcefilename="ISequenceType.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/Class;" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOccurrence" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/Occurrence;" line="48"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSignature" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/FunctionLibrary$NamedFunctionSet" sourcefilename="FunctionLibrary.java"><method name="&lt;init&gt;" desc="()V" line="126"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionsAsStream" desc="()Ljava/util/stream/Stream;" line="133"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionWithArity" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="138"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFunction" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="143"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/ArithmeticFunctionException" sourcefilename="ArithmeticFunctionException.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/lang/Throwable;)V" line="48"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/Throwable;)V" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCodePrefix" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/DefaultFunction" sourcefilename="DefaultFunction.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/EnumSet;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/function/ISequenceType;Lgov/nist/secauto/metaschema/core/metapath/function/IFunctionExecutor;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Ljava/util/Set;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/ISequenceType;" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertArguments" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;)Ljava/util/List;" line="180"><counter type="INSTRUCTION" missed="190" covered="20"/><counter type="BRANCH" missed="28" covered="1"/><counter type="LINE" missed="38" covered="6"/><counter type="COMPLEXITY" missed="16" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertSequence" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IArgument;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="277"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="322"><counter type="INSTRUCTION" missed="19" covered="45"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="368"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="373"><counter type="INSTRUCTION" missed="54" covered="5"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="393"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSignature" desc="()Ljava/lang/String;" line="398"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toSignature$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IArgument;)Ljava/lang/String;" line="409"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="419" covered="124"/><counter type="BRANCH" missed="66" covered="7"/><counter type="LINE" missed="88" covered="28"/><counter type="COMPLEXITY" missed="42" covered="8"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/FunctionLibrary" sourcefilename="FunctionLibrary.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerFunction" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerFunctionByQName" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;)V" line="64"><counter type="INSTRUCTION" missed="18" covered="35"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerFunctionByName" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionsAsStream" desc="()Ljava/util/stream/Stream;" line="95"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="(Ljava/lang/String;Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="106"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="(Ljavax/xml/namespace/QName;Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="116"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getFunctionsAsStream$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/FunctionLibrary$NamedFunctionSet;)Ljava/util/stream/Stream;" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="44" covered="128"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="7" covered="34"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/IFunctionExecutor" sourcefilename="IFunctionExecutor.java"/><class name="gov/nist/secauto/metaschema/core/metapath/function/DateTimeFunctionException" sourcefilename="DateTimeFunctionException.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/lang/Throwable;)V" line="45"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/Throwable;)V" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCodePrefix" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/IFunction" sourcefilename="IFunction.java"><method name="getQName" desc="()Ljavax/xml/namespace/QName;" line="105"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeterministic" desc="()Z" line="139"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isContextDepenent" desc="()Z" line="151"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFocusDepenent" desc="()Z" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArityUnbounded" desc="()Z" line="173"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction$Builder;" line="210"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="22"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/IFunctionLibrary" sourcefilename="IFunctionLibrary.java"><method name="hasFunction" desc="(Ljava/lang/String;Ljava/util/List;)Z" line="61"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasFunction" desc="(Ljavax/xml/namespace/QName;Ljava/util/List;)Z" line="77"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ArithmeticFunctionException.java"><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SequenceTypeImpl.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="14" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="15" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="62" covered="31"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="16" covered="7"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFunction.java"><line nr="48" mi="0" ci="20" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="1" cb="1"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="7" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="1" cb="1"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="2" ci="0" mb="2" cb="0"/><line nr="290" mi="6" ci="0" mb="0" cb="0"/><line nr="292" mi="5" ci="0" mb="0" cb="0"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="321" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="5" ci="0" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="1" cb="1"/><line nr="354" mi="3" ci="0" mb="0" cb="0"/><line nr="356" mi="0" ci="7" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="4" ci="5" mb="3" cb="1"/><line nr="362" mi="5" ci="0" mb="0" cb="0"/><line nr="365" mi="0" ci="6" mb="0" cb="0"/><line nr="366" mi="0" ci="5" mb="0" cb="0"/><line nr="367" mi="0" ci="13" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="63" covered="248"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="14" covered="57"/><counter type="COMPLEXITY" missed="12" covered="22"/><counter type="METHOD" missed="6" covered="22"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="UriFunctionException.java"><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IArgument.java"><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="3" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="1" cb="1"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="72"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="20"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Occurrence.java"><line nr="31" mi="0" ci="24" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="79"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OperationFunctions.java"><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="7" ci="0" mb="2" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="2" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="2" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="7" ci="0" mb="2" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="7" ci="0" mb="2" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="6" ci="0" mb="0" cb="0"/><line nr="144" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="6" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="6" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="6" ci="0" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="6" ci="0" mb="0" cb="0"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="248" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="4" ci="0" mb="0" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="1" ci="0" mb="0" cb="0"/><line nr="254" mi="7" ci="0" mb="0" cb="0"/><line nr="256" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="7" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="1" ci="0" mb="0" cb="0"/><line nr="272" mi="7" ci="0" mb="0" cb="0"/><line nr="279" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="6" ci="0" mb="0" cb="0"/><line nr="292" mi="7" ci="0" mb="0" cb="0"/><line nr="297" mi="7" ci="0" mb="0" cb="0"/><line nr="302" mi="7" ci="0" mb="0" cb="0"/><line nr="307" mi="6" ci="0" mb="0" cb="0"/><line nr="312" mi="11" ci="0" mb="2" cb="0"/><line nr="318" mi="3" ci="0" mb="0" cb="0"/><line nr="319" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="11" ci="0" mb="2" cb="0"/><line nr="329" mi="11" ci="0" mb="2" cb="0"/><line nr="336" mi="11" ci="0" mb="2" cb="0"/><line nr="343" mi="6" ci="0" mb="0" cb="0"/><line nr="350" mi="11" ci="0" mb="2" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="11" ci="0" mb="2" cb="0"/><line nr="367" mi="11" ci="0" mb="2" cb="0"/><line nr="374" mi="11" ci="0" mb="2" cb="0"/><line nr="380" mi="3" ci="3" mb="3" cb="1"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="3" mb="0" cb="0"/><line nr="386" mi="0" ci="5" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="0" cb="0"/><line nr="388" mi="0" ci="1" mb="0" cb="0"/><line nr="390" mi="3" ci="0" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="0" cb="0"/><line nr="394" mi="4" ci="0" mb="0" cb="0"/><line nr="395" mi="3" ci="0" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="403" mi="6" ci="0" mb="4" cb="0"/><line nr="405" mi="3" ci="0" mb="0" cb="0"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="409" mi="5" ci="0" mb="0" cb="0"/><line nr="410" mi="3" ci="0" mb="0" cb="0"/><line nr="411" mi="1" ci="0" mb="0" cb="0"/><line nr="413" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><line nr="418" mi="3" ci="0" mb="0" cb="0"/><line nr="420" mi="2" ci="0" mb="0" cb="0"/><line nr="426" mi="6" ci="0" mb="4" cb="0"/><line nr="428" mi="3" ci="0" mb="0" cb="0"/><line nr="429" mi="3" ci="0" mb="0" cb="0"/><line nr="432" mi="5" ci="0" mb="0" cb="0"/><line nr="433" mi="3" ci="0" mb="0" cb="0"/><line nr="434" mi="1" ci="0" mb="0" cb="0"/><line nr="437" mi="6" ci="0" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="0" cb="0"/><line nr="440" mi="2" ci="0" mb="0" cb="0"/><line nr="446" mi="6" ci="0" mb="4" cb="0"/><line nr="448" mi="3" ci="0" mb="0" cb="0"/><line nr="450" mi="4" ci="0" mb="2" cb="0"/><line nr="451" mi="6" ci="0" mb="0" cb="0"/><line nr="455" mi="3" ci="0" mb="0" cb="0"/><line nr="458" mi="5" ci="0" mb="0" cb="0"/><line nr="459" mi="3" ci="0" mb="0" cb="0"/><line nr="460" mi="1" ci="0" mb="0" cb="0"/><line nr="462" mi="3" ci="0" mb="0" cb="0"/><line nr="464" mi="4" ci="0" mb="2" cb="0"/><line nr="465" mi="6" ci="0" mb="0" cb="0"/><line nr="469" mi="3" ci="0" mb="0" cb="0"/><line nr="472" mi="4" ci="0" mb="0" cb="0"/><line nr="473" mi="3" ci="0" mb="0" cb="0"/><line nr="475" mi="2" ci="0" mb="0" cb="0"/><line nr="481" mi="0" ci="6" mb="1" cb="3"/><line nr="483" mi="0" ci="3" mb="0" cb="0"/><line nr="485" mi="0" ci="4" mb="1" cb="1"/><line nr="486" mi="6" ci="0" mb="0" cb="0"/><line nr="490" mi="0" ci="3" mb="0" cb="0"/><line nr="493" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="0" ci="3" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="0" ci="1" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="4" mb="1" cb="1"/><line nr="501" mi="6" ci="0" mb="0" cb="0"/><line nr="506" mi="0" ci="5" mb="0" cb="0"/><line nr="507" mi="0" ci="3" mb="0" cb="0"/><line nr="509" mi="0" ci="2" mb="0" cb="0"/><line nr="524" mi="0" ci="3" mb="0" cb="0"/><line nr="526" mi="0" ci="4" mb="1" cb="1"/><line nr="527" mi="6" ci="0" mb="0" cb="0"/><line nr="531" mi="0" ci="3" mb="0" cb="0"/><line nr="534" mi="0" ci="4" mb="1" cb="1"/><line nr="535" mi="3" ci="0" mb="0" cb="0"/><line nr="538" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="3" mb="0" cb="0"/><line nr="541" mi="0" ci="2" mb="0" cb="0"/><line nr="547" mi="3" ci="0" mb="2" cb="0"/><line nr="549" mi="3" ci="0" mb="0" cb="0"/><line nr="552" mi="4" ci="0" mb="0" cb="0"/><line nr="553" mi="3" ci="0" mb="0" cb="0"/><line nr="554" mi="4" ci="0" mb="2" cb="0"/><line nr="556" mi="3" ci="0" mb="0" cb="0"/><line nr="559" mi="3" ci="0" mb="0" cb="0"/><line nr="560" mi="3" ci="0" mb="0" cb="0"/><line nr="561" mi="1" ci="0" mb="0" cb="0"/><line nr="562" mi="5" ci="0" mb="0" cb="0"/><line nr="564" mi="2" ci="0" mb="0" cb="0"/><line nr="570" mi="0" ci="4" mb="2" cb="2"/><line nr="571" mi="3" ci="0" mb="0" cb="0"/><line nr="572" mi="0" ci="6" mb="1" cb="3"/><line nr="573" mi="0" ci="8" mb="0" cb="0"/><line nr="575" mi="0" ci="7" mb="0" cb="0"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><line nr="583" mi="0" ci="4" mb="2" cb="2"/><line nr="584" mi="3" ci="0" mb="0" cb="0"/><line nr="585" mi="0" ci="6" mb="2" cb="2"/><line nr="586" mi="6" ci="0" mb="0" cb="0"/><line nr="587" mi="7" ci="0" mb="2" cb="0"/><line nr="588" mi="1" ci="0" mb="0" cb="0"/><line nr="589" mi="0" ci="6" mb="0" cb="0"/><line nr="590" mi="0" ci="7" mb="0" cb="2"/><line nr="592" mi="0" ci="2" mb="0" cb="0"/><line nr="598" mi="0" ci="4" mb="2" cb="2"/><line nr="599" mi="3" ci="0" mb="0" cb="0"/><line nr="600" mi="0" ci="6" mb="2" cb="2"/><line nr="601" mi="6" ci="0" mb="0" cb="0"/><line nr="602" mi="7" ci="0" mb="2" cb="0"/><line nr="603" mi="1" ci="0" mb="0" cb="0"/><line nr="604" mi="0" ci="6" mb="0" cb="0"/><line nr="605" mi="0" ci="7" mb="0" cb="2"/><line nr="607" mi="0" ci="2" mb="0" cb="0"/><line nr="612" mi="0" ci="9" mb="1" cb="3"/><line nr="613" mi="0" ci="9" mb="1" cb="3"/><line nr="615" mi="0" ci="8" mb="0" cb="2"/><line nr="620" mi="1" ci="8" mb="2" cb="2"/><line nr="621" mi="1" ci="8" mb="2" cb="2"/><line nr="623" mi="2" ci="7" mb="2" cb="2"/><line nr="628" mi="1" ci="8" mb="2" cb="2"/><line nr="629" mi="1" ci="8" mb="2" cb="2"/><line nr="631" mi="4" ci="5" mb="3" cb="1"/><counter type="INSTRUCTION" missed="705" covered="235"/><counter type="BRANCH" missed="84" covered="44"/><counter type="LINE" missed="167" covered="52"/><counter type="COMPLEXITY" missed="97" covered="17"/><counter type="METHOD" missed="40" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DocumentFunctionException.java"><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ArgumentType.java"><line nr="29" mi="24" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InvalidValueForCastFunctionException.java"><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="6"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InvalidTypeFunctionException.java"><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="11" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ArgumentImpl.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="14" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="16" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="75" covered="9"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="17" covered="4"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InvalidArgumentFunctionException.java"><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="6"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFunctionExecutor.java"/><sourcefile name="AbstractFunction.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionService.java"><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="1" cb="1"/><line nr="137" mi="13" ci="0" mb="0" cb="0"/><line nr="138" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="80"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionLibrary.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="1" cb="1"/><line nr="75" mi="11" ci="0" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="2" ci="7" mb="1" cb="1"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="9" ci="0" mb="2" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="157"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="7" covered="40"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DefaultFunction.java"><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="1" cb="1"/><line nr="187" mi="3" ci="0" mb="2" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="2" cb="0"/><line nr="190" mi="9" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="7" ci="0" mb="2" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="5" cb="0"/><line nr="203" mi="3" ci="0" mb="2" cb="0"/><line nr="204" mi="9" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="7" ci="0" mb="2" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="2" cb="0"/><line nr="215" mi="9" ci="0" mb="0" cb="0"/><line nr="217" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="7" ci="0" mb="2" cb="0"/><line nr="222" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="2" cb="0"/><line nr="226" mi="9" ci="0" mb="0" cb="0"/><line nr="228" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="2" cb="0"/><line nr="233" mi="9" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="11" ci="0" mb="2" cb="0"/><line nr="250" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="2" cb="0"/><line nr="252" mi="9" ci="0" mb="0" cb="0"/><line nr="254" mi="10" ci="0" mb="0" cb="0"/><line nr="256" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="2" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="6" ci="0" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="11" ci="0" mb="2" cb="0"/><line nr="288" mi="7" ci="0" mb="2" cb="0"/><line nr="289" mi="2" ci="0" mb="2" cb="0"/><line nr="290" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="8" ci="0" mb="4" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="303" mi="4" ci="0" mb="2" cb="0"/><line nr="304" mi="9" ci="0" mb="0" cb="0"/><line nr="306" mi="9" ci="0" mb="0" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="4" ci="0" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="4" ci="5" mb="1" cb="1"/><line nr="326" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="1" cb="1"/><line nr="330" mi="0" ci="7" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="2"/><line nr="349" mi="0" ci="8" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="1" cb="1"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="1" ci="0" mb="0" cb="0"/><line nr="362" mi="14" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="34" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="1" cb="1"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="2" ci="0" mb="2" cb="0"/><line nr="377" mi="2" ci="0" mb="0" cb="0"/><line nr="379" mi="5" ci="0" mb="2" cb="0"/><line nr="380" mi="2" ci="0" mb="0" cb="0"/><line nr="382" mi="3" ci="0" mb="0" cb="0"/><line nr="383" mi="8" ci="0" mb="2" cb="0"/><line nr="384" mi="6" ci="0" mb="2" cb="0"/><line nr="385" mi="9" ci="0" mb="2" cb="0"/><line nr="386" mi="6" ci="0" mb="2" cb="0"/><line nr="387" mi="6" ci="0" mb="2" cb="0"/><line nr="388" mi="5" ci="0" mb="2" cb="0"/><line nr="393" mi="3" ci="0" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="0" cb="0"/><line nr="399" mi="2" ci="0" mb="0" cb="0"/><line nr="400" mi="3" ci="0" mb="0" cb="0"/><line nr="401" mi="2" ci="0" mb="0" cb="0"/><line nr="402" mi="3" ci="0" mb="0" cb="0"/><line nr="403" mi="2" ci="0" mb="0" cb="0"/><line nr="405" mi="3" ci="0" mb="0" cb="0"/><line nr="406" mi="3" ci="0" mb="2" cb="0"/><line nr="407" mi="5" ci="0" mb="0" cb="0"/><line nr="409" mi="14" ci="0" mb="0" cb="0"/><line nr="411" mi="3" ci="0" mb="2" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="416" mi="4" ci="0" mb="0" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="3" ci="0" mb="0" cb="0"/><line nr="436" mi="0" ci="5" mb="0" cb="0"/><line nr="437" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="3" mb="0" cb="0"/><line nr="439" mi="0" ci="1" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="3" ci="0" mb="0" cb="0"/><line nr="468" mi="3" ci="0" mb="0" cb="0"/><line nr="473" mi="0" ci="2" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="8" mb="0" cb="0"/><line nr="476" mi="0" ci="18" mb="0" cb="0"/><line nr="477" mi="0" ci="2" mb="0" cb="0"/><line nr="482" mi="0" ci="3" mb="1" cb="1"/><line nr="483" mi="2" ci="0" mb="0" cb="0"/><line nr="485" mi="0" ci="2" mb="1" cb="1"/><line nr="486" mi="2" ci="0" mb="0" cb="0"/><line nr="488" mi="0" ci="5" mb="1" cb="1"/><line nr="489" mi="2" ci="0" mb="0" cb="0"/><line nr="491" mi="0" ci="3" mb="0" cb="0"/><line nr="492" mi="0" ci="6" mb="1" cb="1"/><line nr="493" mi="2" ci="0" mb="0" cb="0"/><line nr="495" mi="1" ci="15" mb="2" cb="2"/><counter type="INSTRUCTION" missed="434" covered="205"/><counter type="BRANCH" missed="72" covered="13"/><counter type="LINE" missed="94" covered="44"/><counter type="COMPLEXITY" missed="50" covered="12"/><counter type="METHOD" missed="7" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FunctionUtils.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="4" cb="0"/><line nr="133" mi="9" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="0" mb="0" cb="0"/><line nr="137" mi="7" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="1" cb="1"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="1" cb="3"/><line nr="164" mi="9" ci="0" mb="0" cb="0"/><line nr="166" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="7" ci="0" mb="2" cb="0"/><line nr="208" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="226" mi="8" ci="0" mb="0" cb="0"/><line nr="242" mi="7" ci="0" mb="2" cb="0"/><line nr="248" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="2" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="2" cb="0"/><line nr="266" mi="9" ci="0" mb="0" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="4" ci="0" mb="2" cb="0"/><line nr="271" mi="9" ci="0" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="3" ci="0" mb="0" cb="0"/><line nr="277" mi="3" ci="0" mb="0" cb="0"/><line nr="282" mi="6" ci="0" mb="4" cb="0"/><line nr="283" mi="3" ci="0" mb="0" cb="0"/><line nr="285" mi="9" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="173" covered="34"/><counter type="BRANCH" missed="20" covered="4"/><counter type="LINE" missed="37" covered="10"/><counter type="COMPLEXITY" missed="22" covered="6"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFunctionLibrary.java"><line nr="61" mi="9" ci="0" mb="2" cb="0"/><line nr="77" mi="9" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ISequenceType.java"><line nr="35" mi="8" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="DateTimeFunctionException.java"><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1843" covered="1187"/><counter type="BRANCH" missed="216" covered="73"/><counter type="LINE" missed="425" covered="281"/><counter type="COMPLEXITY" missed="251" covered="100"/><counter type="METHOD" missed="116" covered="89"/><counter type="CLASS" missed="9" covered="18"/></package><package name="gov/nist/secauto/metaschema/core/metapath/function/library"><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnTrue" sourcefilename="FnTrue.java"><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnNot" sourcefilename="FnNot.java"><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="71"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnNot" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="90"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fnNot" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnBaseUri" sourcefilename="FnBaseUri.java"><method name="executeNoArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="91"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeOneArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="102"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnBaseUri" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;" line="125"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="39"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="25"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnResolveUri" sourcefilename="FnResolveUri.java"><method name="executeOneArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="100"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeTwoArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="142"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnResolveUri" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;" line="178"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnResolveUri" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;" line="195"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="126" covered="55"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="29" covered="35"/><counter type="COMPLEXITY" missed="13" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnDocumentUri" sourcefilename="FnDocumentUri.java"><method name="executeNoArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="89"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeOneArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="108"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnDocumentUri" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;" line="137"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="63" covered="39"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="25"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/CastFunction$ICastExecutor" sourcefilename="CastFunction.java"/><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnBoolean" sourcefilename="FnBoolean.java"><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="78"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnBoolean" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="98"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnBooleanAsPrimitive" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Z" line="116"><counter type="INSTRUCTION" missed="3" covered="27"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fnBooleanAsPrimitive" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Z" line="139"><counter type="INSTRUCTION" missed="68" covered="10"/><counter type="BRANCH" missed="15" covered="1"/><counter type="LINE" missed="14" covered="3"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="95" covered="61"/><counter type="BRANCH" missed="20" covered="4"/><counter type="LINE" missed="22" covered="26"/><counter type="COMPLEXITY" missed="14" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnFalse" sourcefilename="FnFalse.java"><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/NumericFunction" sourcefilename="NumericFunction.java"><method name="signature" desc="(Ljava/net/URI;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/metapath/function/library/NumericFunction$INumericExecutor;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="58"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signature" desc="(Ljava/lang/String;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/metapath/function/library/NumericFunction$INumericExecutor;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="63"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signature" desc="(Ljavax/xml/namespace/QName;Lgov/nist/secauto/metaschema/core/metapath/function/library/NumericFunction$INumericExecutor;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="79"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFunctionHandler" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/library/NumericFunction$INumericExecutor;)Lgov/nist/secauto/metaschema/core/metapath/function/library/NumericFunction;" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/library/NumericFunction$INumericExecutor;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="100"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="40"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="17"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnRound" sourcefilename="FnRound.java"><method name="executeTwoArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="83"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="34"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="18"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnDoc" sourcefilename="FnDoc.java"><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="76"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnDoc" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="100"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="97" covered="24"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="18" covered="15"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/DefaultFunctionLibrary" sourcefilename="DefaultFunctionLibrary.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="230"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="230"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnStartsWith" sourcefilename="FnStartsWith.java"><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="71"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnStartsWith" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="99"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="54" covered="29"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="16"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnData" sourcefilename="FnData.java"><method name="executeNoArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="93"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeOneArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="112"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnData" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="129"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnDataItem" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="146"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$fnData$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Ljava/util/stream/Stream;" line="131"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="47" covered="59"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="12" covered="32"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnPath" sourcefilename="FnPath.java"><method name="executeNoArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="93"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeOneArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="111"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="126"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;" line="157"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="74" covered="39"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="25"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnCompare" sourcefilename="FnCompare.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="75"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="32"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="20"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/MpRecurseDepth" sourcefilename="MpRecurseDepth.java"><method name="executeOneArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="102"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeTwoArg" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="118"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recurseDepth" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="134"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recurseDepth" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="148"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$recurseDepth$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="150"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="97" covered="55"/><counter type="LINE" missed="19" covered="35"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/CastFunction" sourcefilename="CastFunction.java"><method name="signature" desc="(Ljava/net/URI;Ljava/lang/String;Ljava/lang/Class;Lgov/nist/secauto/metaschema/core/metapath/function/library/CastFunction$ICastExecutor;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="54"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signature" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;Lgov/nist/secauto/metaschema/core/metapath/function/library/CastFunction$ICastExecutor;)Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="67"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCastExecutor" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/library/CastFunction$ICastExecutor;)Lgov/nist/secauto/metaschema/core/metapath/function/library/CastFunction;" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/library/CastFunction$ICastExecutor;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="97"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="41"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="18"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/NumericFunction$INumericExecutor" sourcefilename="NumericFunction.java"/><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnStaticBaseUri" sourcefilename="FnStaticBaseUri.java"><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="66"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnStaticBaseUri" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;" line="83"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="21"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/function/library/FnExists" sourcefilename="FnExists.java"><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="71"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fnExists" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="84"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="24"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FnCompare.java"><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="4" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="32"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="20"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnPath.java"><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="2" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="9" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="9" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="74" covered="39"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="25"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnFalse.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnStaticBaseUri.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="17" covered="21"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnStartsWith.java"><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="2" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="2" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="29"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="16"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultFunctionLibrary.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="7" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="7" mb="0" cb="0"/><line nr="223" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="230"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnRound.java"><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="34"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="18"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnNot.java"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="2"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnData.java"><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="8" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="1" cb="1"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="59"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="12" covered="32"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnDocumentUri.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="2" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="8" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="63" covered="39"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="25"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnDoc.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="9" ci="0" mb="2" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="9" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="2" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="4" cb="0"/><line nr="112" mi="9" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="7" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="9" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="97" covered="24"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="18" covered="15"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnExists.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="20" covered="24"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MpRecurseDepth.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="120" mi="8" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="8" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="9" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="97" covered="55"/><counter type="LINE" missed="19" covered="35"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnBoolean.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="7" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="2" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="1" cb="1"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="1" cb="1"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="1" cb="1"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="2" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="7" ci="0" mb="2" cb="0"/><line nr="144" mi="4" ci="0" mb="2" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="7" ci="0" mb="2" cb="0"/><line nr="149" mi="4" ci="0" mb="2" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="7" ci="0" mb="2" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="9" ci="0" mb="0" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="61"/><counter type="BRANCH" missed="20" covered="4"/><counter type="LINE" missed="22" covered="26"/><counter type="COMPLEXITY" missed="14" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnTrue.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnBaseUri.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="2" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="7" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="39"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="25"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NumericFunction.java"><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="40"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="17"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FnResolveUri.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="2" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="7" ci="0" mb="2" cb="0"/><line nr="142" mi="9" ci="0" mb="2" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="2" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="8" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="2" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="2" cb="0"/><line nr="178" mi="7" ci="0" mb="2" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="2" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="126" covered="55"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="29" covered="35"/><counter type="COMPLEXITY" missed="13" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CastFunction.java"><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="41"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="18"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="897" covered="892"/><counter type="BRANCH" missed="92" covered="10"/><counter type="LINE" missed="210" covered="421"/><counter type="COMPLEXITY" missed="90" covered="33"/><counter type="METHOD" missed="41" covered="31"/><counter type="CLASS" missed="0" covered="19"/></package><package name="gov/nist/secauto/metaschema/core/metapath/item/node"><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AbstractFlagInstanceNodeItem" sourcefilename="AbstractFlagInstanceNodeItem.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagInstance;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentContentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;" line="65"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseUri" desc="()Ljava/net/URI;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="12"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFeatureFlagContainerItem" sourcefilename="IFeatureFlagContainerItem.java"><method name="getFlags" desc="()Ljava/util/Collection;" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlagByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelItems" desc="()Ljava/util/Collection;" line="64"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelItemsByName" desc="(Ljava/lang/String;)Ljava/util/List;" line="70"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFeatureOrhpanedDefinitionModelNodeItem" sourcefilename="IFeatureOrhpanedDefinitionModelNodeItem.java"><method name="getPosition" desc="()I" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentContentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="59"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/DefaultNodeItemFactory" sourcefilename="DefaultNodeItemFactory.java"><method name="instance" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/DefaultNodeItemFactory;" line="61"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDataModelSupplier" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;)Ljava/util/function/Supplier;" line="71"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDataModelSupplier" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)Ljava/util/function/Supplier;" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDataModelSupplier" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IRootAssemblyNodeItem;)Ljava/util/function/Supplier;" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateFlags" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;)Ljava/util/Map;" line="108"><counter type="INSTRUCTION" missed="6" covered="48"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateModelItems" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)Ljava/util/Map;" line="133"><counter type="INSTRUCTION" missed="6" covered="62"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newMetaschemaModelSupplier" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;)Ljava/util/function/Supplier;" line="154"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newMetaschemaModelSupplier" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;)Ljava/util/function/Supplier;" line="185"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newMetaschemaModelSupplier" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)Ljava/util/function/Supplier;" line="194"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateMetaschemaFlags" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;)Ljava/util/Map;" line="204"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateMetaschemaModelItems" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)Ljava/util/Map;" line="217"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$newMetaschemaModelSupplier$10" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="195"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$newMetaschemaModelSupplier$9" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureFlagContainerItem$FlagContainer;" line="186"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$newMetaschemaModelSupplier$8" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="155"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$newMetaschemaModelSupplier$7" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="171"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$newMetaschemaModelSupplier$6" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;" line="169"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$newMetaschemaModelSupplier$5" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;" line="164"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$newMetaschemaModelSupplier$4" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;" line="163"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$generateModelItems$3" desc="(Lgov/nist/secauto/metaschema/core/model/INamedModelInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;" line="144"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$newDataModelSupplier$2" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IRootAssemblyNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="90"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$newDataModelSupplier$1" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="81"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$newDataModelSupplier$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureFlagContainerItem$FlagContainer;" line="72"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="147" covered="245"/><counter type="BRANCH" missed="18" covered="10"/><counter type="LINE" missed="25" covered="52"/><counter type="COMPLEXITY" missed="19" covered="18"/><counter type="METHOD" missed="7" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/FlagDefinitionNodeItemImpl" sourcefilename="FlagDefinitionNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagInstance;" line="59"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AssemblyInstanceNodeItemImpl" sourcefilename="AssemblyInstanceNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;ILjava/lang/Object;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="60"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPosition" desc="()I" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem" sourcefilename="IAssemblyNodeItem.java"><method name="getNodeItemType" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/NodeItemType;" line="41"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseUri" desc="()Ljava/net/URI;" line="52"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Lgov/nist/secauto/metaschema/core/metapath/format/IPathFormatter;)Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AbstractNodeItemFactory" sourcefilename="AbstractNodeItemFactory.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDocumentNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Ljava/net/URI;Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newModuleNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IModule;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFieldNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;" line="70"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFieldNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;" line="80"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFieldNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;" line="90"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFieldNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;ILjava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;" line="99"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAssemblyNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="106"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAssemblyNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="116"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAssemblyNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Ljava/net/URI;Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="127"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAssemblyNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="138"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newAssemblyNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;ILjava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="160"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCycledInstance" desc="(Ljava/lang/String;Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="168"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newModelItem" desc="(Lgov/nist/secauto/metaschema/core/model/INamedModelInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;ILjava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;" line="205"><counter type="INSTRUCTION" missed="17" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newModelItem" desc="(Lgov/nist/secauto/metaschema/core/model/INamedModelInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;" line="231"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamedModelInstances" desc="(Lgov/nist/secauto/metaschema/core/model/IModelContainer;)Ljava/util/stream/Stream;" line="250"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getNamedModelInstances$0" desc="(Lgov/nist/secauto/metaschema/core/model/IModelInstance;)Ljava/util/stream/Stream;" line="253"><counter type="INSTRUCTION" missed="17" covered="13"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="160" covered="86"/><counter type="BRANCH" missed="22" covered="4"/><counter type="LINE" missed="31" covered="16"/><counter type="COMPLEXITY" missed="20" covered="10"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFeatureRequiredDataItem" sourcefilename="IFeatureRequiredDataItem.java"><method name="hasValue" desc="()Z" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFeatureNullableAtomicValuedItem" sourcefilename="IFeatureNullableAtomicValuedItem.java"><method name="newAtomicItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="47"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AssemblyOrphanedDefinitionDataNodeItemImpl" sourcefilename="AssemblyOrphanedDefinitionDataNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Ljava/net/URI;Ljava/lang/Object;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/CycledAssemblyInstanceNodeItemImpl" sourcefilename="CycledAssemblyInstanceNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)V" line="58"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCycledNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlags" desc="()Ljava/util/Collection;" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlagByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelItems" desc="()Ljava/util/Collection;" line="79"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelItemsByName" desc="(Ljava/lang/String;)Ljava/util/List;" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPosition" desc="()I" line="90"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IDefinitionNodeItem" sourcefilename="IDefinitionNodeItem.java"><method name="getName" desc="()Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/INodeItemVisitable" sourcefilename="INodeItemVisitable.java"/><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem" sourcefilename="IModuleNodeItem.java"><method name="getDocumentUri" desc="()Ljava/net/URI;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeItemType" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/NodeItemType;" line="61"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;" line="66"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Lgov/nist/secauto/metaschema/core/metapath/format/IPathFormatter;)Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/DocumentNodeItemImpl" sourcefilename="DocumentNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Ljava/lang/Object;Ljava/net/URI;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="51"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRootAssemblyNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IRootAssemblyNodeItem;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocumentUri" desc="()Ljava/net/URI;" line="65"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="71"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AbstractGlobalDefinitionNodeItem" sourcefilename="AbstractGlobalDefinitionNodeItem.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaschemaNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;" line="56"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseUri" desc="()Ljava/net/URI;" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AssemblyOrphanedDefinitionNodeItemImpl" sourcefilename="AssemblyOrphanedDefinitionNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Ljava/net/URI;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/RootAssemblyValuedNodeItemImpl" sourcefilename="RootAssemblyValuedNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;Ljava/lang/Object;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="51"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocumentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="65"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentContentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="71"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/INodeItemFactory" sourcefilename="INodeItemFactory.java"><method name="instance" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemFactory;" line="59"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFlagNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFlagNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;" line="119"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFlagNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;" line="138"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAssemblyNodeItem" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="220"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="21"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem" sourcefilename="IModelNodeItem.java"/><class name="gov/nist/secauto/metaschema/core/metapath/item/node/FlagInstanceNoValueNodeItemImpl" sourcefilename="FlagInstanceNoValueNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;)V" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem" sourcefilename="IFlagNodeItem.java"><method name="getNodeItemType" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/NodeItemType;" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseUri" desc="()Ljava/net/URI;" line="64"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlags" desc="()Ljava/util/Collection;" line="76"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlagByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;" line="85"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flags" desc="()Ljava/util/stream/Stream;" line="96"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelItems" desc="()Ljava/util/Collection;" line="107"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelItemsByName" desc="(Ljava/lang/String;)Ljava/util/List;" line="117"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="modelItems" desc="()Ljava/util/stream/Stream;" line="129"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Lgov/nist/secauto/metaschema/core/metapath/format/IPathFormatter;)Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/INodeItemVisitor" sourcefilename="INodeItemVisitor.java"/><class name="gov/nist/secauto/metaschema/core/metapath/item/node/FieldInstanceNoValueNodeItemImpl" sourcefilename="FieldInstanceNoValueNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="51"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureFlagContainerItem$FlagContainer;" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPosition" desc="()I" line="63"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/ICycledAssemblyNodeItem" sourcefilename="ICycledAssemblyNodeItem.java"/><class name="gov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator" sourcefilename="INodeItemGenerator.java"/><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AbstractInstanceNodeItem" sourcefilename="AbstractInstanceNodeItem.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/INamedInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IDefinition;" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Lgov/nist/secauto/metaschema/core/model/INamedInstance;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentContentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IRootAssemblyNodeItem" sourcefilename="IRootAssemblyNodeItem.java"><method name="getName" desc="()Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentContentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;" line="68"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IAssemblyInstance;" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IRootAssemblyNodeItem;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPosition" desc="()I" line="85"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Lgov/nist/secauto/metaschema/core/metapath/format/IPathFormatter;)Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AbstractDefinitionNodeItem" sourcefilename="AbstractDefinitionNodeItem.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IDefinition;" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/FieldGlobalDefinitionNodeItemImpl" sourcefilename="FieldGlobalDefinitionNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureFlagContainerItem$FlagContainer;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFeatureFlagContainerItem$FlagContainer" sourcefilename="IFeatureFlagContainerItem.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlagByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;" line="86"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlags" desc="()Ljava/util/Collection;" line="92"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/FlagInstanceNodeItemImpl" sourcefilename="FlagInstanceNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;Ljava/lang/Object;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAtomicValue" desc="()Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAtomicItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="18"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/FieldInstanceNodeItemImpl" sourcefilename="FieldInstanceNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;ILjava/lang/Object;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureFlagContainerItem$FlagContainer;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()I" line="83"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAtomicValue" desc="()Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAtomicItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="34"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFeatureNoDataAtomicValuedItem" sourcefilename="IFeatureNoDataAtomicValuedItem.java"><method name="toAtomicItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AbstractNodeItemVisitor" sourcefilename="AbstractNodeItemVisitor.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemVisitable;Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFlags" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/Object;)Ljava/lang/Object;" line="66"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitModelChildren" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/Object;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shouldVisitNextChild" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/Object;Ljava/lang/Object;)Z" line="125"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shouldVisitNextChild" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;Ljava/lang/Object;Ljava/lang/Object;)Z" line="148"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregateResult" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="173"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitDocument" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;Ljava/lang/Object;)Ljava/lang/Object;" line="179"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFlag" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;Ljava/lang/Object;)Ljava/lang/Object;" line="186"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitField" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;Ljava/lang/Object;)Ljava/lang/Object;" line="192"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAssembly" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Ljava/lang/Object;)Ljava/lang/Object;" line="198"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitMetaschema" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;Ljava/lang/Object;)Ljava/lang/Object;" line="204"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="142" covered="7"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="28" covered="2"/><counter type="COMPLEXITY" missed="17" covered="3"/><counter type="METHOD" missed="10" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer" sourcefilename="IFeatureModelContainerItem.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/util/Map;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModelItemsByName" desc="(Ljava/lang/String;)Ljava/util/List;" line="87"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModelItems" desc="()Ljava/util/Collection;" line="99"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AssemblyGlobalDefinitionNodeItemImpl" sourcefilename="AssemblyGlobalDefinitionNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="56"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem" sourcefilename="IFeatureModelContainerItem.java"><method name="getModelItems" desc="()Ljava/util/Collection;" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModelItemsByName" desc="(Ljava/lang/String;)Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AbstractModelInstanceNodeItem" sourcefilename="AbstractModelInstanceNodeItem.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/INamedInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFeatureOrhpanedDefinitionNodeItem" sourcefilename="IFeatureOrhpanedDefinitionNodeItem.java"><method name="getInstance" desc="()Lgov/nist/secauto/metaschema/core/model/INamedInstance;" line="49"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentContentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="2"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem" sourcefilename="IDocumentNodeItem.java"><method name="getNodeItemType" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/NodeItemType;" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentContentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="59"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseUri" desc="()Ljava/net/URI;" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRootNodeItemByName" desc="(Ljava/lang/String;)Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Lgov/nist/secauto/metaschema/core/metapath/format/IPathFormatter;)Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="101"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getRootNodeItemByName$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;)Ljava/util/stream/Stream;" line="85"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AssemblyInstanceNoValueNodeItemImpl" sourcefilename="AssemblyInstanceNoValueNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyInstance;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="51"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPosition" desc="()I" line="63"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFeatureNoDataItem" sourcefilename="IFeatureNoDataItem.java"><method name="getValue" desc="()Ljava/lang/Object;" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasValue" desc="()Z" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/FieldOrphanedDefinitionNodeItemImpl" sourcefilename="FieldOrphanedDefinitionNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Ljava/net/URI;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="54"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureFlagContainerItem$FlagContainer;" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/ModuleNodeItemImpl" sourcefilename="ModuleNodeItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IModule;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemGenerator;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModule" desc="()Lgov/nist/secauto/metaschema/core/model/IModule;" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModel" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFeatureModelContainerItem$ModelContainer;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/AbstractOrphanedDefinitionNodeItem" sourcefilename="AbstractOrphanedDefinitionNodeItem.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;Ljava/net/URI;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseUri" desc="()Ljava/net/URI;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem" sourcefilename="IFieldNodeItem.java"><method name="getNodeItemType" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/NodeItemType;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodeItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;" line="49"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseUri" desc="()Ljava/net/URI;" line="55"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Lgov/nist/secauto/metaschema/core/metapath/format/IPathFormatter;)Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItemVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/INodeItem" sourcefilename="INodeItem.java"><method name="toValue" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetapath" desc="()Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPathStream" desc="()Ljava/util/stream/Stream;" line="133"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ancestor" desc="()Ljava/util/stream/Stream;" line="146"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ancestorOrSelf" desc="()Ljava/util/stream/Stream;" line="157"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ancestorsOf" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="171"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="descendant" desc="()Ljava/util/stream/Stream;" line="183"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decendantsOf" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="198"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="descendantOrSelf" desc="()Ljava/util/stream/Stream;" line="215"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flags" desc="()Ljava/util/stream/Stream;" line="249"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="modelItems" desc="()Ljava/util/stream/Stream;" line="291"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$modelItems$1" desc="(Ljava/util/List;)Ljava/util/stream/Stream;" line="291"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$decendantsOf$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="201"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="101" covered="12"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="19" covered="2"/><counter type="COMPLEXITY" missed="17" covered="3"/><counter type="METHOD" missed="11" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/node/NodeItemType" sourcefilename="NodeItemType.java"><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CycledAssemblyInstanceNodeItemImpl.java"><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IDefinitionNodeItem.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssemblyInstanceNodeItemImpl.java"><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractFlagInstanceNodeItem.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="12"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFeatureNoDataAtomicValuedItem.java"><line nr="40" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IAssemblyNodeItem.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="7" ci="0" mb="2" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="INodeItemVisitor.java"/><sourcefile name="AbstractInstanceNodeItem.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FieldGlobalDefinitionNodeItemImpl.java"><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractNodeItemFactory.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="2" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="2" cb="0"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="2" cb="0"/><line nr="149" mi="7" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="9" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="9" ci="0" mb="4" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="2" cb="0"/><line nr="176" mi="6" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="1" cb="1"/><line nr="206" mi="9" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="1" cb="1"/><line nr="208" mi="0" ci="9" mb="0" cb="0"/><line nr="210" mi="8" ci="0" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="2" cb="0"/><line nr="232" mi="7" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="2" cb="0"/><line nr="234" mi="7" ci="0" mb="0" cb="0"/><line nr="236" mi="8" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="8" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="2" cb="2"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="2" cb="0"/><line nr="257" mi="6" ci="0" mb="0" cb="0"/><line nr="259" mi="8" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="160" covered="86"/><counter type="BRANCH" missed="22" covered="4"/><counter type="LINE" missed="31" covered="16"/><counter type="COMPLEXITY" missed="20" covered="10"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractGlobalDefinitionNodeItem.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="7"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractModelInstanceNodeItem.java"><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFeatureNoDataItem.java"><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ModuleNodeItemImpl.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssemblyInstanceNoValueNodeItemImpl.java"><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FlagInstanceNoValueNodeItemImpl.java"><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NodeItemType.java"><line nr="33" mi="0" ci="24" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFeatureOrhpanedDefinitionNodeItem.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="2"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FlagDefinitionNodeItemImpl.java"><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ICycledAssemblyNodeItem.java"/><sourcefile name="IFlagNodeItem.java"><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="2" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IModuleNodeItem.java"><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="INodeItemVisitable.java"/><sourcefile name="DefaultNodeItemFactory.java"><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="4" ci="3" mb="1" cb="1"/><line nr="112" mi="0" ci="13" mb="0" cb="2"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="2" ci="6" mb="1" cb="1"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="4" ci="3" mb="1" cb="1"/><line nr="137" mi="0" ci="15" mb="0" cb="2"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="4" ci="3" mb="1" cb="1"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="2" ci="6" mb="1" cb="1"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="9" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="9" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="6" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="13" ci="0" mb="2" cb="0"/><line nr="207" mi="7" ci="0" mb="2" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="6" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="8" ci="0" mb="2" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="15" ci="0" mb="2" cb="0"/><line nr="220" mi="7" ci="0" mb="2" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="7" ci="0" mb="0" cb="0"/><line nr="223" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="147" covered="245"/><counter type="BRANCH" missed="18" covered="10"/><counter type="LINE" missed="25" covered="52"/><counter type="COMPLEXITY" missed="19" covered="18"/><counter type="METHOD" missed="7" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssemblyGlobalDefinitionNodeItemImpl.java"><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="INodeItemFactory.java"><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="21"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFeatureFlagContainerItem.java"><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="14"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AssemblyOrphanedDefinitionNodeItemImpl.java"><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractOrphanedDefinitionNodeItem.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RootAssemblyValuedNodeItemImpl.java"><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FieldOrphanedDefinitionNodeItemImpl.java"><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IFeatureRequiredDataItem.java"><line nr="42" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AssemblyOrphanedDefinitionDataNodeItemImpl.java"><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFeatureNullableAtomicValuedItem.java"><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="2" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractNodeItemVisitor.java"><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="11" ci="0" mb="2" cb="0"/><line nr="68" mi="7" ci="0" mb="2" cb="0"/><line nr="69" mi="7" ci="0" mb="2" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="11" ci="0" mb="2" cb="0"/><line nr="92" mi="10" ci="0" mb="2" cb="0"/><line nr="93" mi="7" ci="0" mb="2" cb="0"/><line nr="94" mi="7" ci="0" mb="2" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="12" ci="0" mb="0" cb="0"/><line nr="204" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="142" covered="7"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="28" covered="2"/><counter type="COMPLEXITY" missed="17" covered="3"/><counter type="METHOD" missed="10" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFieldNodeItem.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="2" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FlagInstanceNodeItemImpl.java"><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="3" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="18"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IRootAssemblyNodeItem.java"><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="INodeItemGenerator.java"/><sourcefile name="IFeatureOrhpanedDefinitionModelNodeItem.java"><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IFeatureModelContainerItem.java"><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="2" ci="4" mb="1" cb="1"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FieldInstanceNoValueNodeItemImpl.java"><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractDefinitionNodeItem.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IModelNodeItem.java"/><sourcefile name="DocumentNodeItemImpl.java"><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IDocumentNodeItem.java"><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="2" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="2" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FieldInstanceNodeItemImpl.java"><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="34"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="INodeItem.java"><line nr="45" mi="0" ci="3" mb="1" cb="1"/><line nr="72" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="11" ci="0" mb="2" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="8" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="12" ci="0" mb="2" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="201" mi="8" ci="0" mb="4" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="215" mi="8" ci="0" mb="0" cb="0"/><line nr="249" mi="4" ci="0" mb="0" cb="0"/><line nr="291" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="101" covered="12"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="19" covered="2"/><counter type="COMPLEXITY" missed="17" covered="3"/><counter type="METHOD" missed="11" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1040" covered="684"/><counter type="BRANCH" missed="78" covered="18"/><counter type="LINE" missed="243" covered="158"/><counter type="COMPLEXITY" missed="185" covered="76"/><counter type="METHOD" missed="140" covered="73"/><counter type="CLASS" missed="18" covered="27"/></package><package name="gov/nist/secauto/metaschema/core/model/validation"><class name="gov/nist/secauto/metaschema/core/model/validation/IValidationResult$1" sourcefilename="IValidationResult.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPassing" desc="()Z" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHighestSeverity" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFindings" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/validation/JsonSchemaContentValidator$JsonValidationResult" sourcefilename="JsonSchemaContentValidator.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="154"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHighestSeverity" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;" line="160"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFindings" desc="()Ljava/util/List;" line="165"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/validation/JsonSchemaContentValidator$JsonValidationFinding" sourcefilename="JsonSchemaContentValidator.java"><method name="&lt;init&gt;" desc="(Lorg/everit/json/schema/ValidationException;Ljava/net/URI;)V" line="121"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSeverity" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;" line="128"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocumentUri" desc="()Ljava/net/URI;" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="139"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCause" desc="()Lorg/everit/json/schema/ValidationException;" line="145"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/validation/IValidationFinding" sourcefilename="IValidationFinding.java"/><class name="gov/nist/secauto/metaschema/core/model/validation/IValidationResult" sourcefilename="IValidationResult.java"><method name="isPassing" desc="()Z" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/validation/JsonSchemaContentValidator" sourcefilename="JsonSchemaContentValidator.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="61"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/json/JSONObject;)V" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/json/JSONTokener;)V" line="69"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/everit/json/schema/Schema;)V" line="72"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Ljava/io/InputStream;Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;" line="80"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Lorg/json/JSONObject;Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;" line="92"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleValidationException" desc="(Lorg/everit/json/schema/ValidationException;Ljava/net/URI;)Ljava/util/stream/Stream;" line="107"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$handleValidationException$0" desc="(Ljava/net/URI;Lorg/everit/json/schema/ValidationException;)Ljava/util/stream/Stream;" line="110"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="110" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/validation/XmlSchemaContentValidator$XmlValidationErrorHandler" sourcefilename="XmlSchemaContentValidator.java"><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="142"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocumentUri" desc="()Ljava/net/URI;" line="153"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustHighestSeverity" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;)V" line="157"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="warning" desc="(Lorg/xml/sax/SAXParseException;)V" line="165"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="error" desc="(Lorg/xml/sax/SAXParseException;)V" line="172"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fatalError" desc="(Lorg/xml/sax/SAXParseException;)V" line="179"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFindings" desc="()Ljava/util/List;" line="187"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHighestSeverity" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;" line="192"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/validation/AggregateValidationResult" sourcefilename="AggregateValidationResult.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;)V" line="46"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="(Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;)Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="([Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;)Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;" line="56"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregate" desc="(Ljava/util/stream/Stream;)Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;" line="65"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHighestSeverity" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;" line="81"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFindings" desc="()Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$aggregate$0" desc="(Ljava/util/List;Ljava/util/concurrent/atomic/AtomicReference;Lgov/nist/secauto/metaschema/core/model/validation/IValidationFinding;)V" line="69"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/validation/XmlSchemaContentValidator" sourcefilename="XmlSchemaContentValidator.java"><method name="toSchema" desc="(Ljava/util/List;)Ljavax/xml/validation/Schema;" line="59"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="73"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljavax/xml/validation/Schema;)V" line="76"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSchema" desc="()Ljavax/xml/validation/Schema;" line="81"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Ljava/io/InputStream;Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;" line="86"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/validation/IContentValidator" sourcefilename="IContentValidator.java"><method name="validate" desc="(Ljava/nio/file/Path;)Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;" line="63"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Ljava/net/URL;)Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;" line="81"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateWithXmlSchema" desc="(Ljava/net/URI;Ljava/util/List;)Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;" line="126"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateWithJsonSchema" desc="(Ljava/net/URI;Lorg/json/JSONObject;)Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;" line="145"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/validation/XmlSchemaContentValidator$XmlValidationFinding" sourcefilename="XmlSchemaContentValidator.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Lorg/xml/sax/SAXParseException;Ljava/net/URI;)V" line="108"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSeverity" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;" line="116"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocumentUri" desc="()Ljava/net/URI;" line="122"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCause" desc="()Lorg/xml/sax/SAXParseException;" line="135"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/validation/AbstractContentValidator" sourcefilename="AbstractContentValidator.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/model/validation/IValidationResult;" line="43"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/validation/ValidatingNodeItemVisitor" sourcefilename="ValidatingNodeItemVisitor.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultResult" desc="()Ljava/lang/Boolean;" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFlag" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintValidator;)Ljava/lang/Boolean;" line="48"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitField" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintValidator;)Ljava/lang/Boolean;" line="54"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAssembly" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintValidator;)Ljava/lang/Boolean;" line="60"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitMetaschema" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintValidator;)Ljava/lang/Boolean;" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AggregateValidationResult.java"><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="16" ci="0" mb="2" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="2" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="2" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="10" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IContentValidator.java"><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="7" ci="0" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XmlSchemaContentValidator.java"><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="2" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="13" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="8" ci="0" mb="2" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="2" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="11" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="11" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="11" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="204" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="50" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="JsonSchemaContentValidator.java"><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="13" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="7" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="8" ci="0" mb="2" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="158" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="ValidatingNodeItemVisitor.java"><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IValidationResult.java"><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractContentValidator.java"><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IValidationFinding.java"/><counter type="INSTRUCTION" missed="562" covered="18"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="136" covered="2"/><counter type="COMPLEXITY" missed="65" covered="4"/><counter type="METHOD" missed="58" covered="3"/><counter type="CLASS" missed="10" covered="2"/></package><package name="gov/nist/secauto/metaschema/core/datatype"><class name="gov/nist/secauto/metaschema/core/datatype/ICustomJavaDataType" sourcefilename="ICustomJavaDataType.java"/><class name="gov/nist/secauto/metaschema/core/datatype/AbstractCustomJavaDataType" sourcefilename="AbstractCustomJavaDataType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="8"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/AbstractDataTypeProvider" sourcefilename="AbstractDataTypeProvider.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaTypeAdapters" desc="()Ljava/util/List;" line="50"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerDatatype" desc="(Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;)V" line="64"><counter type="INSTRUCTION" missed="8" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/IDataTypeProvider" sourcefilename="IDataTypeProvider.java"/><class name="gov/nist/secauto/metaschema/core/datatype/AbstractDataTypeAdapter" sourcefilename="AbstractDataTypeAdapter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="81"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaClass" desc="()Ljava/lang/Class;" line="86"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isParsingStartElement" desc="()Z" line="91"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canHandleQName" desc="(Ljavax/xml/namespace/QName;)Z" line="96"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultJsonValueKey" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnrappedValueAllowedInXml" desc="()Z" line="106"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isXmlMixed" desc="()Z" line="111"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Lorg/codehaus/stax2/XMLEventReader2;)Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="158"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeXmlValue" desc="(Ljava/lang/Object;Ljavax/xml/stream/events/StartElement;Lorg/codehaus/stax2/evt/XMLEventFactory2;Ljavax/xml/stream/XMLEventWriter;)V" line="169"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeXmlValue" desc="(Ljava/lang/Object;Ljavax/xml/namespace/QName;Lorg/codehaus/stax2/XMLStreamWriter2;)V" line="179"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeJsonValue" desc="(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V" line="185"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="197"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castInternal" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="225"><counter type="INSTRUCTION" missed="20" covered="11"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="146" covered="41"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="40" covered="15"/><counter type="COMPLEXITY" missed="15" covered="6"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter" sourcefilename="IDataTypeAdapter.java"><method name="getPreferredName" desc="()Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAtomic" desc="()Z" line="137"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseAndSupply" desc="(Ljava/lang/String;)Ljava/util/function/Supplier;" line="263"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseAndSupply" desc="(Lorg/codehaus/stax2/XMLEventReader2;)Ljava/util/function/Supplier;" line="284"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseAndSupply" desc="(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/util/function/Supplier;" line="304"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$parseAndSupply$2" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="305"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$parseAndSupply$1" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="285"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$parseAndSupply$0" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="264"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/datatype/DataTypeService" sourcefilename="DataTypeService.java"><method name="getInstance" desc="()Lgov/nist/secauto/metaschema/core/datatype/DataTypeService;" line="66"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaTypeAdapterByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaTypeAdapterByClass" desc="(Ljava/lang/Class;)Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="99"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="load" desc="()V" line="109"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$load$7" desc="(Ljava/lang/Class;Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;)Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="138"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$load$6" desc="(Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;)Ljava/lang/Class;" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$load$5" desc="(Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;)Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="122"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$load$4" desc="(Ljava/util/Map$Entry;)Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="120"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$load$3" desc="(Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;)Ljava/util/stream/Stream;" line="116"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$load$2" desc="(Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;Ljava/lang/String;)Ljava/util/Map$Entry;" line="117"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$load$1" desc="(Lgov/nist/secauto/metaschema/core/datatype/IDataTypeProvider;)Ljava/util/stream/Stream;" line="112"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="()Lgov/nist/secauto/metaschema/core/datatype/DataTypeService;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="97"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="26"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/AbstractCustomJavaDataTypeAdapter" sourcefilename="AbstractCustomJavaDataTypeAdapter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/datatype/ICustomJavaDataType;" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ICustomJavaDataType.java"/><sourcefile name="IDataTypeAdapter.java"><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="8" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="8" ci="0" mb="0" cb="0"/><line nr="304" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IDataTypeProvider.java"/><sourcefile name="AbstractCustomJavaDataType.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="8"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DataTypeService.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="2" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="2" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="97"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="26"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractCustomJavaDataTypeAdapter.java"><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractDataTypeAdapter.java"><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="6" ci="0" mb="2" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="16" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="2" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="1" cb="1"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="2"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="12" ci="0" mb="0" cb="0"/><line nr="231" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="146" covered="41"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="40" covered="15"/><counter type="COMPLEXITY" missed="15" covered="6"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractDataTypeProvider.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="1" cb="1"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="252" covered="185"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="64" covered="55"/><counter type="COMPLEXITY" missed="34" covered="22"/><counter type="METHOD" missed="27" covered="21"/><counter type="CLASS" missed="1" covered="5"/></package><package name="gov/nist/secauto/metaschema/core/metapath/format"><class name="gov/nist/secauto/metaschema/core/metapath/format/MetapathFormatter" sourcefilename="MetapathFormatter.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatMetaschema" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;)Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatDocument" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;)Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatRootAssembly" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IRootAssemblyNodeItem;)Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatAssembly" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatField" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;)Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatFlag" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;)Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatModelPathSegment" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModelNodeItem;)Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="3"/><counter type="LINE" missed="11" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/format/IPathFormatter" sourcefilename="IPathFormatter.java"><method name="format" desc="(Lgov/nist/secauto/metaschema/core/metapath/format/IPathSegment;)Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$format$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/format/IPathSegment;)Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="5"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/format/IPathSegment" sourcefilename="IPathSegment.java"><method name="toPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/format/IPathFormatter;)Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPath" desc="()Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="MetapathFormatter.java"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="3"/><counter type="LINE" missed="11" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IPathFormatter.java"><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="5"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IPathSegment.java"><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="57" covered="8"/><counter type="LINE" missed="16" covered="2"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="1" covered="2"/></package><package name="gov/nist/secauto/metaschema/core/resource"><class name="gov/nist/secauto/metaschema/core/resource/AbstractResourceLoader" sourcefilename="AbstractResourceLoader.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUriResolver" desc="()Lgov/nist/secauto/metaschema/core/model/IUriResolver;" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUriResolver" desc="(Lgov/nist/secauto/metaschema/core/model/IUriResolver;)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="(Ljava/net/URI;)Ljava/net/URI;" line="61"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AbstractResourceLoader.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="gov/nist/secauto/metaschema/core/model/constraint"><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultUniqueConstraint$Builder" sourcefilename="DefaultUniqueConstraint.java"><method name="getThis" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultUniqueConstraint$Builder;" line="102"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultUniqueConstraint;" line="107"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstraint" sourcefilename="IConstraint.java"><method name="matchTargets" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IDefinitionNodeItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="147"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchTargets" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IDefinitionNodeItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="164"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultConstraintValidator$Visitor" sourcefilename="DefaultConstraintValidator.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/DefaultConstraintValidator;)V" line="550"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDocument" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;Ljava/lang/Void;)Ljava/lang/Void;" line="554"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFlag" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;Ljava/lang/Void;)Ljava/lang/Void;" line="559"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitField" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;Ljava/lang/Void;)Ljava/lang/Void;" line="567"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAssembly" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Ljava/lang/Void;)Ljava/lang/Void;" line="575"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitMetaschema" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;Ljava/lang/Void;)Ljava/lang/Void;" line="582"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultResult" desc="()Ljava/lang/Void;" line="588"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="23"/><counter type="LINE" missed="9" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstraintVisitor" sourcefilename="IConstraintVisitor.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint$Builder" sourcefilename="DefaultAllowedValuesConstraint.java"><method name="&lt;init&gt;" desc="()V" line="133"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowedValue" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValue;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint$Builder;" line="144"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowedValues" desc="(Ljava/util/Map;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint$Builder;" line="149"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowedOther" desc="(Z)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint$Builder;" line="154"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extensible" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint$Extensible;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint$Builder;" line="159"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThis" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint$Builder;" line="165"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedValues" desc="()Ljava/util/Map;" line="170"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowedOther" desc="()Z" line="174"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtensible" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint$Extensible;" line="179"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint;" line="184"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="73"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IScopedContraints" sourcefilename="IScopedContraints.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint$Extensible" sourcefilename="IAllowedValuesConstraint.java"><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/FindingCollectingConstraintValidationHandler" sourcefilename="FindingCollectingConstraintValidationHandler.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPathFormatter" desc="()Lgov/nist/secauto/metaschema/core/metapath/format/IPathFormatter;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPathFormatter" desc="(Lgov/nist/secauto/metaschema/core/metapath/format/IPathFormatter;)V" line="61"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFindings" desc="()Ljava/util/List;" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHighestSeverity" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFinding" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ConstraintValidationFinding;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleCardinalityMinimumViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="90"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleCardinalityMaximumViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="101"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleIndexDuplicateKeyViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="113"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleUniqueKeyViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="125"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleKeyMatchError" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IKeyConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/MetapathException;)V" line="138"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleMatchPatternViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/String;)V" line="151"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleMatchDatatypeViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/String;Ljava/lang/IllegalArgumentException;)V" line="164"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleExpectViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)V" line="177"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAllowedValuesViolation" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="186"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleIndexDuplicateViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="194"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleIndexMiss" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/util/List;)V" line="202"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="163" covered="56"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="53" covered="17"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="11" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level" sourcefilename="IConstraint.java"><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultConstraintValidator" sourcefilename="DefaultConstraintValidator.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintValidationHandler;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstraintValidationHandler" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintValidationHandler;" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetapathContext" desc="()Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="101"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateFlag" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateField" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;)V" line="132"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateAssembly" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)V" line="150"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateHasCardinality" desc="(Ljava/util/List;Ljava/util/List;)V" line="164"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateHasCardinality" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)V" line="172"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateHasCardinality" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="184"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateIndex" desc="(Ljava/util/List;Ljava/util/List;)V" line="199"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateIndex" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)V" line="207"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateIndex" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="219"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateUnique" desc="(Ljava/util/List;Ljava/util/List;)V" line="246"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateUnique" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)V" line="254"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateUnique" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="266"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateMatches" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/IDefinitionNodeItem;)V" line="287"><counter type="INSTRUCTION" missed="22" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateMatches" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="299"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateIndexHasKey" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/IDefinitionNodeItem;)V" line="327"><counter type="INSTRUCTION" missed="16" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateIndexHasKey" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/IDefinitionNodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="337"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateExpect" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/IDefinitionNodeItem;)V" line="351"><counter type="INSTRUCTION" missed="16" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateExpect" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="359"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateAllowedValues" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/IDefinitionNodeItem;)V" line="379"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateAllowedValues" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="387"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rethrowConstraintError" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/MetapathException;)V" line="401"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateValueStatus" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;)V" line="436"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleAllowedValues" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="446"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finalizeValidation" desc="()V" line="455"><counter type="INSTRUCTION" missed="83" covered="9"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="17" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validateAllowedValues$8" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/IDefinitionNodeItem;)V" line="388"><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$validateExpect$7" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="362"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateExpect$6" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="360"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateMatches$5" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="301"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateUnique$4" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndex;Lgov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="269"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateUnique$3" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)V" line="247"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateIndex$2" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndex;Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="228"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateIndex$1" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)V" line="200"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateHasCardinality$0" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;)V" line="165"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="711" covered="173"/><counter type="BRANCH" missed="69" covered="11"/><counter type="LINE" missed="180" covered="48"/><counter type="COMPLEXITY" missed="61" covered="17"/><counter type="METHOD" missed="23" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultKeyField" sourcefilename="DefaultKeyField.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Ljava/util/regex/Pattern;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)V" line="60"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPattern" desc="()Ljava/util/regex/Pattern;" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTarget" desc="()Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource" sourcefilename="IConstraint.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/IValueConstrained" sourcefilename="IValueConstrained.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint" sourcefilename="IIndexConstraint.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/IAllowedValue" sourcefilename="IAllowedValue.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultIndex" sourcefilename="DefaultIndex.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="42"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeyFields" desc="()Ljava/util/List;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="62"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="72"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultIndexConstraint" sourcefilename="DefaultIndexConstraint.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)V" line="85"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexConstraint$Builder;" line="104"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint" sourcefilename="IExpectConstraint.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/AbstractTargetedConstraints" sourcefilename="AbstractTargetedConstraints.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetExpression" desc="()Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstraintSupport" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyTo" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="target" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;)V" line="81"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="target" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;)V" line="90"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="target" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;)V" line="99"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$applyTo$3" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$applyTo$2" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;)V" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$applyTo$1" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;)V" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$applyTo$0" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;)V" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="96" covered="40"/><counter type="LINE" missed="15" covered="11"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IKeyConstraint" sourcefilename="IKeyConstraint.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/ITargetedConstaints" sourcefilename="ITargetedConstaints.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValue" sourcefilename="DefaultAllowedValue.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="12"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultConstraintValidator$KeyRef" sourcefilename="DefaultConstraintValidator.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/util/List;)V" line="603"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConstraint" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;" line="611"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNode" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="616"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTargets" desc="()Ljava/util/List;" line="621"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultCardinalityConstraint$Builder" sourcefilename="DefaultCardinalityConstraint.java"><method name="minOccurs" desc="(I)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultCardinalityConstraint$Builder;" line="128"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="maxOccurs" desc="(I)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultCardinalityConstraint$Builder;" line="133"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThis" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultCardinalityConstraint$Builder;" line="139"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="144"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinOccurs" desc="()Ljava/lang/Integer;" line="152"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxOccurs" desc="()Ljava/lang/Integer;" line="156"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultCardinalityConstraint;" line="161"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IIndex" sourcefilename="IIndex.java"><method name="newInstance" desc="(Ljava/util/List;)Lgov/nist/secauto/metaschema/core/model/constraint/IIndex;" line="60"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAllNulls" desc="(Ljava/lang/Iterable;)Z" line="72"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="100"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="129"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toKey" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Ljava/util/List;" line="158"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildKeyItem" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/model/constraint/IKeyField;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Ljava/lang/String;" line="184"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyPattern" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/String;Ljava/util/regex/Pattern;)Ljava/lang/String;" line="217"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toKey$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/model/constraint/IKeyField;)Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="170" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstraint$InternalModelSource" sourcefilename="IConstraint.java"><method name="instance" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;" line="201"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSourceType" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource$SourceType;" line="210"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSource" desc="()Ljava/net/URI;" line="216"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="197"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/ConstraintComposingVisitor" sourcefilename="ConstraintComposingVisitor.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDocument" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;Lgov/nist/secauto/metaschema/core/model/constraint/ITargetedConstaints;)Ljava/lang/Void;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFlag" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFlagNodeItem;Lgov/nist/secauto/metaschema/core/model/constraint/ITargetedConstaints;)Ljava/lang/Void;" line="48"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitField" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IFieldNodeItem;Lgov/nist/secauto/metaschema/core/model/constraint/ITargetedConstaints;)Ljava/lang/Void;" line="54"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAssembly" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IAssemblyNodeItem;Lgov/nist/secauto/metaschema/core/model/constraint/ITargetedConstaints;)Ljava/lang/Void;" line="60"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitMetaschema" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/IModuleNodeItem;Lgov/nist/secauto/metaschema/core/model/constraint/ITargetedConstaints;)Ljava/lang/Void;" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="10"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstraintValidationHandler" sourcefilename="IConstraintValidationHandler.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint" sourcefilename="ICardinalityConstraint.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/ConstraintVisitingModelWalker" sourcefilename="ConstraintVisitingModelWalker.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Ljava/lang/Object;)Z" line="40"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;Ljava/lang/Object;)V" line="59"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;Ljava/lang/Object;)V" line="75"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;Ljava/lang/Object;)V" line="90"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;Ljava/lang/Object;)V" line="105"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;Ljava/lang/Object;)V" line="121"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Ljava/lang/Object;)V" line="137"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint;Ljava/lang/Object;)V" line="152"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Ljava/lang/Object;)Z" line="156"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;Ljava/lang/Object;)V" line="175"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;Ljava/lang/Object;)V" line="190"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;Ljava/lang/Object;)V" line="206"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Ljava/lang/Object;)V" line="221"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;Ljava/lang/Object;)V" line="225"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;Ljava/lang/Object;)V" line="242"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;Ljava/lang/Object;)V" line="257"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;Ljava/lang/Object;)V" line="273"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Ljava/lang/Object;)V" line="288"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walkConstraints" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Ljava/lang/Object;)V" line="299"><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walkConstraints" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Ljava/lang/Object;)V" line="337"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walkConstraints" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;Ljava/lang/Object;)V" line="363"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="303" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="72" covered="0"/><counter type="COMPLEXITY" missed="37" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IModelConstrained" sourcefilename="IModelConstrained.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultConstraintValidator$ValueStatus" sourcefilename="DefaultConstraintValidator.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/DefaultConstraintValidator;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="483"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerAllowedValue" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;)V" line="499"><counter type="INSTRUCTION" missed="51" covered="37"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="()V" line="525"><counter type="INSTRUCTION" missed="6" covered="54"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="116"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="10" covered="29"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultMatchesConstraint" sourcefilename="DefaultMatchesConstraint.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Ljava/util/Map;Ljava/util/regex/Pattern;Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)V" line="89"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPattern" desc="()Ljava/util/regex/Pattern;" line="99"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDataType" desc="()Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultMatchesConstraint$Builder;" line="114"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultExpectConstraint" sourcefilename="DefaultExpectConstraint.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Ljava/util/Map;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTest" desc="()Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateMessage" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Ljava/lang/CharSequence;" line="114"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="127"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultExpectConstraint$Builder;" line="132"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$generateMessage$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Ljava/util/regex/Matcher;)Ljava/lang/CharSequence;" line="119"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="27"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultMatchesConstraint$Builder" sourcefilename="DefaultMatchesConstraint.java"><method name="regex" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultMatchesConstraint$Builder;" line="127"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="regex" desc="(Ljava/util/regex/Pattern;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultMatchesConstraint$Builder;" line="131"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="datatype" desc="(Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultMatchesConstraint$Builder;" line="136"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThis" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultMatchesConstraint$Builder;" line="142"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="147"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPattern" desc="()Ljava/util/regex/Pattern;" line="155"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDatatype" desc="()Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="159"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultMatchesConstraint;" line="164"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultExpectConstraint$Builder" sourcefilename="DefaultExpectConstraint.java"><method name="test" desc="(Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultExpectConstraint$Builder;" line="145"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="message" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultExpectConstraint$Builder;" line="150"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThis" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultExpectConstraint$Builder;" line="156"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="()V" line="161"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTest" desc="()Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;" line="167"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="171"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultExpectConstraint;" line="176"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="48"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultIndexHasKeyConstraint$Builder" sourcefilename="DefaultIndexHasKeyConstraint.java"><method name="name" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexHasKeyConstraint$Builder;" line="117"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThis" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexHasKeyConstraint$Builder;" line="123"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="128"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIndexName" desc="()Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexHasKeyConstraint;" line="139"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/AbstractKeyConstraint" sourcefilename="AbstractKeyConstraint.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Ljava/util/Map;Ljava/util/List;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)V" line="84"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeyFields" desc="()Ljava/util/List;" line="93"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IKeyField" sourcefilename="IKeyField.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstraintValidator" sourcefilename="IConstraintValidator.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultUniqueConstraint" sourcefilename="DefaultUniqueConstraint.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Ljava/util/Map;Ljava/util/List;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)V" line="81"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="86"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultUniqueConstraint$Builder;" line="91"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint" sourcefilename="IIndexHasKeyConstraint.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultIndexConstraint$Builder" sourcefilename="DefaultIndexConstraint.java"><method name="name" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexConstraint$Builder;" line="116"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThis" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexConstraint$Builder;" line="122"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="127"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexConstraint;" line="138"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/AbstractConstraintValidationHandler" sourcefilename="AbstractConstraintValidationHandler.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCardinalityMinimumViolationMessage" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newCardinalityMaximumViolationMessage" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newIndexDuplicateKeyViolationMessage" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newUniqueKeyViolationMessage" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatchPatternViolationMessage" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/String;)Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatchDatatypeViolationMessage" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/String;)Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newExpectViolationMessage" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Ljava/lang/CharSequence;" line="131"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newAllowedValuesViolationMessage" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/lang/CharSequence;" line="147"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newIndexDuplicateViolationMessage" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/lang/CharSequence;" line="165"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newIndexMissMessage" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/util/List;)Ljava/lang/CharSequence;" line="177"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$newAllowedValuesViolationMessage$1" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValue;)Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$newAllowedValuesViolationMessage$0" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;)Ljava/util/stream/Stream;" line="148"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="196" covered="50"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="28" covered="11"/><counter type="COMPLEXITY" missed="10" covered="5"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstrained" sourcefilename="IConstrained.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultCardinalityConstraint" sourcefilename="DefaultCardinalityConstraint.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Ljava/util/Map;Ljava/lang/Integer;Ljava/lang/Integer;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)V" line="90"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinOccurs" desc="()Ljava/lang/Integer;" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxOccurs" desc="()Ljava/lang/Integer;" line="105"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultCardinalityConstraint$Builder;" line="115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstraint$ExternalModelSource" sourcefilename="IConstraint.java"><method name="instance" desc="(Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;" line="229"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="238"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSourceType" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource$SourceType;" line="244"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSource" desc="()Ljava/net/URI;" line="250"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="222"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint" sourcefilename="DefaultAllowedValuesConstraint.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Ljava/util/Map;Ljava/util/Map;ZLgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint$Extensible;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedValues" desc="()Ljava/util/Map;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowedOther" desc="()Z" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtensible" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint$Extensible;" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="123"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint$Builder;" line="128"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint" sourcefilename="IMatchesConstraint.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/ConstraintValidationFinding$Builder" sourcefilename="ConstraintValidationFinding.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="message" desc="(Ljava/lang/CharSequence;)Lgov/nist/secauto/metaschema/core/model/constraint/ConstraintValidationFinding$Builder;" line="133"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="target" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Lgov/nist/secauto/metaschema/core/model/constraint/ConstraintValidationFinding$Builder;" line="139"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targets" desc="(Ljava/util/List;)Lgov/nist/secauto/metaschema/core/model/constraint/ConstraintValidationFinding$Builder;" line="145"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cause" desc="(Ljava/lang/Throwable;)Lgov/nist/secauto/metaschema/core/model/constraint/ConstraintValidationFinding$Builder;" line="151"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="severity" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;)Lgov/nist/secauto/metaschema/core/model/constraint/ConstraintValidationFinding$Builder;" line="157"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/ConstraintValidationFinding;" line="163"><counter type="INSTRUCTION" missed="21" covered="48"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="116"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="69"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="7" covered="19"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstraint$ExternalSource" sourcefilename="IConstraint.java"><method name="instance" desc="(Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;" line="264"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="273"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceType" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource$SourceType;" line="279"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSource" desc="()Ljava/net/URI;" line="285"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="256"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource$SourceType" sourcefilename="IConstraint.java"><method name="&lt;clinit&gt;" desc="()V" line="177"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultScopedContraints" sourcefilename="DefaultScopedContraints.java"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/lang/String;Ljava/util/List;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaschemaNamespace" desc="()Ljava/net/URI;" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaschemaShortName" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetedContraints" desc="()Ljava/util/List;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/AbstractKeyConstraint$AbstractKeyConstraintBuilder" sourcefilename="AbstractKeyConstraint.java"><method name="&lt;init&gt;" desc="()V" line="96"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keyField" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/DefaultKeyField;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractKeyConstraint$AbstractKeyConstraintBuilder;" line="105"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeyFields" desc="()Ljava/util/List;" line="111"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="116"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultConstraintSet" sourcefilename="DefaultConstraintSet.java"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/util/List;Ljava/util/Set;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResourceLocation" desc="()Ljava/net/URI;" line="86"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getScopedContraints" desc="()Ljava/util/Map;" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImportedConstraintSets" desc="()Ljava/util/Set;" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetedConstraintsForModule" desc="(Lgov/nist/secauto/metaschema/core/model/IModule;)Ljava/util/stream/Stream;" line="101"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTargetedConstraintsForModule$1" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IScopedContraints;)Ljava/util/stream/Stream;" line="106"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IScopedContraints;)Ljavax/xml/namespace/QName;" line="73"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="59"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/ConstraintValidationFinding" sourcefilename="ConstraintValidationFinding.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/CharSequence;Ljava/util/List;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Ljava/lang/Throwable;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstraints" desc="()Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/CharSequence;" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNode" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargets" desc="()Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCause" desc="()Ljava/lang/Throwable;" line="91"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSeverity" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDocumentUri" desc="()Ljava/net/URI;" line="103"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Lgov/nist/secauto/metaschema/core/model/constraint/ConstraintValidationFinding$Builder;" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Lgov/nist/secauto/metaschema/core/model/constraint/ConstraintValidationFinding$Builder;" line="113"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="33"/><counter type="LINE" missed="6" covered="11"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder" sourcefilename="AbstractConstraint.java"><method name="&lt;init&gt;" desc="()V" line="146"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identifier" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;" line="165"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formalName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;" line="170"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="description" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;" line="175"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="source" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;" line="180"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="level" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;" line="185"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="target" desc="(Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;" line="190"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="properties" desc="(Ljava/util/Map;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;" line="195"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="property" desc="(Ljavax/xml/namespace/QName;Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;" line="200"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="property" desc="(Ljavax/xml/namespace/QName;Ljava/util/Set;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;" line="204"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remarks" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;" line="215"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="()V" line="220"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint;" line="228"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="233"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="237"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="241"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSource" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;" line="245"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLevel" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;" line="250"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTarget" desc="()Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;" line="255"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="260"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="264"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="61" covered="66"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="17" covered="22"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="7" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint" sourcefilename="AbstractConstraint.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Ljava/util/Map;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSource" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;" line="122"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLevel" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTarget" desc="()Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;" line="133"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="138"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="143"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="42"/><counter type="LINE" missed="6" covered="13"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint" sourcefilename="IUniqueConstraint.java"/><class name="gov/nist/secauto/metaschema/core/model/constraint/IConstraintSet" sourcefilename="IConstraintSet.java"><method name="resolveConstraintSets" desc="(Ljava/util/Set;)Ljava/util/Set;" line="55"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveConstraintSet" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintSet;)Ljava/util/stream/Stream;" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetedConstraintsForMetaschema" desc="(Ljava/util/Set;Lgov/nist/secauto/metaschema/core/model/IModule;)Ljava/util/List;" line="72"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyConstraintSetToModule" desc="(Ljava/util/Set;Lgov/nist/secauto/metaschema/core/model/IModule;)V" line="83"><counter type="INSTRUCTION" missed="41" covered="55"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="8" covered="14"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getTargetedConstraintsForMetaschema$1" desc="(Lgov/nist/secauto/metaschema/core/model/IModule;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintSet;)Ljava/util/stream/Stream;" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resolveConstraintSets$0" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintSet;)Ljava/util/stream/Stream;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="96"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="8" covered="24"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint" sourcefilename="IAllowedValuesConstraint.java"><method name="getAllowedValue" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValue;" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/LoggingConstraintValidationHandler" sourcefilename="LoggingConstraintValidationHandler.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPathFormatter" desc="()Lgov/nist/secauto/metaschema/core/metapath/format/IPathFormatter;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPathFormatter" desc="(Lgov/nist/secauto/metaschema/core/metapath/format/IPathFormatter;)V" line="61"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLogBuilder" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;)Lorg/apache/logging/log4j/LogBuilder;" line="66"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLogged" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;)Z" line="92"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="logConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/CharSequence;Ljava/lang/Throwable;)V" line="116"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleCardinalityMinimumViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="129"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleCardinalityMaximumViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="140"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleIndexDuplicateKeyViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="152"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleUniqueKeyViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="164"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleKeyMatchError" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IKeyConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/MetapathException;)V" line="177"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleMatchPatternViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/String;)V" line="189"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleMatchDatatypeViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/lang/String;Ljava/lang/IllegalArgumentException;)V" line="202"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleExpectViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)V" line="214"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAllowedValuesViolation" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="224"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleIndexDuplicateViolation" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)V" line="235"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleIndexMiss" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;Ljava/util/List;)V" line="243"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="322" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="81" covered="0"/><counter type="COMPLEXITY" missed="39" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/DefaultIndexHasKeyConstraint" sourcefilename="DefaultIndexHasKeyConstraint.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)V" line="86"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIndexName" desc="()Ljava/lang/String;" line="95"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexHasKeyConstraint$Builder;" line="105"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="IConstraintSet.java"><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="12" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="1" cb="1"/><line nr="92" mi="11" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="1" cb="1"/><line nr="99" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="96"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="8" covered="24"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IConstraint.java"><line nr="56" mi="0" ci="20" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="10" mb="1" cb="1"/><line nr="177" mi="12" ci="0" mb="0" cb="0"/><line nr="181" mi="6" ci="0" mb="0" cb="0"/><line nr="185" mi="6" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="1" cb="1"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="1" cb="1"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="124"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="13" covered="27"/><counter type="COMPLEXITY" missed="12" covered="10"/><counter type="METHOD" missed="9" covered="10"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="IConstrained.java"/><sourcefile name="AbstractConstraintValidationHandler.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="14" ci="0" mb="0" cb="0"/><line nr="69" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="14" ci="0" mb="0" cb="0"/><line nr="82" mi="14" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="9" ci="0" mb="0" cb="0"/><line nr="95" mi="8" ci="0" mb="0" cb="0"/><line nr="105" mi="12" ci="0" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="12" ci="0" mb="0" cb="0"/><line nr="120" mi="8" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="2" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="7" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="8" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="12" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="196" covered="50"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="28" covered="11"/><counter type="COMPLEXITY" missed="10" covered="5"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FindingCollectingConstraintValidationHandler.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="1" cb="1"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="6" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="152" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="6" ci="0" mb="0" cb="0"/><line nr="178" mi="6" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="8" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="10" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="163" covered="56"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="53" covered="17"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="11" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultCardinalityConstraint.java"><line nr="90" mi="10" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="4" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="4" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="DefaultIndex.java"><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="2" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultConstraintValidator.java"><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="165" mi="7" ci="0" mb="2" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="10" ci="0" mb="2" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="187" mi="6" ci="0" mb="4" cb="0"/><line nr="188" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="6" ci="0" mb="4" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="6" ci="0" mb="0" cb="0"/><line nr="200" mi="7" ci="0" mb="2" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="10" ci="0" mb="2" cb="0"/><line nr="208" mi="6" ci="0" mb="0" cb="0"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="215" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="5" ci="0" mb="2" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="7" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="7" ci="0" mb="2" cb="0"/><line nr="229" mi="3" ci="0" mb="2" cb="0"/><line nr="231" mi="6" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="2" cb="0"/><line nr="233" mi="7" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="7" ci="0" mb="0" cb="0"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="6" ci="0" mb="0" cb="0"/><line nr="241" mi="1" ci="0" mb="0" cb="0"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="247" mi="7" ci="0" mb="2" cb="0"/><line nr="248" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="1" ci="0" mb="0" cb="0"/><line nr="254" mi="10" ci="0" mb="2" cb="0"/><line nr="255" mi="6" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="1" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="262" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="7" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="269" mi="7" ci="0" mb="2" cb="0"/><line nr="270" mi="3" ci="0" mb="2" cb="0"/><line nr="272" mi="6" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="2" cb="0"/><line nr="274" mi="7" ci="0" mb="0" cb="0"/><line nr="276" mi="1" ci="0" mb="0" cb="0"/><line nr="277" mi="7" ci="0" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="287" mi="4" ci="6" mb="1" cb="1"/><line nr="288" mi="6" ci="0" mb="0" cb="0"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="1" mb="0" cb="0"/><line nr="299" mi="6" ci="0" mb="0" cb="0"/><line nr="300" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="7" ci="0" mb="2" cb="0"/><line nr="302" mi="3" ci="0" mb="2" cb="0"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="7" ci="0" mb="4" cb="0"/><line nr="308" mi="7" ci="0" mb="0" cb="0"/><line nr="311" mi="3" ci="0" mb="0" cb="0"/><line nr="312" mi="2" ci="0" mb="2" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="315" mi="1" ci="0" mb="0" cb="0"/><line nr="316" mi="8" ci="0" mb="0" cb="0"/><line nr="317" mi="1" ci="0" mb="0" cb="0"/><line nr="320" mi="1" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="327" mi="4" ci="6" mb="1" cb="1"/><line nr="328" mi="6" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="1" ci="0" mb="0" cb="0"/><line nr="331" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="3" ci="0" mb="0" cb="0"/><line nr="339" mi="6" ci="0" mb="0" cb="0"/><line nr="340" mi="2" ci="0" mb="2" cb="0"/><line nr="341" mi="4" ci="0" mb="0" cb="0"/><line nr="342" mi="6" ci="0" mb="0" cb="0"/><line nr="345" mi="11" ci="0" mb="0" cb="0"/><line nr="346" mi="4" ci="0" mb="0" cb="0"/><line nr="347" mi="1" ci="0" mb="0" cb="0"/><line nr="351" mi="4" ci="6" mb="1" cb="1"/><line nr="352" mi="6" ci="0" mb="0" cb="0"/><line nr="353" mi="5" ci="0" mb="0" cb="0"/><line nr="354" mi="1" ci="0" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="7" ci="0" mb="0" cb="0"/><line nr="361" mi="1" ci="0" mb="0" cb="0"/><line nr="362" mi="7" ci="0" mb="2" cb="0"/><line nr="363" mi="3" ci="0" mb="2" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="366" mi="6" ci="0" mb="0" cb="0"/><line nr="367" mi="4" ci="0" mb="2" cb="0"/><line nr="368" mi="8" ci="0" mb="0" cb="0"/><line nr="370" mi="1" ci="0" mb="0" cb="0"/><line nr="371" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="1" ci="0" mb="0" cb="0"/><line nr="374" mi="1" ci="0" mb="0" cb="0"/><line nr="375" mi="1" ci="0" mb="0" cb="0"/><line nr="379" mi="0" ci="10" mb="0" cb="2"/><line nr="380" mi="0" ci="6" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="388" mi="4" ci="3" mb="1" cb="1"/><line nr="389" mi="0" ci="3" mb="1" cb="1"/><line nr="391" mi="0" ci="4" mb="0" cb="0"/><line nr="392" mi="1" ci="0" mb="0" cb="0"/><line nr="393" mi="4" ci="0" mb="0" cb="0"/><line nr="394" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="1" mb="0" cb="0"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="401" mi="5" ci="0" mb="0" cb="0"/><line nr="402" mi="4" ci="0" mb="0" cb="0"/><line nr="403" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="2" ci="0" mb="0" cb="0"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="2" ci="0" mb="2" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="409" mi="4" ci="0" mb="0" cb="0"/><line nr="410" mi="3" ci="0" mb="0" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="413" mi="2" ci="0" mb="0" cb="0"/><line nr="414" mi="2" ci="0" mb="0" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><line nr="418" mi="3" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="420" mi="3" ci="0" mb="0" cb="0"/><line nr="422" mi="7" ci="0" mb="0" cb="0"/><line nr="436" mi="0" ci="6" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="2"/><line nr="438" mi="0" ci="6" mb="0" cb="0"/><line nr="439" mi="0" ci="6" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="0" ci="6" mb="0" cb="0"/><line nr="447" mi="0" ci="2" mb="1" cb="1"/><line nr="448" mi="0" ci="2" mb="0" cb="0"/><line nr="450" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="4" ci="8" mb="1" cb="1"/><line nr="456" mi="4" ci="0" mb="0" cb="0"/><line nr="457" mi="6" ci="0" mb="0" cb="0"/><line nr="459" mi="4" ci="0" mb="0" cb="0"/><line nr="461" mi="10" ci="0" mb="2" cb="0"/><line nr="462" mi="3" ci="0" mb="0" cb="0"/><line nr="463" mi="11" ci="0" mb="2" cb="0"/><line nr="464" mi="7" ci="0" mb="2" cb="0"/><line nr="467" mi="7" ci="0" mb="0" cb="0"/><line nr="469" mi="4" ci="0" mb="0" cb="0"/><line nr="471" mi="2" ci="0" mb="2" cb="0"/><line nr="472" mi="8" ci="0" mb="0" cb="0"/><line nr="474" mi="1" ci="0" mb="0" cb="0"/><line nr="475" mi="8" ci="0" mb="0" cb="0"/><line nr="476" mi="1" ci="0" mb="0" cb="0"/><line nr="477" mi="1" ci="0" mb="0" cb="0"/><line nr="478" mi="1" ci="0" mb="0" cb="0"/><line nr="479" mi="1" ci="0" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="483" mi="0" ci="5" mb="0" cb="0"/><line nr="489" mi="0" ci="3" mb="0" cb="0"/><line nr="490" mi="0" ci="3" mb="0" cb="0"/><line nr="493" mi="0" ci="5" mb="0" cb="0"/><line nr="494" mi="0" ci="3" mb="0" cb="0"/><line nr="495" mi="0" ci="5" mb="0" cb="0"/><line nr="496" mi="0" ci="1" mb="0" cb="0"/><line nr="499" mi="0" ci="5" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="2"/><line nr="502" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="3" mb="0" cb="0"/><line nr="506" mi="0" ci="6" mb="0" cb="2"/><line nr="508" mi="0" ci="5" mb="0" cb="0"/><line nr="509" mi="3" ci="4" mb="1" cb="1"/><line nr="510" mi="2" ci="0" mb="2" cb="0"/><line nr="512" mi="9" ci="0" mb="0" cb="0"/><line nr="513" mi="5" ci="0" mb="0" cb="0"/><line nr="514" mi="0" ci="7" mb="1" cb="1"/><line nr="515" mi="8" ci="0" mb="0" cb="0"/><line nr="518" mi="15" ci="0" mb="0" cb="0"/><line nr="519" mi="4" ci="0" mb="0" cb="0"/><line nr="520" mi="5" ci="0" mb="0" cb="0"/><line nr="522" mi="0" ci="1" mb="0" cb="0"/><line nr="525" mi="0" ci="4" mb="1" cb="1"/><line nr="526" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="4" mb="0" cb="0"/><line nr="528" mi="0" ci="11" mb="0" cb="2"/><line nr="529" mi="0" ci="5" mb="0" cb="0"/><line nr="530" mi="0" ci="2" mb="0" cb="2"/><line nr="531" mi="0" ci="3" mb="0" cb="0"/><line nr="532" mi="0" ci="5" mb="1" cb="1"/><line nr="534" mi="3" ci="0" mb="0" cb="0"/><line nr="535" mi="2" ci="0" mb="0" cb="0"/><line nr="536" mi="1" ci="0" mb="0" cb="0"/><line nr="538" mi="0" ci="4" mb="0" cb="0"/><line nr="540" mi="0" ci="1" mb="0" cb="0"/><line nr="543" mi="0" ci="5" mb="0" cb="4"/><line nr="544" mi="0" ci="7" mb="0" cb="0"/><line nr="547" mi="0" ci="1" mb="0" cb="0"/><line nr="550" mi="0" ci="6" mb="0" cb="0"/><line nr="554" mi="6" ci="0" mb="0" cb="0"/><line nr="559" mi="0" ci="4" mb="0" cb="0"/><line nr="560" mi="0" ci="5" mb="0" cb="0"/><line nr="561" mi="0" ci="4" mb="0" cb="0"/><line nr="562" mi="0" ci="2" mb="0" cb="0"/><line nr="567" mi="4" ci="0" mb="0" cb="0"/><line nr="568" mi="5" ci="0" mb="0" cb="0"/><line nr="569" mi="4" ci="0" mb="0" cb="0"/><line nr="570" mi="2" ci="0" mb="0" cb="0"/><line nr="575" mi="4" ci="0" mb="0" cb="0"/><line nr="576" mi="5" ci="0" mb="0" cb="0"/><line nr="577" mi="2" ci="0" mb="0" cb="0"/><line nr="582" mi="5" ci="0" mb="0" cb="0"/><line nr="588" mi="0" ci="2" mb="0" cb="0"/><line nr="603" mi="2" ci="0" mb="0" cb="0"/><line nr="604" mi="3" ci="0" mb="0" cb="0"/><line nr="605" mi="3" ci="0" mb="0" cb="0"/><line nr="606" mi="3" ci="0" mb="0" cb="0"/><line nr="607" mi="1" ci="0" mb="0" cb="0"/><line nr="611" mi="3" ci="0" mb="0" cb="0"/><line nr="616" mi="3" ci="0" mb="0" cb="0"/><line nr="621" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="826" covered="312"/><counter type="BRANCH" missed="75" covered="27"/><counter type="LINE" missed="207" covered="83"/><counter type="COMPLEXITY" missed="74" covered="29"/><counter type="METHOD" missed="31" covered="21"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="ConstraintVisitingModelWalker.java"><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="273" mi="1" ci="0" mb="0" cb="0"/><line nr="288" mi="1" ci="0" mb="0" cb="0"/><line nr="299" mi="11" ci="0" mb="2" cb="0"/><line nr="300" mi="5" ci="0" mb="0" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="11" ci="0" mb="2" cb="0"/><line nr="304" mi="5" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="11" ci="0" mb="2" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="309" mi="1" ci="0" mb="0" cb="0"/><line nr="311" mi="11" ci="0" mb="2" cb="0"/><line nr="312" mi="5" ci="0" mb="0" cb="0"/><line nr="313" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="11" ci="0" mb="2" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="1" ci="0" mb="0" cb="0"/><line nr="319" mi="11" ci="0" mb="2" cb="0"/><line nr="320" mi="5" ci="0" mb="0" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="323" mi="11" ci="0" mb="2" cb="0"/><line nr="324" mi="5" ci="0" mb="0" cb="0"/><line nr="325" mi="1" ci="0" mb="0" cb="0"/><line nr="326" mi="1" ci="0" mb="0" cb="0"/><line nr="337" mi="11" ci="0" mb="2" cb="0"/><line nr="338" mi="5" ci="0" mb="0" cb="0"/><line nr="339" mi="1" ci="0" mb="0" cb="0"/><line nr="341" mi="11" ci="0" mb="2" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="345" mi="11" ci="0" mb="2" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="1" ci="0" mb="0" cb="0"/><line nr="349" mi="11" ci="0" mb="2" cb="0"/><line nr="350" mi="5" ci="0" mb="0" cb="0"/><line nr="351" mi="1" ci="0" mb="0" cb="0"/><line nr="352" mi="1" ci="0" mb="0" cb="0"/><line nr="363" mi="11" ci="0" mb="2" cb="0"/><line nr="364" mi="5" ci="0" mb="0" cb="0"/><line nr="365" mi="1" ci="0" mb="0" cb="0"/><line nr="367" mi="11" ci="0" mb="2" cb="0"/><line nr="368" mi="5" ci="0" mb="0" cb="0"/><line nr="369" mi="1" ci="0" mb="0" cb="0"/><line nr="371" mi="11" ci="0" mb="2" cb="0"/><line nr="372" mi="5" ci="0" mb="0" cb="0"/><line nr="373" mi="1" ci="0" mb="0" cb="0"/><line nr="375" mi="11" ci="0" mb="2" cb="0"/><line nr="376" mi="5" ci="0" mb="0" cb="0"/><line nr="377" mi="1" ci="0" mb="0" cb="0"/><line nr="378" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="303" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="72" covered="0"/><counter type="COMPLEXITY" missed="37" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultKeyField.java"><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DefaultScopedContraints.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultMatchesConstraint.java"><line nr="89" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="4" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="4" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ConstraintComposingVisitor.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="10"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IModelConstrained.java"/><sourcefile name="IValueConstrained.java"/><sourcefile name="IIndex.java"><line nr="48" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="10" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="6" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="161" mi="8" ci="0" mb="4" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="7" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="2" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="2" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="2" cb="0"/><line nr="219" mi="8" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="11" ci="0" mb="0" cb="0"/><line nr="224" mi="4" ci="0" mb="2" cb="0"/><line nr="225" mi="15" ci="0" mb="0" cb="0"/><line nr="227" mi="7" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="170" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IKeyField.java"/><sourcefile name="ITargetedConstaints.java"/><sourcefile name="IAllowedValuesConstraint.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="16" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractConstraint.java"><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="204" mi="6" ci="0" mb="0" cb="0"/><line nr="205" mi="2" ci="0" mb="2" cb="0"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="6" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="108"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="23" covered="35"/><counter type="COMPLEXITY" missed="14" covered="17"/><counter type="METHOD" missed="13" covered="17"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IConstraintVisitor.java"/><sourcefile name="IExpectConstraint.java"/><sourcefile name="IIndexHasKeyConstraint.java"/><sourcefile name="DefaultAllowedValuesConstraint.java"><line nr="100" mi="0" ci="10" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="106"/><counter type="LINE" missed="3" covered="36"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IConstraintValidationHandler.java"/><sourcefile name="DefaultUniqueConstraint.java"><line nr="81" mi="11" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="IAllowedValue.java"/><sourcefile name="DefaultIndexConstraint.java"><line nr="85" mi="11" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="2" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="IKeyConstraint.java"/><sourcefile name="ConstraintValidationFinding.java"><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="1" cb="1"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="1" cb="1"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="2" ci="6" mb="0" cb="0"/><line nr="172" mi="2" ci="6" mb="1" cb="1"/><line nr="174" mi="4" ci="4" mb="1" cb="1"/><line nr="175" mi="4" ci="3" mb="1" cb="1"/><line nr="176" mi="4" ci="3" mb="1" cb="1"/><line nr="178" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="102"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="13" covered="30"/><counter type="COMPLEXITY" missed="15" covered="9"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DefaultExpectConstraint.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="2" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="7" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="75"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="26"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="6" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LoggingConstraintValidationHandler.java"><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="5" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="12" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="5" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="12" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="2" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="9" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="2" cb="0"/><line nr="131" mi="10" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="2" cb="0"/><line nr="142" mi="10" ci="0" mb="0" cb="0"/><line nr="144" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="2" cb="0"/><line nr="154" mi="11" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="2" cb="0"/><line nr="166" mi="11" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="2" cb="0"/><line nr="179" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="2" cb="0"/><line nr="191" mi="11" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="2" cb="0"/><line nr="204" mi="11" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="2" cb="0"/><line nr="216" mi="11" ci="0" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="4" ci="0" mb="2" cb="0"/><line nr="229" mi="9" ci="0" mb="0" cb="0"/><line nr="231" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="2" cb="0"/><line nr="237" mi="9" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="2" cb="0"/><line nr="245" mi="11" ci="0" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="322" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="81" covered="0"/><counter type="COMPLEXITY" missed="39" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IMatchesConstraint.java"/><sourcefile name="ICardinalityConstraint.java"/><sourcefile name="IIndexConstraint.java"/><sourcefile name="DefaultConstraintSet.java"><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="59"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultAllowedValue.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="12"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractTargetedConstraints.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="4" ci="5" mb="0" cb="0"/><line nr="74" mi="4" ci="5" mb="0" cb="0"/><line nr="75" mi="4" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="8" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="96" covered="40"/><counter type="LINE" missed="15" covered="11"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IUniqueConstraint.java"/><sourcefile name="DefaultIndexHasKeyConstraint.java"><line nr="86" mi="11" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="2" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="IScopedContraints.java"/><sourcefile name="AbstractKeyConstraint.java"><line nr="84" mi="10" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="IConstraintValidator.java"/><counter type="INSTRUCTION" missed="2926" covered="1214"/><counter type="BRANCH" missed="202" covered="42"/><counter type="LINE" missed="739" covered="339"/><counter type="COMPLEXITY" missed="330" covered="128"/><counter type="METHOD" missed="214" covered="119"/><counter type="CLASS" missed="19" covered="26"/></package><package name="gov/nist/secauto/metaschema/core/model/util"><class name="gov/nist/secauto/metaschema/core/model/util/JsonUtil" sourcefilename="JsonUtil.java"><method name="toJsonObject" desc="(Ljava/io/InputStream;)Lorg/json/JSONObject;" line="60"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toJsonObject" desc="(Ljava/io/Reader;)Lorg/json/JSONObject;" line="65"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Lcom/fasterxml/jackson/core/JsonLocation;)Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="advanceTo" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/JsonToken;" line="109"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipNextValue" desc="(Lcom/fasterxml/jackson/core/JsonParser;)Lcom/fasterxml/jackson/core/JsonToken;" line="128"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkEndOfValue" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;)Z" line="162"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertCurrent" desc="(Lcom/fasterxml/jackson/core/JsonParser;[Lcom/fasterxml/jackson/core/JsonToken;)V" line="190"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertCurrentIsFieldValue" desc="(Lcom/fasterxml/jackson/core/JsonParser;)V" line="199"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertAndAdvance" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/JsonToken;" line="211"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="advanceAndAssert" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/core/JsonToken;" line="224"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssertMessage" desc="(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;" line="237"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssertMessage" desc="(Lcom/fasterxml/jackson/core/JsonParser;[Lcom/fasterxml/jackson/core/JsonToken;Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;" line="249"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssertMessage" desc="(Lcom/fasterxml/jackson/core/JsonParser;Ljava/util/Collection;Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;" line="258"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateLocationMessage" desc="(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/CharSequence;" line="267"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateLocationMessage" desc="(Lcom/fasterxml/jackson/core/JsonLocation;)Ljava/lang/CharSequence;" line="274"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getAssertMessage$1" desc="(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;" line="260"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$assertCurrent$0" desc="(Lcom/fasterxml/jackson/core/JsonToken;Lcom/fasterxml/jackson/core/JsonToken;)Z" line="192"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="327" covered="0"/><counter type="BRANCH" missed="27" covered="0"/><counter type="LINE" missed="78" covered="0"/><counter type="COMPLEXITY" missed="34" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/util/XmlUtil" sourcefilename="XmlUtil.java"><method name="getStreamSource" desc="(Ljava/net/URL;)Ljavax/xml/transform/stream/StreamSource;" line="58"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/util/XmlEventUtil" sourcefilename="XmlEventUtil.java"><method name="escape" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="escape" desc="(C)Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="3" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(Ljavax/xml/stream/events/XMLEvent;)Ljava/lang/CharSequence;" line="116"><counter type="INSTRUCTION" missed="18" covered="40"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljavax/xml/stream/Location;)Ljava/lang/CharSequence;" line="151"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Lorg/codehaus/stax2/XMLStreamReader2;)Ljava/lang/CharSequence;" line="168"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toLocation" desc="(Ljavax/xml/stream/events/XMLEvent;)Ljavax/xml/stream/Location;" line="198"><counter type="INSTRUCTION" missed="13" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toQName" desc="(Ljavax/xml/stream/events/XMLEvent;)Ljavax/xml/namespace/QName;" line="222"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toEventName" desc="(Ljavax/xml/stream/events/XMLEvent;)Ljava/lang/String;" line="242"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toEventName" desc="(I)Ljava/lang/String;" line="256"><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advanceTo" desc="(Lorg/codehaus/stax2/XMLEventReader2;I)Ljavax/xml/stream/events/XMLEvent;" line="281"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipProcessingInstructions" desc="(Lorg/codehaus/stax2/XMLEventReader2;)Ljavax/xml/stream/events/XMLEvent;" line="310"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipWhitespace" desc="(Lorg/codehaus/stax2/XMLEventReader2;)Ljavax/xml/stream/events/XMLEvent;" line="330"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEventEndElement" desc="(Ljavax/xml/stream/events/XMLEvent;Ljavax/xml/namespace/QName;)Z" line="353"><counter type="INSTRUCTION" missed="1" covered="14"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEventEndDocument" desc="(Ljavax/xml/stream/events/XMLEvent;)Z" line="366"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEventStartElement" desc="(Ljavax/xml/stream/events/XMLEvent;Ljavax/xml/namespace/QName;)Z" line="384"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="consumeAndAssert" desc="(Lorg/codehaus/stax2/XMLEventReader2;I)Ljavax/xml/stream/events/XMLEvent;" line="403"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="consumeAndAssert" desc="(Lorg/codehaus/stax2/XMLEventReader2;ILjavax/xml/namespace/QName;)Ljavax/xml/stream/events/XMLEvent;" line="423"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNext" desc="(Lorg/codehaus/stax2/XMLEventReader2;I)Ljavax/xml/stream/events/XMLEvent;" line="454"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertNext" desc="(Lorg/codehaus/stax2/XMLEventReader2;ILjavax/xml/namespace/QName;)Ljavax/xml/stream/events/XMLEvent;" line="479"><counter type="INSTRUCTION" missed="8" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateLocationMessage" desc="(Ljavax/xml/stream/events/XMLEvent;)Ljava/lang/CharSequence;" line="492"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateLocationMessage" desc="(Ljavax/xml/stream/Location;)Ljava/lang/CharSequence;" line="497"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateExpectedMessage" desc="(Ljavax/xml/stream/events/XMLEvent;ILjavax/xml/namespace/QName;)Ljava/lang/CharSequence;" line="506"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skipEvents" desc="(Lorg/codehaus/stax2/XMLEventReader2;[I)Ljavax/xml/stream/events/XMLEvent;" line="540"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$escape$1" desc="(Ljava/lang/Character;)Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$escape$0" desc="(I)Ljava/lang/Character;" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="317" covered="265"/><counter type="BRANCH" missed="60" covered="25"/><counter type="LINE" missed="78" covered="68"/><counter type="COMPLEXITY" missed="53" covered="16"/><counter type="METHOD" missed="16" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="XmlEventUtil.java"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="17" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="3" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="1" cb="1"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="2"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="1" cb="1"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="2" cb="0"/><line nr="129" mi="9" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="2"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="2" ci="3" mb="1" cb="1"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="7" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="2" cb="0"/><line nr="174" mi="7" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="2" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="2" cb="0"/><line nr="179" mi="9" ci="0" mb="0" cb="0"/><line nr="182" mi="3" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="2" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="1" cb="1"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="1" ci="3" mb="1" cb="1"/><line nr="206" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="2"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="2"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="6" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="1" cb="1"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="2" cb="0"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="3" ci="0" mb="0" cb="0"/><line nr="293" mi="10" ci="0" mb="4" cb="0"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><line nr="310" mi="6" ci="0" mb="2" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="6" mb="0" cb="2"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="0" cb="0"/><line nr="333" mi="0" ci="5" mb="1" cb="1"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="1" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="1" cb="1"/><line nr="354" mi="0" ci="4" mb="1" cb="1"/><line nr="355" mi="1" ci="6" mb="1" cb="1"/><line nr="366" mi="4" ci="0" mb="2" cb="0"/><line nr="367" mi="5" ci="0" mb="2" cb="0"/><line nr="384" mi="4" ci="0" mb="2" cb="0"/><line nr="385" mi="4" ci="0" mb="2" cb="0"/><line nr="386" mi="7" ci="0" mb="2" cb="0"/><line nr="403" mi="5" ci="0" mb="0" cb="0"/><line nr="423" mi="3" ci="0" mb="0" cb="0"/><line nr="425" mi="3" ci="0" mb="0" cb="0"/><line nr="426" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="13" ci="0" mb="4" cb="0"/><line nr="429" mi="5" ci="0" mb="2" cb="0"/><line nr="433" mi="2" ci="0" mb="0" cb="0"/><line nr="454" mi="5" ci="0" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="3" mb="0" cb="0"/><line nr="482" mi="5" ci="8" mb="2" cb="2"/><line nr="484" mi="3" ci="3" mb="1" cb="1"/><line nr="488" mi="0" ci="2" mb="0" cb="0"/><line nr="492" mi="3" ci="0" mb="0" cb="0"/><line nr="493" mi="7" ci="0" mb="2" cb="0"/><line nr="497" mi="6" ci="0" mb="0" cb="0"/><line nr="498" mi="2" ci="0" mb="0" cb="0"/><line nr="499" mi="2" ci="0" mb="0" cb="0"/><line nr="506" mi="5" ci="0" mb="0" cb="0"/><line nr="507" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="2" ci="0" mb="0" cb="0"/><line nr="509" mi="3" ci="0" mb="0" cb="0"/><line nr="511" mi="2" ci="0" mb="2" cb="0"/><line nr="512" mi="4" ci="0" mb="0" cb="0"/><line nr="513" mi="3" ci="0" mb="0" cb="0"/><line nr="516" mi="2" ci="0" mb="2" cb="0"/><line nr="517" mi="5" ci="0" mb="0" cb="0"/><line nr="519" mi="4" ci="0" mb="0" cb="0"/><line nr="520" mi="3" ci="0" mb="0" cb="0"/><line nr="521" mi="3" ci="0" mb="0" cb="0"/><line nr="523" mi="2" ci="0" mb="0" cb="0"/><line nr="540" mi="7" ci="0" mb="0" cb="0"/><line nr="542" mi="2" ci="0" mb="0" cb="0"/><line nr="543" mi="3" ci="0" mb="2" cb="0"/><line nr="544" mi="3" ci="0" mb="0" cb="0"/><line nr="545" mi="6" ci="0" mb="2" cb="0"/><line nr="546" mi="1" ci="0" mb="0" cb="0"/><line nr="548" mi="4" ci="0" mb="0" cb="0"/><line nr="550" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="317" covered="265"/><counter type="BRANCH" missed="60" covered="25"/><counter type="LINE" missed="78" covered="68"/><counter type="COMPLEXITY" missed="53" covered="16"/><counter type="METHOD" missed="16" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JsonUtil.java"><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="10" ci="0" mb="4" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="2" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="2" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="3" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="8" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="4" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="10" ci="0" mb="0" cb="0"/><line nr="192" mi="9" ci="0" mb="2" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="22" ci="0" mb="4" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="13" ci="0" mb="2" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="3" ci="0" mb="0" cb="0"/><line nr="225" mi="13" ci="0" mb="2" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="17" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="249" mi="5" ci="0" mb="0" cb="0"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="9" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="17" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="7" ci="0" mb="2" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="2" ci="0" mb="0" cb="0"/><line nr="276" mi="3" ci="0" mb="0" cb="0"/><line nr="277" mi="2" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="327" covered="0"/><counter type="BRANCH" missed="27" covered="0"/><counter type="LINE" missed="78" covered="0"/><counter type="COMPLEXITY" missed="34" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XmlUtil.java"><line nr="58" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="652" covered="265"/><counter type="BRANCH" missed="87" covered="25"/><counter type="LINE" missed="157" covered="68"/><counter type="COMPLEXITY" missed="88" covered="16"/><counter type="METHOD" missed="36" covered="10"/><counter type="CLASS" missed="2" covered="1"/></package><package name="gov/nist/secauto/metaschema/core/metapath/item/atomic"><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/MarkupMultiLineItemImpl" sourcefilename="MarkupMultiLineItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultilineAdapter;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem" sourcefilename="IBase64BinaryItem.java"><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/nio/ByteBuffer;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/UuidItemImpl" sourcefilename="UuidItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/util/UUID;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/UuidAdapter;" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/UriReferenceItemImpl" sourcefilename="UriReferenceItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/UriReferenceAdapter;" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="51"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="59"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem" sourcefilename="IBooleanItem.java"><method name="valueOf" desc="(Z)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/Boolean;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="53"><counter type="INSTRUCTION" missed="14" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="76"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="46"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/YearMonthDurationItemImpl" sourcefilename="YearMonthDurationItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/time/Period;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/YearMonthAdapter;" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IIPv6AddressItem" sourcefilename="IIPv6AddressItem.java"><method name="valueOf" desc="(Linet/ipaddr/ipv6/IPv6Address;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIPv6AddressItem;" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIPv6AddressItem;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/DateWithoutTimeZoneItemImpl" sourcefilename="DateWithoutTimeZoneItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/datatype/object/Date;)V" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asZonedDateTime" desc="()Ljava/time/ZonedDateTime;" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/DateAdapter;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/AbstractNumericItem" sourcefilename="AbstractNumericItem.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/NonNegativeIntegerItemImpl" sourcefilename="NonNegativeIntegerItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/NonNegativeIntegerAdapter;" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="51"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="59"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IIPv4AddressItem" sourcefilename="IIPv4AddressItem.java"><method name="valueOf" desc="(Linet/ipaddr/ipv4/IPv4Address;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIPv4AddressItem;" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIPv4AddressItem;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/BooleanItemImpl" sourcefilename="BooleanItemImpl.java"><method name="&lt;init&gt;" desc="(Z)V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBoolean" desc="()Z" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newStringItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="67"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Boolean;" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem" sourcefilename="IAnyAtomicItem.java"><method name="toAtomicItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newStringItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/DateTimeWithTimeZoneItemImpl" sourcefilename="DateTimeWithTimeZoneItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/time/ZonedDateTime;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asZonedDateTime" desc="()Ljava/time/ZonedDateTime;" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/DateTimeWithTZAdapter;" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/TokenItemImpl" sourcefilename="TokenItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/TokenAdapter;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="49"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IIPAddressItem" sourcefilename="IIPAddressItem.java"/><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/INonNegativeIntegerItem" sourcefilename="INonNegativeIntegerItem.java"><method name="valueOf" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INonNegativeIntegerItem;" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(J)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INonNegativeIntegerItem;" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/math/BigInteger;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INonNegativeIntegerItem;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INonNegativeIntegerItem;" line="63"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INonNegativeIntegerItem;" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="12"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IPositiveIntegerItem" sourcefilename="IPositiveIntegerItem.java"><method name="valueOf" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IPositiveIntegerItem;" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(J)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IPositiveIntegerItem;" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/math/BigInteger;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IPositiveIntegerItem;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IPositiveIntegerItem;" line="60"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IPositiveIntegerItem;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="9"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/AbstractStringItem" sourcefilename="AbstractStringItem.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/AbstractAnyAtomicItem" sourcefilename="AbstractAnyAtomicItem.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IEmailAddressItem" sourcefilename="IEmailAddressItem.java"><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IEmailAddressItem;" line="38"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IEmailAddressItem;" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newStringItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IEmailAddressItem;" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/DateWithTimeZoneItemImpl" sourcefilename="DateWithTimeZoneItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/time/ZonedDateTime;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asZonedDateTime" desc="()Ljava/time/ZonedDateTime;" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/DateWithTZAdapter;" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem" sourcefilename="INumericItem.java"><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="46"><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="round" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="99"><counter type="INSTRUCTION" missed="8" covered="103"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="2" covered="25"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="117"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="5" covered="30"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/AnyUriItemImpl" sourcefilename="AnyUriItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/net/URI;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/UriAdapter;" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/NcNameItemImpl" sourcefilename="NcNameItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/NcNameAdapter;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="49"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/EmailAddressItemImpl" sourcefilename="EmailAddressItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/EmailAddressAdapter;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="49"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/INcNameItem" sourcefilename="INcNameItem.java"><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INcNameItem;" line="38"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INcNameItem;" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newStringItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INcNameItem;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IDurationItem" sourcefilename="IDurationItem.java"><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDurationItem;" line="43"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IPv6AddressItemImpl" sourcefilename="IPv6AddressItemImpl.java"><method name="&lt;init&gt;" desc="(Linet/ipaddr/ipv6/IPv6Address;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/IPv6AddressAdapter;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/DecimalItemImpl" sourcefilename="DecimalItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/DecimalAdapter;" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toEffectiveBoolean" desc="()Z" line="60"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asDecimal" desc="()Ljava/math/BigDecimal;" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asInteger" desc="()Ljava/math/BigInteger;" line="71"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abs" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;" line="77"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ceiling" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="83"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floor" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="89"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="94"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="102"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="77"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="9" covered="14"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IDecimalItem" sourcefilename="IDecimalItem.java"><method name="valueOf" desc="(J)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDecimalItem;" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(D)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDecimalItem;" line="50"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/math/BigDecimal;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDecimalItem;" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDecimalItem;" line="61"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDecimalItem;" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="33"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IHostnameItem" sourcefilename="IHostnameItem.java"><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IHostnameItem;" line="38"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IHostnameItem;" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newStringItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IHostnameItem;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem" sourcefilename="IStringItem.java"><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;" line="38"><counter type="INSTRUCTION" missed="14" covered="7"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newStringItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="57"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="24"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/HostnameItemImpl" sourcefilename="HostnameItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/HostnameAdapter;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="49"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/AbstractIntegerItem" sourcefilename="AbstractIntegerItem.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toEffectiveBoolean" desc="()Z" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asDecimal" desc="()Ljava/math/BigDecimal;" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asInteger" desc="()Ljava/math/BigInteger;" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abs" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="63"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IntegerItemImpl" sourcefilename="IntegerItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/IntegerAdapter;" line="45"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="50"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="58"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IUriReferenceItem" sourcefilename="IUriReferenceItem.java"><method name="valueOf" desc="(Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IUriReferenceItem;" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IUriReferenceItem;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IUuidItem" sourcefilename="IUuidItem.java"><method name="valueOf" desc="(Ljava/util/UUID;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IUuidItem;" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IUuidItem;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IUuidItem;" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IPv4AddressItemImpl" sourcefilename="IPv4AddressItemImpl.java"><method name="&lt;init&gt;" desc="(Linet/ipaddr/ipv4/IPv4Address;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/IPv4AddressAdapter;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/MarkupLineItemImpl" sourcefilename="MarkupLineItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLineAdapter;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem" sourcefilename="IDayTimeDurationItem.java"><method name="valueOf" desc="(Ljava/time/Duration;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;" line="45"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IMarkupItem" sourcefilename="IMarkupItem.java"><method name="valueOf" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IMarkupItem;" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IMarkupItem;" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IMarkupItem;" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IUntypedAtomicItem" sourcefilename="IUntypedAtomicItem.java"/><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/PositiveIntegerItemImpl" sourcefilename="PositiveIntegerItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/PositiveIntegerAdapter;" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="51"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="59"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem" sourcefilename="IDateTimeItem.java"><method name="valueOf" desc="(Lgov/nist/secauto/metaschema/core/datatype/object/DateTime;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;" line="41"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/time/ZonedDateTime;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;" line="52"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem" sourcefilename="IIntegerItem.java"><method name="valueOf" desc="(J)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="67"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/math/BigInteger;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="72"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ceiling" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="95"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floor" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="100"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/StringItemImpl" sourcefilename="StringItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/StringAdapter;" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="48"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="56"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="4"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="2"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/ITokenItem" sourcefilename="ITokenItem.java"><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/ITokenItem;" line="38"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/ITokenItem;" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newStringItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/atomic/ITokenItem;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem" sourcefilename="IYearMonthDurationItem.java"><method name="valueOf" desc="(Ljava/time/Period;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(III)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;" line="52"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem" sourcefilename="IAnyUriItem.java"><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;" line="45"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem" sourcefilename="IDateItem.java"><method name="valueOf" desc="(Lgov/nist/secauto/metaschema/core/datatype/object/Date;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="41"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/time/ZonedDateTime;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="52"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="60"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/DateTimeWithoutTimeZoneItemImpl" sourcefilename="DateTimeWithoutTimeZoneItemImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/datatype/object/DateTime;)V" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asZonedDateTime" desc="()Ljava/time/ZonedDateTime;" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/DateTimeAdapter;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/DayTimeDurationItemImpl" sourcefilename="DayTimeDurationItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/time/Duration;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/DayTimeAdapter;" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/atomic/Base64BinaryItemImpl" sourcefilename="Base64BinaryItemImpl.java"><method name="&lt;init&gt;" desc="(Ljava/nio/ByteBuffer;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/adapter/Base64Adapter;" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IAnyUriItem.java"><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="6" ci="0" mb="4" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IEmailAddressItem.java"><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="13" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IntegerItemImpl.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="1" cb="1"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="1" cb="1"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="1" cb="1"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateWithTimeZoneItemImpl.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IUuidItem.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringItemImpl.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="4"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="2"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IIPv6AddressItem.java"><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="UriReferenceItemImpl.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="9" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IMarkupItem.java"><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TokenItemImpl.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IHostnameItem.java"><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="13" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="INonNegativeIntegerItem.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="13" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="12"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractNumericItem.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IUriReferenceItem.java"><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IIPv4AddressItem.java"><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IBase64BinaryItem.java"><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="10"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MarkupLineItemImpl.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NonNegativeIntegerItemImpl.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="9" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="1" cb="1"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="1" cb="1"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="1" cb="1"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IDecimalItem.java"><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="33"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MarkupMultiLineItemImpl.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IIPAddressItem.java"/><sourcefile name="EmailAddressItemImpl.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="INcNameItem.java"><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="13" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractIntegerItem.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="2"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IDurationItem.java"><line nr="43" mi="3" ci="0" mb="2" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IStringItem.java"><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="13" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="24"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NcNameItemImpl.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IIntegerItem.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="2"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateWithoutTimeZoneItemImpl.java"><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BooleanItemImpl.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="2" cb="0"/><line nr="62" mi="7" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DecimalItemImpl.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="2"/><line nr="60" mi="0" ci="9" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="9" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="1" cb="1"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="1" cb="1"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="1" cb="1"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="77"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="9" covered="14"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractAnyAtomicItem.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UuidItemImpl.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ITokenItem.java"><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="13" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="HostnameItemImpl.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IDateTimeItem.java"><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="13" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PositiveIntegerItemImpl.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="9" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="1" cb="1"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="1" cb="1"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="1" cb="1"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IBooleanItem.java"><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="2"/><line nr="47" mi="0" ci="7" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="13" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="21" covered="46"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="INumericItem.java"><line nr="46" mi="0" ci="3" mb="0" cb="2"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="7" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="2"/><line nr="107" mi="0" ci="3" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="2"/><line nr="113" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="9" mb="0" cb="2"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="117"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="5" covered="30"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractStringItem.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnyUriItemImpl.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="YearMonthDurationItemImpl.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Base64BinaryItemImpl.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DayTimeDurationItemImpl.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IDayTimeDurationItem.java"><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="13" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IDateItem.java"><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="13" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IPositiveIntegerItem.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="13" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="9"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IPv4AddressItemImpl.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IUntypedAtomicItem.java"/><sourcefile name="DateTimeWithTimeZoneItemImpl.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IYearMonthDurationItem.java"><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="13" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IAnyAtomicItem.java"><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IPv6AddressItemImpl.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DateTimeWithoutTimeZoneItemImpl.java"><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="988" covered="568"/><counter type="BRANCH" missed="60" covered="42"/><counter type="LINE" missed="263" covered="152"/><counter type="COMPLEXITY" missed="156" covered="78"/><counter type="METHOD" missed="120" covered="63"/><counter type="CLASS" missed="31" covered="21"/></package><package name="gov/nist/secauto/metaschema/core/datatype/object"><class name="gov/nist/secauto/metaschema/core/datatype/object/DateTime" sourcefilename="DateTime.java"><method name="&lt;init&gt;" desc="(Ljava/time/ZonedDateTime;Z)V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lgov/nist/secauto/metaschema/core/datatype/object/DateTime;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/object/AbstractAmbiguousTemporal" sourcefilename="AbstractAmbiguousTemporal.java"><method name="&lt;init&gt;" desc="(Ljava/time/ZonedDateTime;Z)V" line="63"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasTimeZone" desc="()Z" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="7"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/object/Date" sourcefilename="Date.java"><method name="&lt;init&gt;" desc="(Ljava/time/ZonedDateTime;Z)V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lgov/nist/secauto/metaschema/core/datatype/object/Date;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Date.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateTime.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractAmbiguousTemporal.java"><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="7"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="21" covered="17"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="3"/></package><package name="gov/nist/secauto/metaschema/core/metapath/antlr"><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PathexprContext" sourcefilename="metapath10Parser.java"><method name="SLASH" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1279"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="relativepathexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$RelativepathexprContext;" line="1281"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SS" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1283"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1285"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1287"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1290"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ValuecompContext" sourcefilename="metapath10Parser.java"><method name="KW_EQ" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1231"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_NE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1232"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_LT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1233"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_LE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1234"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_GT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1235"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_GE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1236"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1238"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1240"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1243"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="8" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Visitor" sourcefilename="metapath10Visitor.java"/><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NumericliteralContext" sourcefilename="metapath10Parser.java"><method name="IntegerLiteral" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2458"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="DecimalLiteral" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2459"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="DoubleLiteral" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2460"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2462"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2464"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2467"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentlistContext" sourcefilename="metapath10Parser.java"><method name="OP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2064"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="CP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2065"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="argument" desc="()Ljava/util/List;" line="2067"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="argument" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentContext;" line="2070"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="COMMA" desc="()Ljava/util/List;" line="2072"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="COMMA" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2074"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2077"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2079"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2082"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="8" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MetapathContext" sourcefilename="metapath10Parser.java"><method name="expr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprContext;" line="142"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EOF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="144"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="146"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="148"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="151"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$SimpleletbindingContext" sourcefilename="metapath10Parser.java"><method name="DOLLAR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="399"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="varname" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarnameContext;" line="401"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="CEQ" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="403"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exprsingle" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprsingleContext;" line="405"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="408"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="410"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="413"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentContext" sourcefilename="metapath10Parser.java"><method name="exprsingle" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprsingleContext;" line="2708"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2711"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="2713"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2716"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$GeneralcompContext" sourcefilename="metapath10Parser.java"><method name="EQ" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1183"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="NE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1184"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1185"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1186"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="GT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1187"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="GE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1188"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1190"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1192"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1195"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="8" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser" sourcefilename="metapath10Parser.java"><method name="makeRuleNames" desc="()[Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="187"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeLiteralNames" desc="()[Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="259"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeSymbolicNames" desc="()[Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="291"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenNames" desc="()[Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVocabulary" desc="()Lorg/antlr/v4/runtime/Vocabulary;" line="120"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGrammarFileName" desc="()Ljava/lang/String;" line="124"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleNames" desc="()[Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSerializedATN" desc="()Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getATN" desc="()Lorg/antlr/v4/runtime/atn/ATN;" line="133"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/TokenStream;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metapath" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MetapathContext;" line="157"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprContext;" line="202"><counter type="INSTRUCTION" missed="40" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="11" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exprsingle" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprsingleContext;" line="258"><counter type="INSTRUCTION" missed="25" covered="44"/><counter type="BRANCH" missed="2" covered="1"/><counter type="LINE" missed="8" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="letexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LetexprContext;" line="311"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simpleletclause" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$SimpleletclauseContext;" line="359"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simpleletbinding" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$SimpleletbindingContext;" line="419"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$OrexprContext;" line="468"><counter type="INSTRUCTION" missed="14" covered="68"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AndexprContext;" line="528"><counter type="INSTRUCTION" missed="14" covered="68"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comparisonexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ComparisonexprContext;" line="590"><counter type="INSTRUCTION" missed="19" covered="83"/><counter type="BRANCH" missed="1" covered="6"/><counter type="LINE" missed="5" covered="22"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringconcatexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StringconcatexprContext;" line="672"><counter type="INSTRUCTION" missed="40" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="11" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="additiveexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AdditiveexprContext;" line="736"><counter type="INSTRUCTION" missed="23" covered="91"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="5" covered="22"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplicativeexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MultiplicativeexprContext;" line="816"><counter type="INSTRUCTION" missed="39" covered="87"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="9" covered="18"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unionexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnionexprContext;" line="888"><counter type="INSTRUCTION" missed="69" covered="45"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="16" covered="11"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intersectexceptexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$IntersectexceptexprContext;" line="960"><counter type="INSTRUCTION" missed="69" covered="45"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="16" covered="11"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arrowexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowexprContext;" line="1037"><counter type="INSTRUCTION" missed="46" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="13" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unaryexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnaryexprContext;" line="1100"><counter type="INSTRUCTION" missed="69" covered="51"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="13" covered="13"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ValueexprContext;" line="1162"><counter type="INSTRUCTION" missed="14" covered="27"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generalcomp" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$GeneralcompContext;" line="1201"><counter type="INSTRUCTION" missed="23" covered="54"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valuecomp" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ValuecompContext;" line="1249"><counter type="INSTRUCTION" missed="23" covered="54"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pathexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PathexprContext;" line="1296"><counter type="INSTRUCTION" missed="32" covered="79"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="10" covered="19"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="relativepathexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$RelativepathexprContext;" line="1379"><counter type="INSTRUCTION" missed="26" covered="88"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="5" covered="22"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stepexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StepexprContext;" line="1443"><counter type="INSTRUCTION" missed="14" covered="55"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="axisstep" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AxisstepContext;" line="1498"><counter type="INSTRUCTION" missed="14" covered="57"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forwardstep" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardstepContext;" line="1556"><counter type="INSTRUCTION" missed="14" covered="61"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forwardaxis" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardaxisContext;" line="1611"><counter type="INSTRUCTION" missed="76" covered="48"/><counter type="BRANCH" missed="4" covered="1"/><counter type="LINE" missed="23" covered="13"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abbrevforwardstep" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevforwardstepContext;" line="1693"><counter type="INSTRUCTION" missed="14" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reversestep" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReversestepContext;" line="1746"><counter type="INSTRUCTION" missed="19" covered="57"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseaxis" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReverseaxisContext;" line="1804"><counter type="INSTRUCTION" missed="57" covered="48"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="17" covered="13"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abbrevreversestep" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevreversestepContext;" line="1872"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nametest" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NametestContext;" line="1911"><counter type="INSTRUCTION" missed="19" covered="51"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="5" covered="15"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wildcard" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$WildcardContext;" line="1986"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postfixexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PostfixexprContext;" line="2028"><counter type="INSTRUCTION" missed="33" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argumentlist" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentlistContext;" line="2088"><counter type="INSTRUCTION" missed="61" covered="52"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="17" covered="12"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predicatelist" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicatelistContext;" line="2156"><counter type="INSTRUCTION" missed="33" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="9" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predicate" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicateContext;" line="2207"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrowfunctionspecifier" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowfunctionspecifierContext;" line="2253"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primaryexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PrimaryexprContext;" line="2349"><counter type="INSTRUCTION" missed="36" covered="66"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="12" covered="18"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="literal" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LiteralContext;" line="2420"><counter type="INSTRUCTION" missed="31" covered="40"/><counter type="BRANCH" missed="2" covered="1"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numericliteral" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NumericliteralContext;" line="2473"><counter type="INSTRUCTION" missed="23" covered="58"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="varref" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarrefContext;" line="2519"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="varname" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarnameContext;" line="2557"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parenthesizedexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ParenthesizedexprContext;" line="2595"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contextitemexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ContextitemexprContext;" line="2641"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="functioncall" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$FunctioncallContext;" line="2680"><counter type="INSTRUCTION" missed="20" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentContext;" line="2722"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eqname" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$EqnameContext;" line="2782"><counter type="INSTRUCTION" missed="23" covered="58"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sempred" desc="(Lorg/antlr/v4/runtime/RuleContext;II)Z" line="2812"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="functioncall_sempred" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$FunctioncallContext;I)Z" line="2819"><counter type="INSTRUCTION" missed="3" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1717" covered="2772"/><counter type="BRANCH" missed="94" covered="85"/><counter type="LINE" missed="460" covered="510"/><counter type="COMPLEXITY" missed="92" covered="67"/><counter type="METHOD" missed="14" covered="45"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10BaseVisitor" sourcefilename="metapath10BaseVisitor.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitMetapath" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MetapathContext;)Ljava/lang/Object;" line="20"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitExpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprContext;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitExprsingle" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprsingleContext;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitLetexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LetexprContext;)Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitSimpleletclause" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$SimpleletclauseContext;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitSimpleletbinding" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$SimpleletbindingContext;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitOrexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$OrexprContext;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAndexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AndexprContext;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitComparisonexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ComparisonexprContext;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitStringconcatexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StringconcatexprContext;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAdditiveexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AdditiveexprContext;)Ljava/lang/Object;" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitMultiplicativeexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MultiplicativeexprContext;)Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitUnionexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnionexprContext;)Ljava/lang/Object;" line="104"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitIntersectexceptexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$IntersectexceptexprContext;)Ljava/lang/Object;" line="111"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitArrowexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowexprContext;)Ljava/lang/Object;" line="118"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitUnaryexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnaryexprContext;)Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitValueexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ValueexprContext;)Ljava/lang/Object;" line="132"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitGeneralcomp" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$GeneralcompContext;)Ljava/lang/Object;" line="139"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitValuecomp" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ValuecompContext;)Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPathexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PathexprContext;)Ljava/lang/Object;" line="153"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitRelativepathexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$RelativepathexprContext;)Ljava/lang/Object;" line="160"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitStepexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StepexprContext;)Ljava/lang/Object;" line="167"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAxisstep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AxisstepContext;)Ljava/lang/Object;" line="174"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitForwardstep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardstepContext;)Ljava/lang/Object;" line="181"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitForwardaxis" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardaxisContext;)Ljava/lang/Object;" line="188"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAbbrevforwardstep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevforwardstepContext;)Ljava/lang/Object;" line="195"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitReversestep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReversestepContext;)Ljava/lang/Object;" line="202"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitReverseaxis" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReverseaxisContext;)Ljava/lang/Object;" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAbbrevreversestep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevreversestepContext;)Ljava/lang/Object;" line="216"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitNametest" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NametestContext;)Ljava/lang/Object;" line="223"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitWildcard" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$WildcardContext;)Ljava/lang/Object;" line="230"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPostfixexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PostfixexprContext;)Ljava/lang/Object;" line="237"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitArgumentlist" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentlistContext;)Ljava/lang/Object;" line="244"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPredicatelist" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicatelistContext;)Ljava/lang/Object;" line="251"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPredicate" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicateContext;)Ljava/lang/Object;" line="258"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitArrowfunctionspecifier" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowfunctionspecifierContext;)Ljava/lang/Object;" line="265"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPrimaryexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PrimaryexprContext;)Ljava/lang/Object;" line="272"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitLiteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LiteralContext;)Ljava/lang/Object;" line="279"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitNumericliteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NumericliteralContext;)Ljava/lang/Object;" line="286"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitVarref" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarrefContext;)Ljava/lang/Object;" line="293"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitVarname" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarnameContext;)Ljava/lang/Object;" line="300"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitParenthesizedexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ParenthesizedexprContext;)Ljava/lang/Object;" line="307"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitContextitemexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ContextitemexprContext;)Ljava/lang/Object;" line="314"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFunctioncall" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$FunctioncallContext;)Ljava/lang/Object;" line="321"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitArgument" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentContext;)Ljava/lang/Object;" line="328"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitEqname" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$EqnameContext;)Ljava/lang/Object;" line="335"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="184" covered="3"/><counter type="LINE" missed="46" covered="1"/><counter type="COMPLEXITY" missed="46" covered="1"/><counter type="METHOD" missed="46" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AdditiveexprContext" sourcefilename="metapath10Parser.java"><method name="multiplicativeexpr" desc="()Ljava/util/List;" line="711"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiplicativeexpr" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MultiplicativeexprContext;" line="714"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PLUS" desc="()Ljava/util/List;" line="716"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PLUS" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="718"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUS" desc="()Ljava/util/List;" line="720"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUS" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="722"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="725"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="727"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="730"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="8" covered="3"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ComparisonexprContext" sourcefilename="metapath10Parser.java"><method name="stringconcatexpr" desc="()Ljava/util/List;" line="567"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stringconcatexpr" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StringconcatexprContext;" line="570"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuecomp" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ValuecompContext;" line="573"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generalcomp" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$GeneralcompContext;" line="576"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="579"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="581"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="584"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$SimpleletclauseContext" sourcefilename="metapath10Parser.java"><method name="KW_LET" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="336"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simpleletbinding" desc="()Ljava/util/List;" line="338"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simpleletbinding" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$SimpleletbindingContext;" line="341"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="COMMA" desc="()Ljava/util/List;" line="343"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="COMMA" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="345"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="348"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="350"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="353"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Lexer" sourcefilename="metapath10Lexer.java"><method name="makeRuleNames" desc="()[Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="327"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeLiteralNames" desc="()[Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="0" covered="259"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeSymbolicNames" desc="()[Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="0" covered="291"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenNames" desc="()[Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVocabulary" desc="()Lorg/antlr/v4/runtime/Vocabulary;" line="117"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/CharStream;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGrammarFileName" desc="()Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleNames" desc="()[Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSerializedATN" desc="()Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChannelNames" desc="()[Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModeNames" desc="()[Ljava/lang/String;" line="139"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getATN" desc="()Lorg/antlr/v4/runtime/atn/ATN;" line="142"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="993"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="8" covered="27"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="8" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$EqnameContext" sourcefilename="metapath10Parser.java"><method name="LocalName" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2743"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_ANCESTOR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2744"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_ANCESTOR_OR_SELF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2745"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_AND" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2746"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_CHILD" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2747"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_DESCENDANT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2748"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_DESCENDANT_OR_SELF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2749"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_DIV" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2750"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_EMPTY_SEQUENCE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2751"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_EQ" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2752"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_EXCEPT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2753"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_GE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2754"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_GT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2755"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_IDIV" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2756"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_INTERSECT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2757"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_LE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2758"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_LET" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2759"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_LT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2760"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_MOD" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2761"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_NE" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2762"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_OR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2763"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_PARENT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2764"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_PRECEDING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2765"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_PRECEDING_SIBLING" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2766"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_RETURN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2767"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_SELF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2768"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_UNION" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2769"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2771"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2773"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2776"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="141" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="29" covered="3"/><counter type="COMPLEXITY" missed="29" covered="2"/><counter type="METHOD" missed="28" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevreversestepContext" sourcefilename="metapath10Parser.java"><method name="DD" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1859"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1861"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1863"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1866"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ContextitemexprContext" sourcefilename="metapath10Parser.java"><method name="D" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2628"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2630"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2632"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2635"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NametestContext" sourcefilename="metapath10Parser.java"><method name="eqname" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$EqnameContext;" line="1894"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wildcard" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$WildcardContext;" line="1897"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1900"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1902"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1905"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReversestepContext" sourcefilename="metapath10Parser.java"><method name="reverseaxis" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReverseaxisContext;" line="1726"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nametest" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NametestContext;" line="1729"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abbrevreversestep" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevreversestepContext;" line="1732"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1735"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1737"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1740"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$WildcardContext" sourcefilename="metapath10Parser.java"><method name="STAR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1973"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1975"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1977"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1980"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicateContext" sourcefilename="metapath10Parser.java"><method name="OB" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2190"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprContext;" line="2192"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="CB" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2194"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2196"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="2198"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2201"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardstepContext" sourcefilename="metapath10Parser.java"><method name="forwardaxis" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardaxisContext;" line="1536"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nametest" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NametestContext;" line="1539"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abbrevforwardstep" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevforwardstepContext;" line="1542"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1545"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1547"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1550"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StepexprContext" sourcefilename="metapath10Parser.java"><method name="postfixexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PostfixexprContext;" line="1426"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="axisstep" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AxisstepContext;" line="1429"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1432"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1434"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1437"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardaxisContext" sourcefilename="metapath10Parser.java"><method name="KW_CHILD" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1594"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="COLONCOLON" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1595"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_DESCENDANT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1596"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_SELF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1597"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_DESCENDANT_OR_SELF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1598"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1600"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1602"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1605"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnionexprContext" sourcefilename="metapath10Parser.java"><method name="intersectexceptexpr" desc="()Ljava/util/List;" line="863"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intersectexceptexpr" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$IntersectexceptexprContext;" line="866"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_UNION" desc="()Ljava/util/List;" line="868"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_UNION" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="870"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="P" desc="()Ljava/util/List;" line="872"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="P" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="874"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="877"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="879"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="882"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="8" covered="3"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowexprContext" sourcefilename="metapath10Parser.java"><method name="unaryexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnaryexprContext;" line="1007"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EG" desc="()Ljava/util/List;" line="1009"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="EG" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1011"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrowfunctionspecifier" desc="()Ljava/util/List;" line="1014"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrowfunctionspecifier" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowfunctionspecifierContext;" line="1017"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="argumentlist" desc="()Ljava/util/List;" line="1020"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="argumentlist" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentlistContext;" line="1023"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1026"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1028"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1031"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="9" covered="3"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="8" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$FunctioncallContext" sourcefilename="metapath10Parser.java"><method name="eqname" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$EqnameContext;" line="2663"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argumentlist" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentlistContext;" line="2666"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2669"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2671"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2674"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReverseaxisContext" sourcefilename="metapath10Parser.java"><method name="KW_PARENT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1788"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="COLONCOLON" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1789"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_ANCESTOR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1790"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_ANCESTOR_OR_SELF" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1791"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1793"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1795"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1798"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnaryexprContext" sourcefilename="metapath10Parser.java"><method name="valueexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ValueexprContext;" line="1078"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUS" desc="()Ljava/util/List;" line="1080"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="MINUS" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1082"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PLUS" desc="()Ljava/util/List;" line="1084"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PLUS" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1086"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1089"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1091"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1094"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicatelistContext" sourcefilename="metapath10Parser.java"><method name="predicate" desc="()Ljava/util/List;" line="2139"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="predicate" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicateContext;" line="2142"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2145"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2147"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2150"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarrefContext" sourcefilename="metapath10Parser.java"><method name="DOLLAR" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2503"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="varname" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarnameContext;" line="2505"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2508"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="2510"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2513"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AndexprContext" sourcefilename="metapath10Parser.java"><method name="comparisonexpr" desc="()Ljava/util/List;" line="507"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="comparisonexpr" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ComparisonexprContext;" line="510"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_AND" desc="()Ljava/util/List;" line="512"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_AND" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="514"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="517"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="519"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="522"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LiteralContext" sourcefilename="metapath10Parser.java"><method name="numericliteral" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NumericliteralContext;" line="2405"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="StringLiteral" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2407"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2409"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2411"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2414"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LetexprContext" sourcefilename="metapath10Parser.java"><method name="simpleletclause" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$SimpleletclauseContext;" line="293"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_RETURN" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="295"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exprsingle" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprsingleContext;" line="297"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="300"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="302"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="305"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MultiplicativeexprContext" sourcefilename="metapath10Parser.java"><method name="unionexpr" desc="()Ljava/util/List;" line="783"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unionexpr" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnionexprContext;" line="786"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STAR" desc="()Ljava/util/List;" line="788"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="STAR" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="790"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_DIV" desc="()Ljava/util/List;" line="792"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_DIV" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="794"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_IDIV" desc="()Ljava/util/List;" line="796"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_IDIV" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="798"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_MOD" desc="()Ljava/util/List;" line="800"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_MOD" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="802"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="805"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="807"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="810"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="12" covered="3"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="11" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevforwardstepContext" sourcefilename="metapath10Parser.java"><method name="nametest" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NametestContext;" line="1678"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AT" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1680"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1682"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1684"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1687"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PostfixexprContext" sourcefilename="metapath10Parser.java"><method name="primaryexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PrimaryexprContext;" line="2008"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="predicate" desc="()Ljava/util/List;" line="2011"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="predicate" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicateContext;" line="2014"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2017"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2019"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2022"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarnameContext" sourcefilename="metapath10Parser.java"><method name="eqname" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$EqnameContext;" line="2543"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2546"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="2548"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2551"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprContext" sourcefilename="metapath10Parser.java"><method name="exprsingle" desc="()Ljava/util/List;" line="181"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exprsingle" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprsingleContext;" line="184"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="COMMA" desc="()Ljava/util/List;" line="186"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="COMMA" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="188"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="191"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="193"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="196"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$IntersectexceptexprContext" sourcefilename="metapath10Parser.java"><method name="arrowexpr" desc="()Ljava/util/List;" line="935"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrowexpr" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowexprContext;" line="938"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_INTERSECT" desc="()Ljava/util/List;" line="940"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_INTERSECT" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="942"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_EXCEPT" desc="()Ljava/util/List;" line="944"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_EXCEPT" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="946"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="949"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="951"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="954"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="8" covered="3"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StringconcatexprContext" sourcefilename="metapath10Parser.java"><method name="additiveexpr" desc="()Ljava/util/List;" line="651"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="additiveexpr" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AdditiveexprContext;" line="654"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PP" desc="()Ljava/util/List;" line="656"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PP" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="658"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="661"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="663"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="666"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowfunctionspecifierContext" sourcefilename="metapath10Parser.java"><method name="eqname" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$EqnameContext;" line="2233"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="varref" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarrefContext;" line="2236"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parenthesizedexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ParenthesizedexprContext;" line="2239"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2242"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="2244"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2247"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PrimaryexprContext" sourcefilename="metapath10Parser.java"><method name="literal" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LiteralContext;" line="2323"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="varref" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarrefContext;" line="2326"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parenthesizedexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ParenthesizedexprContext;" line="2329"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contextitemexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ContextitemexprContext;" line="2332"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="functioncall" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$FunctioncallContext;" line="2335"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2338"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2340"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2343"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ParenthesizedexprContext" sourcefilename="metapath10Parser.java"><method name="OP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2578"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="CP" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2579"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprContext;" line="2581"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2584"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="2586"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="2589"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ValueexprContext" sourcefilename="metapath10Parser.java"><method name="pathexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PathexprContext;" line="1148"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1151"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1153"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1156"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AxisstepContext" sourcefilename="metapath10Parser.java"><method name="predicatelist" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicatelistContext;" line="1478"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reversestep" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReversestepContext;" line="1481"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forwardstep" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardstepContext;" line="1484"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1487"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1489"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1492"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$RelativepathexprContext" sourcefilename="metapath10Parser.java"><method name="stepexpr" desc="()Ljava/util/List;" line="1354"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stepexpr" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StepexprContext;" line="1357"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SLASH" desc="()Ljava/util/List;" line="1359"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SLASH" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1361"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SS" desc="()Ljava/util/List;" line="1363"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SS" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1365"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1368"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1370"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="1373"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="8" covered="3"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprsingleContext" sourcefilename="metapath10Parser.java"><method name="letexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LetexprContext;" line="241"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orexpr" desc="()Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$OrexprContext;" line="244"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="247"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="249"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="252"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$OrexprContext" sourcefilename="metapath10Parser.java"><method name="andexpr" desc="()Ljava/util/List;" line="447"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="andexpr" desc="(I)Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AndexprContext;" line="450"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_OR" desc="()Ljava/util/List;" line="452"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="KW_OR" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="454"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="457"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="459"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;" line="462"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="metapath10Visitor.java"/><sourcefile name="metapath10BaseVisitor.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="279" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="321" mi="4" ci="0" mb="0" cb="0"/><line nr="328" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="184" covered="3"/><counter type="LINE" missed="46" covered="1"/><counter type="COMPLEXITY" missed="46" covered="1"/><counter type="METHOD" missed="46" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="metapath10Lexer.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="11" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="327" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="259" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="291" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="2"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="486" mi="0" ci="4" mb="0" cb="0"/><line nr="487" mi="0" ci="3" mb="0" cb="0"/><line nr="489" mi="0" ci="4" mb="0" cb="0"/><line nr="490" mi="0" ci="8" mb="0" cb="2"/><line nr="491" mi="0" ci="10" mb="0" cb="0"/><line nr="493" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="993"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="8" covered="27"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="8" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="metapath10Parser.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="187" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="259" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="291" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="2"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="2"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="9" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="8" ci="0" mb="2" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="8" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="8" mb="1" cb="1"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="8" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="1" cb="1"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="6" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="6" ci="0" mb="0" cb="0"/><line nr="244" mi="6" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="8" mb="1" cb="1"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="8" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="10" mb="2" cb="1"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="3" ci="0" mb="0" cb="0"/><line nr="270" mi="1" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="3" ci="0" mb="0" cb="0"/><line nr="282" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="5" ci="0" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="6" ci="0" mb="0" cb="0"/><line nr="295" mi="5" ci="0" mb="0" cb="0"/><line nr="297" mi="6" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="2" ci="0" mb="0" cb="0"/><line nr="305" mi="8" ci="0" mb="2" cb="0"/><line nr="306" mi="4" ci="0" mb="0" cb="0"/><line nr="311" mi="8" ci="0" mb="0" cb="0"/><line nr="312" mi="5" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="3" ci="0" mb="0" cb="0"/><line nr="318" mi="3" ci="0" mb="0" cb="0"/><line nr="319" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="3" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="324" mi="1" ci="0" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="0" cb="0"/><line nr="326" mi="5" ci="0" mb="0" cb="0"/><line nr="327" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="0" cb="0"/><line nr="332" mi="2" ci="0" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="0" cb="0"/><line nr="338" mi="4" ci="0" mb="0" cb="0"/><line nr="341" mi="6" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="5" ci="0" mb="0" cb="0"/><line nr="348" mi="4" ci="0" mb="0" cb="0"/><line nr="349" mi="1" ci="0" mb="0" cb="0"/><line nr="350" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="8" ci="0" mb="2" cb="0"/><line nr="354" mi="4" ci="0" mb="0" cb="0"/><line nr="359" mi="8" ci="0" mb="0" cb="0"/><line nr="360" mi="5" ci="0" mb="0" cb="0"/><line nr="363" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="3" ci="0" mb="0" cb="0"/><line nr="366" mi="4" ci="0" mb="0" cb="0"/><line nr="367" mi="3" ci="0" mb="0" cb="0"/><line nr="368" mi="3" ci="0" mb="0" cb="0"/><line nr="369" mi="3" ci="0" mb="0" cb="0"/><line nr="370" mi="4" ci="0" mb="0" cb="0"/><line nr="371" mi="5" ci="0" mb="0" cb="0"/><line nr="372" mi="3" ci="0" mb="2" cb="0"/><line nr="375" mi="3" ci="0" mb="0" cb="0"/><line nr="376" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="3" ci="0" mb="0" cb="0"/><line nr="378" mi="3" ci="0" mb="0" cb="0"/><line nr="381" mi="3" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="383" mi="6" ci="0" mb="0" cb="0"/><line nr="387" mi="1" ci="0" mb="0" cb="0"/><line nr="388" mi="3" ci="0" mb="0" cb="0"/><line nr="389" mi="5" ci="0" mb="0" cb="0"/><line nr="390" mi="5" ci="0" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="395" mi="2" ci="0" mb="0" cb="0"/><line nr="399" mi="5" ci="0" mb="0" cb="0"/><line nr="401" mi="6" ci="0" mb="0" cb="0"/><line nr="403" mi="5" ci="0" mb="0" cb="0"/><line nr="405" mi="6" ci="0" mb="0" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="409" mi="1" ci="0" mb="0" cb="0"/><line nr="410" mi="2" ci="0" mb="0" cb="0"/><line nr="413" mi="8" ci="0" mb="2" cb="0"/><line nr="414" mi="4" ci="0" mb="0" cb="0"/><line nr="419" mi="8" ci="0" mb="0" cb="0"/><line nr="420" mi="5" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="424" mi="3" ci="0" mb="0" cb="0"/><line nr="425" mi="4" ci="0" mb="0" cb="0"/><line nr="426" mi="3" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="0" cb="0"/><line nr="428" mi="3" ci="0" mb="0" cb="0"/><line nr="429" mi="4" ci="0" mb="0" cb="0"/><line nr="430" mi="3" ci="0" mb="0" cb="0"/><line nr="431" mi="3" ci="0" mb="0" cb="0"/><line nr="434" mi="1" ci="0" mb="0" cb="0"/><line nr="435" mi="3" ci="0" mb="0" cb="0"/><line nr="436" mi="5" ci="0" mb="0" cb="0"/><line nr="437" mi="5" ci="0" mb="0" cb="0"/><line nr="440" mi="2" ci="0" mb="0" cb="0"/><line nr="442" mi="2" ci="0" mb="0" cb="0"/><line nr="447" mi="4" ci="0" mb="0" cb="0"/><line nr="450" mi="6" ci="0" mb="0" cb="0"/><line nr="452" mi="4" ci="0" mb="0" cb="0"/><line nr="454" mi="5" ci="0" mb="0" cb="0"/><line nr="457" mi="0" ci="4" mb="0" cb="0"/><line nr="458" mi="0" ci="1" mb="0" cb="0"/><line nr="459" mi="2" ci="0" mb="0" cb="0"/><line nr="462" mi="0" ci="8" mb="1" cb="1"/><line nr="463" mi="4" ci="0" mb="0" cb="0"/><line nr="468" mi="0" ci="8" mb="0" cb="0"/><line nr="469" mi="0" ci="5" mb="0" cb="0"/><line nr="472" mi="0" ci="4" mb="0" cb="0"/><line nr="474" mi="0" ci="3" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="0" cb="0"/><line nr="476" mi="0" ci="3" mb="0" cb="0"/><line nr="477" mi="0" ci="4" mb="0" cb="0"/><line nr="478" mi="0" ci="5" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="2"/><line nr="482" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="0" ci="4" mb="0" cb="0"/><line nr="484" mi="0" ci="3" mb="0" cb="0"/><line nr="485" mi="0" ci="3" mb="0" cb="0"/><line nr="488" mi="0" ci="3" mb="0" cb="0"/><line nr="489" mi="0" ci="4" mb="0" cb="0"/><line nr="490" mi="0" ci="6" mb="0" cb="0"/><line nr="494" mi="1" ci="0" mb="0" cb="0"/><line nr="495" mi="3" ci="0" mb="0" cb="0"/><line nr="496" mi="5" ci="0" mb="0" cb="0"/><line nr="497" mi="5" ci="0" mb="0" cb="0"/><line nr="500" mi="0" ci="2" mb="0" cb="0"/><line nr="502" mi="0" ci="2" mb="0" cb="0"/><line nr="507" mi="4" ci="0" mb="0" cb="0"/><line nr="510" mi="6" ci="0" mb="0" cb="0"/><line nr="512" mi="4" ci="0" mb="0" cb="0"/><line nr="514" mi="5" ci="0" mb="0" cb="0"/><line nr="517" mi="0" ci="4" mb="0" cb="0"/><line nr="518" mi="0" ci="1" mb="0" cb="0"/><line nr="519" mi="2" ci="0" mb="0" cb="0"/><line nr="522" mi="0" ci="8" mb="1" cb="1"/><line nr="523" mi="4" ci="0" mb="0" cb="0"/><line nr="528" mi="0" ci="8" mb="0" cb="0"/><line nr="529" mi="0" ci="5" mb="0" cb="0"/><line nr="532" mi="0" ci="4" mb="0" cb="0"/><line nr="534" mi="0" ci="3" mb="0" cb="0"/><line nr="535" mi="0" ci="3" mb="0" cb="0"/><line nr="536" mi="0" ci="3" mb="0" cb="0"/><line nr="537" mi="0" ci="4" mb="0" cb="0"/><line nr="538" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="3" mb="0" cb="2"/><line nr="542" mi="0" ci="3" mb="0" cb="0"/><line nr="543" mi="0" ci="4" mb="0" cb="0"/><line nr="544" mi="0" ci="3" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="548" mi="0" ci="3" mb="0" cb="0"/><line nr="549" mi="0" ci="4" mb="0" cb="0"/><line nr="550" mi="0" ci="6" mb="0" cb="0"/><line nr="554" mi="1" ci="0" mb="0" cb="0"/><line nr="555" mi="3" ci="0" mb="0" cb="0"/><line nr="556" mi="5" ci="0" mb="0" cb="0"/><line nr="557" mi="5" ci="0" mb="0" cb="0"/><line nr="560" mi="0" ci="2" mb="0" cb="0"/><line nr="562" mi="0" ci="2" mb="0" cb="0"/><line nr="567" mi="4" ci="0" mb="0" cb="0"/><line nr="570" mi="6" ci="0" mb="0" cb="0"/><line nr="573" mi="6" ci="0" mb="0" cb="0"/><line nr="576" mi="6" ci="0" mb="0" cb="0"/><line nr="579" mi="0" ci="4" mb="0" cb="0"/><line nr="580" mi="0" ci="1" mb="0" cb="0"/><line nr="581" mi="2" ci="0" mb="0" cb="0"/><line nr="584" mi="0" ci="8" mb="1" cb="1"/><line nr="585" mi="4" ci="0" mb="0" cb="0"/><line nr="590" mi="0" ci="8" mb="0" cb="0"/><line nr="591" mi="0" ci="5" mb="0" cb="0"/><line nr="594" mi="0" ci="4" mb="0" cb="0"/><line nr="596" mi="0" ci="3" mb="0" cb="0"/><line nr="597" mi="0" ci="3" mb="0" cb="0"/><line nr="598" mi="0" ci="3" mb="0" cb="0"/><line nr="599" mi="0" ci="4" mb="0" cb="0"/><line nr="600" mi="0" ci="5" mb="0" cb="0"/><line nr="601" mi="0" ci="12" mb="0" cb="4"/><line nr="603" mi="0" ci="3" mb="0" cb="0"/><line nr="604" mi="0" ci="4" mb="0" cb="0"/><line nr="605" mi="0" ci="5" mb="1" cb="2"/><line nr="613" mi="0" ci="3" mb="0" cb="0"/><line nr="614" mi="0" ci="3" mb="0" cb="0"/><line nr="616" mi="0" ci="1" mb="0" cb="0"/><line nr="624" mi="0" ci="3" mb="0" cb="0"/><line nr="625" mi="0" ci="3" mb="0" cb="0"/><line nr="627" mi="0" ci="1" mb="0" cb="0"/><line nr="629" mi="5" ci="0" mb="0" cb="0"/><line nr="631" mi="0" ci="3" mb="0" cb="0"/><line nr="632" mi="0" ci="3" mb="0" cb="0"/><line nr="638" mi="1" ci="0" mb="0" cb="0"/><line nr="639" mi="3" ci="0" mb="0" cb="0"/><line nr="640" mi="5" ci="0" mb="0" cb="0"/><line nr="641" mi="5" ci="0" mb="0" cb="0"/><line nr="644" mi="0" ci="2" mb="0" cb="0"/><line nr="646" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="4" ci="0" mb="0" cb="0"/><line nr="654" mi="6" ci="0" mb="0" cb="0"/><line nr="656" mi="4" ci="0" mb="0" cb="0"/><line nr="658" mi="5" ci="0" mb="0" cb="0"/><line nr="661" mi="0" ci="4" mb="0" cb="0"/><line nr="662" mi="0" ci="1" mb="0" cb="0"/><line nr="663" mi="2" ci="0" mb="0" cb="0"/><line nr="666" mi="0" ci="8" mb="1" cb="1"/><line nr="667" mi="4" ci="0" mb="0" cb="0"/><line nr="672" mi="0" ci="8" mb="0" cb="0"/><line nr="673" mi="0" ci="5" mb="0" cb="0"/><line nr="676" mi="0" ci="4" mb="0" cb="0"/><line nr="678" mi="0" ci="3" mb="0" cb="0"/><line nr="679" mi="0" ci="3" mb="0" cb="0"/><line nr="680" mi="0" ci="3" mb="0" cb="0"/><line nr="681" mi="0" ci="4" mb="0" cb="0"/><line nr="682" mi="0" ci="5" mb="0" cb="0"/><line nr="683" mi="0" ci="3" mb="1" cb="1"/><line nr="686" mi="3" ci="0" mb="0" cb="0"/><line nr="687" mi="4" ci="0" mb="0" cb="0"/><line nr="688" mi="3" ci="0" mb="0" cb="0"/><line nr="689" mi="3" ci="0" mb="0" cb="0"/><line nr="692" mi="3" ci="0" mb="0" cb="0"/><line nr="693" mi="4" ci="0" mb="0" cb="0"/><line nr="694" mi="6" ci="0" mb="0" cb="0"/><line nr="698" mi="1" ci="0" mb="0" cb="0"/><line nr="699" mi="3" ci="0" mb="0" cb="0"/><line nr="700" mi="5" ci="0" mb="0" cb="0"/><line nr="701" mi="5" ci="0" mb="0" cb="0"/><line nr="704" mi="0" ci="2" mb="0" cb="0"/><line nr="706" mi="0" ci="2" mb="0" cb="0"/><line nr="711" mi="4" ci="0" mb="0" cb="0"/><line nr="714" mi="6" ci="0" mb="0" cb="0"/><line nr="716" mi="4" ci="0" mb="0" cb="0"/><line nr="718" mi="5" ci="0" mb="0" cb="0"/><line nr="720" mi="4" ci="0" mb="0" cb="0"/><line nr="722" mi="5" ci="0" mb="0" cb="0"/><line nr="725" mi="0" ci="4" mb="0" cb="0"/><line nr="726" mi="0" ci="1" mb="0" cb="0"/><line nr="727" mi="2" ci="0" mb="0" cb="0"/><line nr="730" mi="0" ci="8" mb="1" cb="1"/><line nr="731" mi="4" ci="0" mb="0" cb="0"/><line nr="736" mi="0" ci="8" mb="0" cb="0"/><line nr="737" mi="0" ci="5" mb="0" cb="0"/><line nr="740" mi="0" ci="4" mb="0" cb="0"/><line nr="742" mi="0" ci="3" mb="0" cb="0"/><line nr="743" mi="0" ci="3" mb="0" cb="0"/><line nr="744" mi="0" ci="3" mb="0" cb="0"/><line nr="745" mi="0" ci="4" mb="0" cb="0"/><line nr="746" mi="0" ci="5" mb="0" cb="0"/><line nr="747" mi="0" ci="6" mb="1" cb="3"/><line nr="750" mi="0" ci="3" mb="0" cb="0"/><line nr="751" mi="0" ci="5" mb="0" cb="0"/><line nr="752" mi="0" ci="6" mb="2" cb="2"/><line nr="753" mi="6" ci="0" mb="0" cb="0"/><line nr="756" mi="3" ci="6" mb="1" cb="1"/><line nr="757" mi="0" ci="4" mb="0" cb="0"/><line nr="758" mi="0" ci="3" mb="0" cb="0"/><line nr="760" mi="0" ci="3" mb="0" cb="0"/><line nr="761" mi="0" ci="3" mb="0" cb="0"/><line nr="764" mi="0" ci="3" mb="0" cb="0"/><line nr="765" mi="0" ci="4" mb="0" cb="0"/><line nr="766" mi="0" ci="6" mb="0" cb="0"/><line nr="770" mi="1" ci="0" mb="0" cb="0"/><line nr="771" mi="3" ci="0" mb="0" cb="0"/><line nr="772" mi="5" ci="0" mb="0" cb="0"/><line nr="773" mi="5" ci="0" mb="0" cb="0"/><line nr="776" mi="0" ci="2" mb="0" cb="0"/><line nr="778" mi="0" ci="2" mb="0" cb="0"/><line nr="783" mi="4" ci="0" mb="0" cb="0"/><line nr="786" mi="6" ci="0" mb="0" cb="0"/><line nr="788" mi="4" ci="0" mb="0" cb="0"/><line nr="790" mi="5" ci="0" mb="0" cb="0"/><line nr="792" mi="4" ci="0" mb="0" cb="0"/><line nr="794" mi="5" ci="0" mb="0" cb="0"/><line nr="796" mi="4" ci="0" mb="0" cb="0"/><line nr="798" mi="5" ci="0" mb="0" cb="0"/><line nr="800" mi="4" ci="0" mb="0" cb="0"/><line nr="802" mi="5" ci="0" mb="0" cb="0"/><line nr="805" mi="0" ci="4" mb="0" cb="0"/><line nr="806" mi="0" ci="1" mb="0" cb="0"/><line nr="807" mi="2" ci="0" mb="0" cb="0"/><line nr="810" mi="0" ci="8" mb="1" cb="1"/><line nr="811" mi="4" ci="0" mb="0" cb="0"/><line nr="816" mi="0" ci="8" mb="0" cb="0"/><line nr="817" mi="0" ci="5" mb="0" cb="0"/><line nr="820" mi="0" ci="4" mb="0" cb="0"/><line nr="822" mi="0" ci="3" mb="0" cb="0"/><line nr="823" mi="0" ci="3" mb="0" cb="0"/><line nr="824" mi="0" ci="3" mb="0" cb="0"/><line nr="825" mi="0" ci="4" mb="0" cb="0"/><line nr="826" mi="0" ci="5" mb="0" cb="0"/><line nr="827" mi="0" ci="12" mb="0" cb="4"/><line nr="830" mi="0" ci="3" mb="0" cb="0"/><line nr="831" mi="0" ci="5" mb="0" cb="0"/><line nr="832" mi="0" ci="12" mb="2" cb="2"/><line nr="833" mi="6" ci="0" mb="0" cb="0"/><line nr="836" mi="3" ci="6" mb="1" cb="1"/><line nr="837" mi="0" ci="4" mb="0" cb="0"/><line nr="838" mi="0" ci="3" mb="0" cb="0"/><line nr="840" mi="0" ci="3" mb="0" cb="0"/><line nr="841" mi="3" ci="0" mb="0" cb="0"/><line nr="844" mi="3" ci="0" mb="0" cb="0"/><line nr="845" mi="4" ci="0" mb="0" cb="0"/><line nr="846" mi="6" ci="0" mb="0" cb="0"/><line nr="850" mi="1" ci="0" mb="0" cb="0"/><line nr="851" mi="3" ci="0" mb="0" cb="0"/><line nr="852" mi="5" ci="0" mb="0" cb="0"/><line nr="853" mi="5" ci="0" mb="0" cb="0"/><line nr="856" mi="0" ci="2" mb="0" cb="0"/><line nr="858" mi="0" ci="2" mb="0" cb="0"/><line nr="863" mi="4" ci="0" mb="0" cb="0"/><line nr="866" mi="6" ci="0" mb="0" cb="0"/><line nr="868" mi="4" ci="0" mb="0" cb="0"/><line nr="870" mi="5" ci="0" mb="0" cb="0"/><line nr="872" mi="4" ci="0" mb="0" cb="0"/><line nr="874" mi="5" ci="0" mb="0" cb="0"/><line nr="877" mi="0" ci="4" mb="0" cb="0"/><line nr="878" mi="0" ci="1" mb="0" cb="0"/><line nr="879" mi="2" ci="0" mb="0" cb="0"/><line nr="882" mi="0" ci="8" mb="1" cb="1"/><line nr="883" mi="4" ci="0" mb="0" cb="0"/><line nr="888" mi="0" ci="8" mb="0" cb="0"/><line nr="889" mi="0" ci="5" mb="0" cb="0"/><line nr="892" mi="0" ci="4" mb="0" cb="0"/><line nr="894" mi="0" ci="3" mb="0" cb="0"/><line nr="895" mi="0" ci="3" mb="0" cb="0"/><line nr="896" mi="0" ci="3" mb="0" cb="0"/><line nr="897" mi="0" ci="4" mb="0" cb="0"/><line nr="898" mi="0" ci="5" mb="0" cb="0"/><line nr="899" mi="0" ci="6" mb="2" cb="2"/><line nr="902" mi="3" ci="0" mb="0" cb="0"/><line nr="903" mi="5" ci="0" mb="0" cb="0"/><line nr="904" mi="6" ci="0" mb="4" cb="0"/><line nr="905" mi="6" ci="0" mb="0" cb="0"/><line nr="908" mi="9" ci="0" mb="2" cb="0"/><line nr="909" mi="4" ci="0" mb="0" cb="0"/><line nr="910" mi="3" ci="0" mb="0" cb="0"/><line nr="912" mi="3" ci="0" mb="0" cb="0"/><line nr="913" mi="3" ci="0" mb="0" cb="0"/><line nr="916" mi="3" ci="0" mb="0" cb="0"/><line nr="917" mi="4" ci="0" mb="0" cb="0"/><line nr="918" mi="6" ci="0" mb="0" cb="0"/><line nr="922" mi="1" ci="0" mb="0" cb="0"/><line nr="923" mi="3" ci="0" mb="0" cb="0"/><line nr="924" mi="5" ci="0" mb="0" cb="0"/><line nr="925" mi="5" ci="0" mb="0" cb="0"/><line nr="928" mi="0" ci="2" mb="0" cb="0"/><line nr="930" mi="0" ci="2" mb="0" cb="0"/><line nr="935" mi="4" ci="0" mb="0" cb="0"/><line nr="938" mi="6" ci="0" mb="0" cb="0"/><line nr="940" mi="4" ci="0" mb="0" cb="0"/><line nr="942" mi="5" ci="0" mb="0" cb="0"/><line nr="944" mi="4" ci="0" mb="0" cb="0"/><line nr="946" mi="5" ci="0" mb="0" cb="0"/><line nr="949" mi="0" ci="4" mb="0" cb="0"/><line nr="950" mi="0" ci="1" mb="0" cb="0"/><line nr="951" mi="2" ci="0" mb="0" cb="0"/><line nr="954" mi="0" ci="8" mb="1" cb="1"/><line nr="955" mi="4" ci="0" mb="0" cb="0"/><line nr="960" mi="0" ci="8" mb="0" cb="0"/><line nr="961" mi="0" ci="5" mb="0" cb="0"/><line nr="964" mi="0" ci="4" mb="0" cb="0"/><line nr="966" mi="0" ci="3" mb="0" cb="0"/><line nr="967" mi="0" ci="3" mb="0" cb="0"/><line nr="968" mi="0" ci="3" mb="0" cb="0"/><line nr="969" mi="0" ci="4" mb="0" cb="0"/><line nr="970" mi="0" ci="5" mb="0" cb="0"/><line nr="971" mi="0" ci="6" mb="2" cb="2"/><line nr="974" mi="3" ci="0" mb="0" cb="0"/><line nr="975" mi="5" ci="0" mb="0" cb="0"/><line nr="976" mi="6" ci="0" mb="4" cb="0"/><line nr="977" mi="6" ci="0" mb="0" cb="0"/><line nr="980" mi="9" ci="0" mb="2" cb="0"/><line nr="981" mi="4" ci="0" mb="0" cb="0"/><line nr="982" mi="3" ci="0" mb="0" cb="0"/><line nr="984" mi="3" ci="0" mb="0" cb="0"/><line nr="985" mi="3" ci="0" mb="0" cb="0"/><line nr="988" mi="3" ci="0" mb="0" cb="0"/><line nr="989" mi="4" ci="0" mb="0" cb="0"/><line nr="990" mi="6" ci="0" mb="0" cb="0"/><line nr="994" mi="1" ci="0" mb="0" cb="0"/><line nr="995" mi="3" ci="0" mb="0" cb="0"/><line nr="996" mi="5" ci="0" mb="0" cb="0"/><line nr="997" mi="5" ci="0" mb="0" cb="0"/><line nr="1000" mi="0" ci="2" mb="0" cb="0"/><line nr="1002" mi="0" ci="2" mb="0" cb="0"/><line nr="1007" mi="6" ci="0" mb="0" cb="0"/><line nr="1009" mi="4" ci="0" mb="0" cb="0"/><line nr="1011" mi="5" ci="0" mb="0" cb="0"/><line nr="1014" mi="4" ci="0" mb="0" cb="0"/><line nr="1017" mi="6" ci="0" mb="0" cb="0"/><line nr="1020" mi="4" ci="0" mb="0" cb="0"/><line nr="1023" mi="6" ci="0" mb="0" cb="0"/><line nr="1026" mi="0" ci="4" mb="0" cb="0"/><line nr="1027" mi="0" ci="1" mb="0" cb="0"/><line nr="1028" mi="2" ci="0" mb="0" cb="0"/><line nr="1031" mi="0" ci="8" mb="1" cb="1"/><line nr="1032" mi="4" ci="0" mb="0" cb="0"/><line nr="1037" mi="0" ci="8" mb="0" cb="0"/><line nr="1038" mi="0" ci="5" mb="0" cb="0"/><line nr="1041" mi="0" ci="4" mb="0" cb="0"/><line nr="1043" mi="0" ci="3" mb="0" cb="0"/><line nr="1044" mi="0" ci="3" mb="0" cb="0"/><line nr="1045" mi="0" ci="3" mb="0" cb="0"/><line nr="1046" mi="0" ci="4" mb="0" cb="0"/><line nr="1047" mi="0" ci="5" mb="0" cb="0"/><line nr="1048" mi="0" ci="3" mb="1" cb="1"/><line nr="1051" mi="3" ci="0" mb="0" cb="0"/><line nr="1052" mi="4" ci="0" mb="0" cb="0"/><line nr="1053" mi="3" ci="0" mb="0" cb="0"/><line nr="1054" mi="3" ci="0" mb="0" cb="0"/><line nr="1055" mi="3" ci="0" mb="0" cb="0"/><line nr="1056" mi="3" ci="0" mb="0" cb="0"/><line nr="1059" mi="3" ci="0" mb="0" cb="0"/><line nr="1060" mi="4" ci="0" mb="0" cb="0"/><line nr="1061" mi="6" ci="0" mb="0" cb="0"/><line nr="1065" mi="1" ci="0" mb="0" cb="0"/><line nr="1066" mi="3" ci="0" mb="0" cb="0"/><line nr="1067" mi="5" ci="0" mb="0" cb="0"/><line nr="1068" mi="5" ci="0" mb="0" cb="0"/><line nr="1071" mi="0" ci="2" mb="0" cb="0"/><line nr="1073" mi="0" ci="2" mb="0" cb="0"/><line nr="1078" mi="6" ci="0" mb="0" cb="0"/><line nr="1080" mi="4" ci="0" mb="0" cb="0"/><line nr="1082" mi="5" ci="0" mb="0" cb="0"/><line nr="1084" mi="4" ci="0" mb="0" cb="0"/><line nr="1086" mi="5" ci="0" mb="0" cb="0"/><line nr="1089" mi="0" ci="4" mb="0" cb="0"/><line nr="1090" mi="0" ci="1" mb="0" cb="0"/><line nr="1091" mi="2" ci="0" mb="0" cb="0"/><line nr="1094" mi="0" ci="8" mb="1" cb="1"/><line nr="1095" mi="4" ci="0" mb="0" cb="0"/><line nr="1100" mi="0" ci="8" mb="0" cb="0"/><line nr="1101" mi="0" ci="5" mb="0" cb="0"/><line nr="1105" mi="0" ci="4" mb="0" cb="0"/><line nr="1107" mi="0" ci="3" mb="0" cb="0"/><line nr="1108" mi="0" ci="4" mb="0" cb="0"/><line nr="1109" mi="0" ci="10" mb="0" cb="0"/><line nr="1110" mi="2" ci="3" mb="3" cb="1"/><line nr="1111" mi="3" ci="0" mb="2" cb="0"/><line nr="1114" mi="3" ci="0" mb="0" cb="0"/><line nr="1115" mi="5" ci="0" mb="0" cb="0"/><line nr="1116" mi="6" ci="0" mb="4" cb="0"/><line nr="1117" mi="6" ci="0" mb="0" cb="0"/><line nr="1120" mi="9" ci="0" mb="2" cb="0"/><line nr="1121" mi="4" ci="0" mb="0" cb="0"/><line nr="1122" mi="3" ci="0" mb="0" cb="0"/><line nr="1127" mi="3" ci="0" mb="0" cb="0"/><line nr="1128" mi="4" ci="0" mb="0" cb="0"/><line nr="1129" mi="11" ci="0" mb="0" cb="0"/><line nr="1131" mi="0" ci="3" mb="0" cb="0"/><line nr="1132" mi="0" ci="3" mb="0" cb="0"/><line nr="1135" mi="0" ci="1" mb="0" cb="0"/><line nr="1136" mi="0" ci="3" mb="0" cb="0"/><line nr="1137" mi="5" ci="0" mb="0" cb="0"/><line nr="1138" mi="5" ci="0" mb="0" cb="0"/><line nr="1141" mi="0" ci="2" mb="0" cb="0"/><line nr="1143" mi="0" ci="2" mb="0" cb="0"/><line nr="1148" mi="6" ci="0" mb="0" cb="0"/><line nr="1151" mi="0" ci="4" mb="0" cb="0"/><line nr="1152" mi="0" ci="1" mb="0" cb="0"/><line nr="1153" mi="2" ci="0" mb="0" cb="0"/><line nr="1156" mi="0" ci="8" mb="1" cb="1"/><line nr="1157" mi="4" ci="0" mb="0" cb="0"/><line nr="1162" mi="0" ci="8" mb="0" cb="0"/><line nr="1163" mi="0" ci="5" mb="0" cb="0"/><line nr="1165" mi="0" ci="4" mb="0" cb="0"/><line nr="1167" mi="0" ci="3" mb="0" cb="0"/><line nr="1168" mi="0" ci="3" mb="0" cb="0"/><line nr="1171" mi="1" ci="0" mb="0" cb="0"/><line nr="1172" mi="3" ci="0" mb="0" cb="0"/><line nr="1173" mi="5" ci="0" mb="0" cb="0"/><line nr="1174" mi="5" ci="0" mb="0" cb="0"/><line nr="1177" mi="0" ci="2" mb="0" cb="0"/><line nr="1179" mi="0" ci="2" mb="0" cb="0"/><line nr="1183" mi="5" ci="0" mb="0" cb="0"/><line nr="1184" mi="5" ci="0" mb="0" cb="0"/><line nr="1185" mi="5" ci="0" mb="0" cb="0"/><line nr="1186" mi="5" ci="0" mb="0" cb="0"/><line nr="1187" mi="5" ci="0" mb="0" cb="0"/><line nr="1188" mi="5" ci="0" mb="0" cb="0"/><line nr="1190" mi="0" ci="4" mb="0" cb="0"/><line nr="1191" mi="0" ci="1" mb="0" cb="0"/><line nr="1192" mi="2" ci="0" mb="0" cb="0"/><line nr="1195" mi="8" ci="0" mb="2" cb="0"/><line nr="1196" mi="4" ci="0" mb="0" cb="0"/><line nr="1201" mi="0" ci="8" mb="0" cb="0"/><line nr="1202" mi="0" ci="5" mb="0" cb="0"/><line nr="1205" mi="0" ci="4" mb="0" cb="0"/><line nr="1207" mi="0" ci="3" mb="0" cb="0"/><line nr="1208" mi="0" ci="5" mb="0" cb="0"/><line nr="1209" mi="0" ci="12" mb="2" cb="2"/><line nr="1210" mi="6" ci="0" mb="0" cb="0"/><line nr="1213" mi="3" ci="6" mb="1" cb="1"/><line nr="1214" mi="0" ci="4" mb="0" cb="0"/><line nr="1215" mi="0" ci="3" mb="0" cb="0"/><line nr="1219" mi="1" ci="0" mb="0" cb="0"/><line nr="1220" mi="3" ci="0" mb="0" cb="0"/><line nr="1221" mi="5" ci="0" mb="0" cb="0"/><line nr="1222" mi="5" ci="0" mb="0" cb="0"/><line nr="1225" mi="0" ci="2" mb="0" cb="0"/><line nr="1227" mi="0" ci="2" mb="0" cb="0"/><line nr="1231" mi="5" ci="0" mb="0" cb="0"/><line nr="1232" mi="5" ci="0" mb="0" cb="0"/><line nr="1233" mi="5" ci="0" mb="0" cb="0"/><line nr="1234" mi="5" ci="0" mb="0" cb="0"/><line nr="1235" mi="5" ci="0" mb="0" cb="0"/><line nr="1236" mi="5" ci="0" mb="0" cb="0"/><line nr="1238" mi="0" ci="4" mb="0" cb="0"/><line nr="1239" mi="0" ci="1" mb="0" cb="0"/><line nr="1240" mi="2" ci="0" mb="0" cb="0"/><line nr="1243" mi="8" ci="0" mb="2" cb="0"/><line nr="1244" mi="4" ci="0" mb="0" cb="0"/><line nr="1249" mi="0" ci="8" mb="0" cb="0"/><line nr="1250" mi="0" ci="5" mb="0" cb="0"/><line nr="1253" mi="0" ci="4" mb="0" cb="0"/><line nr="1255" mi="0" ci="3" mb="0" cb="0"/><line nr="1256" mi="0" ci="5" mb="0" cb="0"/><line nr="1257" mi="0" ci="12" mb="2" cb="2"/><line nr="1258" mi="6" ci="0" mb="0" cb="0"/><line nr="1261" mi="3" ci="6" mb="1" cb="1"/><line nr="1262" mi="0" ci="4" mb="0" cb="0"/><line nr="1263" mi="0" ci="3" mb="0" cb="0"/><line nr="1267" mi="1" ci="0" mb="0" cb="0"/><line nr="1268" mi="3" ci="0" mb="0" cb="0"/><line nr="1269" mi="5" ci="0" mb="0" cb="0"/><line nr="1270" mi="5" ci="0" mb="0" cb="0"/><line nr="1273" mi="0" ci="2" mb="0" cb="0"/><line nr="1275" mi="0" ci="2" mb="0" cb="0"/><line nr="1279" mi="5" ci="0" mb="0" cb="0"/><line nr="1281" mi="6" ci="0" mb="0" cb="0"/><line nr="1283" mi="5" ci="0" mb="0" cb="0"/><line nr="1285" mi="0" ci="4" mb="0" cb="0"/><line nr="1286" mi="0" ci="1" mb="0" cb="0"/><line nr="1287" mi="2" ci="0" mb="0" cb="0"/><line nr="1290" mi="0" ci="8" mb="1" cb="1"/><line nr="1291" mi="4" ci="0" mb="0" cb="0"/><line nr="1296" mi="0" ci="8" mb="0" cb="0"/><line nr="1297" mi="0" ci="5" mb="0" cb="0"/><line nr="1299" mi="0" ci="3" mb="0" cb="0"/><line nr="1300" mi="0" ci="4" mb="0" cb="0"/><line nr="1301" mi="0" ci="10" mb="2" cb="2"/><line nr="1303" mi="0" ci="4" mb="0" cb="0"/><line nr="1306" mi="0" ci="3" mb="0" cb="0"/><line nr="1307" mi="0" ci="4" mb="0" cb="0"/><line nr="1308" mi="0" ci="3" mb="0" cb="0"/><line nr="1309" mi="0" ci="4" mb="0" cb="0"/><line nr="1310" mi="0" ci="10" mb="1" cb="1"/><line nr="1313" mi="0" ci="3" mb="0" cb="0"/><line nr="1314" mi="0" ci="3" mb="0" cb="0"/><line nr="1320" mi="0" ci="1" mb="0" cb="0"/><line nr="1322" mi="4" ci="0" mb="0" cb="0"/><line nr="1325" mi="3" ci="0" mb="0" cb="0"/><line nr="1326" mi="4" ci="0" mb="0" cb="0"/><line nr="1327" mi="3" ci="0" mb="0" cb="0"/><line nr="1328" mi="3" ci="0" mb="0" cb="0"/><line nr="1331" mi="1" ci="0" mb="0" cb="0"/><line nr="1333" mi="0" ci="4" mb="0" cb="0"/><line nr="1335" mi="0" ci="3" mb="0" cb="0"/><line nr="1336" mi="0" ci="3" mb="0" cb="0"/><line nr="1341" mi="1" ci="0" mb="0" cb="0"/><line nr="1342" mi="3" ci="0" mb="0" cb="0"/><line nr="1343" mi="5" ci="0" mb="0" cb="0"/><line nr="1344" mi="5" ci="0" mb="0" cb="0"/><line nr="1347" mi="0" ci="2" mb="0" cb="0"/><line nr="1349" mi="0" ci="2" mb="0" cb="0"/><line nr="1354" mi="4" ci="0" mb="0" cb="0"/><line nr="1357" mi="6" ci="0" mb="0" cb="0"/><line nr="1359" mi="4" ci="0" mb="0" cb="0"/><line nr="1361" mi="5" ci="0" mb="0" cb="0"/><line nr="1363" mi="4" ci="0" mb="0" cb="0"/><line nr="1365" mi="5" ci="0" mb="0" cb="0"/><line nr="1368" mi="0" ci="4" mb="0" cb="0"/><line nr="1369" mi="0" ci="1" mb="0" cb="0"/><line nr="1370" mi="2" ci="0" mb="0" cb="0"/><line nr="1373" mi="0" ci="8" mb="1" cb="1"/><line nr="1374" mi="4" ci="0" mb="0" cb="0"/><line nr="1379" mi="0" ci="8" mb="0" cb="0"/><line nr="1380" mi="0" ci="5" mb="0" cb="0"/><line nr="1383" mi="0" ci="4" mb="0" cb="0"/><line nr="1385" mi="0" ci="3" mb="0" cb="0"/><line nr="1386" mi="0" ci="3" mb="0" cb="0"/><line nr="1387" mi="0" ci="3" mb="0" cb="0"/><line nr="1388" mi="0" ci="4" mb="0" cb="0"/><line nr="1389" mi="0" ci="5" mb="0" cb="0"/><line nr="1390" mi="0" ci="6" mb="1" cb="3"/><line nr="1393" mi="0" ci="3" mb="0" cb="0"/><line nr="1394" mi="0" ci="5" mb="0" cb="0"/><line nr="1395" mi="3" ci="3" mb="3" cb="1"/><line nr="1396" mi="6" ci="0" mb="0" cb="0"/><line nr="1399" mi="3" ci="6" mb="1" cb="1"/><line nr="1400" mi="0" ci="4" mb="0" cb="0"/><line nr="1401" mi="0" ci="3" mb="0" cb="0"/><line nr="1403" mi="0" ci="3" mb="0" cb="0"/><line nr="1404" mi="0" ci="3" mb="0" cb="0"/><line nr="1407" mi="0" ci="3" mb="0" cb="0"/><line nr="1408" mi="0" ci="4" mb="0" cb="0"/><line nr="1409" mi="0" ci="6" mb="0" cb="0"/><line nr="1413" mi="1" ci="0" mb="0" cb="0"/><line nr="1414" mi="3" ci="0" mb="0" cb="0"/><line nr="1415" mi="5" ci="0" mb="0" cb="0"/><line nr="1416" mi="5" ci="0" mb="0" cb="0"/><line nr="1419" mi="0" ci="2" mb="0" cb="0"/><line nr="1421" mi="0" ci="2" mb="0" cb="0"/><line nr="1426" mi="6" ci="0" mb="0" cb="0"/><line nr="1429" mi="6" ci="0" mb="0" cb="0"/><line nr="1432" mi="0" ci="4" mb="0" cb="0"/><line nr="1433" mi="0" ci="1" mb="0" cb="0"/><line nr="1434" mi="2" ci="0" mb="0" cb="0"/><line nr="1437" mi="0" ci="8" mb="1" cb="1"/><line nr="1438" mi="4" ci="0" mb="0" cb="0"/><line nr="1443" mi="0" ci="8" mb="0" cb="0"/><line nr="1444" mi="0" ci="5" mb="0" cb="0"/><line nr="1446" mi="0" ci="3" mb="0" cb="0"/><line nr="1447" mi="0" ci="4" mb="0" cb="0"/><line nr="1448" mi="0" ci="10" mb="1" cb="2"/><line nr="1450" mi="0" ci="4" mb="0" cb="0"/><line nr="1452" mi="0" ci="3" mb="0" cb="0"/><line nr="1453" mi="0" ci="3" mb="0" cb="0"/><line nr="1455" mi="0" ci="1" mb="0" cb="0"/><line nr="1457" mi="0" ci="4" mb="0" cb="0"/><line nr="1459" mi="0" ci="3" mb="0" cb="0"/><line nr="1460" mi="0" ci="3" mb="0" cb="0"/><line nr="1465" mi="1" ci="0" mb="0" cb="0"/><line nr="1466" mi="3" ci="0" mb="0" cb="0"/><line nr="1467" mi="5" ci="0" mb="0" cb="0"/><line nr="1468" mi="5" ci="0" mb="0" cb="0"/><line nr="1471" mi="0" ci="2" mb="0" cb="0"/><line nr="1473" mi="0" ci="2" mb="0" cb="0"/><line nr="1478" mi="6" ci="0" mb="0" cb="0"/><line nr="1481" mi="6" ci="0" mb="0" cb="0"/><line nr="1484" mi="6" ci="0" mb="0" cb="0"/><line nr="1487" mi="0" ci="4" mb="0" cb="0"/><line nr="1488" mi="0" ci="1" mb="0" cb="0"/><line nr="1489" mi="2" ci="0" mb="0" cb="0"/><line nr="1492" mi="0" ci="8" mb="1" cb="1"/><line nr="1493" mi="4" ci="0" mb="0" cb="0"/><line nr="1498" mi="0" ci="8" mb="0" cb="0"/><line nr="1499" mi="0" ci="5" mb="0" cb="0"/><line nr="1501" mi="0" ci="4" mb="0" cb="0"/><line nr="1503" mi="0" ci="3" mb="0" cb="0"/><line nr="1504" mi="0" ci="4" mb="0" cb="0"/><line nr="1505" mi="0" ci="10" mb="1" cb="2"/><line nr="1508" mi="0" ci="3" mb="0" cb="0"/><line nr="1509" mi="0" ci="3" mb="0" cb="0"/><line nr="1511" mi="0" ci="1" mb="0" cb="0"/><line nr="1514" mi="0" ci="3" mb="0" cb="0"/><line nr="1515" mi="0" ci="3" mb="0" cb="0"/><line nr="1519" mi="0" ci="3" mb="0" cb="0"/><line nr="1520" mi="0" ci="3" mb="0" cb="0"/><line nr="1523" mi="1" ci="0" mb="0" cb="0"/><line nr="1524" mi="3" ci="0" mb="0" cb="0"/><line nr="1525" mi="5" ci="0" mb="0" cb="0"/><line nr="1526" mi="5" ci="0" mb="0" cb="0"/><line nr="1529" mi="0" ci="2" mb="0" cb="0"/><line nr="1531" mi="0" ci="2" mb="0" cb="0"/><line nr="1536" mi="0" ci="6" mb="0" cb="0"/><line nr="1539" mi="0" ci="6" mb="0" cb="0"/><line nr="1542" mi="6" ci="0" mb="0" cb="0"/><line nr="1545" mi="0" ci="4" mb="0" cb="0"/><line nr="1546" mi="0" ci="1" mb="0" cb="0"/><line nr="1547" mi="2" ci="0" mb="0" cb="0"/><line nr="1550" mi="0" ci="8" mb="1" cb="1"/><line nr="1551" mi="4" ci="0" mb="0" cb="0"/><line nr="1556" mi="0" ci="8" mb="0" cb="0"/><line nr="1557" mi="0" ci="5" mb="0" cb="0"/><line nr="1559" mi="0" ci="3" mb="0" cb="0"/><line nr="1560" mi="0" ci="4" mb="0" cb="0"/><line nr="1561" mi="0" ci="10" mb="1" cb="2"/><line nr="1563" mi="0" ci="4" mb="0" cb="0"/><line nr="1566" mi="0" ci="3" mb="0" cb="0"/><line nr="1567" mi="0" ci="3" mb="0" cb="0"/><line nr="1568" mi="0" ci="3" mb="0" cb="0"/><line nr="1569" mi="0" ci="3" mb="0" cb="0"/><line nr="1572" mi="0" ci="1" mb="0" cb="0"/><line nr="1574" mi="0" ci="4" mb="0" cb="0"/><line nr="1576" mi="0" ci="3" mb="0" cb="0"/><line nr="1577" mi="0" ci="3" mb="0" cb="0"/><line nr="1582" mi="1" ci="0" mb="0" cb="0"/><line nr="1583" mi="3" ci="0" mb="0" cb="0"/><line nr="1584" mi="5" ci="0" mb="0" cb="0"/><line nr="1585" mi="5" ci="0" mb="0" cb="0"/><line nr="1588" mi="0" ci="2" mb="0" cb="0"/><line nr="1590" mi="0" ci="2" mb="0" cb="0"/><line nr="1594" mi="5" ci="0" mb="0" cb="0"/><line nr="1595" mi="5" ci="0" mb="0" cb="0"/><line nr="1596" mi="5" ci="0" mb="0" cb="0"/><line nr="1597" mi="5" ci="0" mb="0" cb="0"/><line nr="1598" mi="5" ci="0" mb="0" cb="0"/><line nr="1600" mi="0" ci="4" mb="0" cb="0"/><line nr="1601" mi="0" ci="1" mb="0" cb="0"/><line nr="1602" mi="2" ci="0" mb="0" cb="0"/><line nr="1605" mi="8" ci="0" mb="2" cb="0"/><line nr="1606" mi="4" ci="0" mb="0" cb="0"/><line nr="1611" mi="0" ci="8" mb="0" cb="0"/><line nr="1612" mi="0" ci="5" mb="0" cb="0"/><line nr="1614" mi="0" ci="3" mb="0" cb="0"/><line nr="1615" mi="0" ci="4" mb="0" cb="0"/><line nr="1616" mi="0" ci="5" mb="4" cb="1"/><line nr="1618" mi="0" ci="4" mb="0" cb="0"/><line nr="1621" mi="0" ci="3" mb="0" cb="0"/><line nr="1622" mi="0" ci="4" mb="0" cb="0"/><line nr="1623" mi="0" ci="3" mb="0" cb="0"/><line nr="1624" mi="0" ci="4" mb="0" cb="0"/><line nr="1627" mi="0" ci="1" mb="0" cb="0"/><line nr="1629" mi="4" ci="0" mb="0" cb="0"/><line nr="1632" mi="3" ci="0" mb="0" cb="0"/><line nr="1633" mi="4" ci="0" mb="0" cb="0"/><line nr="1634" mi="3" ci="0" mb="0" cb="0"/><line nr="1635" mi="4" ci="0" mb="0" cb="0"/><line nr="1638" mi="1" ci="0" mb="0" cb="0"/><line nr="1640" mi="4" ci="0" mb="0" cb="0"/><line nr="1643" mi="3" ci="0" mb="0" cb="0"/><line nr="1644" mi="4" ci="0" mb="0" cb="0"/><line nr="1645" mi="3" ci="0" mb="0" cb="0"/><line nr="1646" mi="4" ci="0" mb="0" cb="0"/><line nr="1649" mi="1" ci="0" mb="0" cb="0"/><line nr="1651" mi="4" ci="0" mb="0" cb="0"/><line nr="1654" mi="3" ci="0" mb="0" cb="0"/><line nr="1655" mi="4" ci="0" mb="0" cb="0"/><line nr="1656" mi="3" ci="0" mb="0" cb="0"/><line nr="1657" mi="4" ci="0" mb="0" cb="0"/><line nr="1660" mi="1" ci="0" mb="0" cb="0"/><line nr="1662" mi="5" ci="0" mb="0" cb="0"/><line nr="1665" mi="1" ci="0" mb="0" cb="0"/><line nr="1666" mi="3" ci="0" mb="0" cb="0"/><line nr="1667" mi="5" ci="0" mb="0" cb="0"/><line nr="1668" mi="5" ci="0" mb="0" cb="0"/><line nr="1671" mi="0" ci="2" mb="0" cb="0"/><line nr="1673" mi="0" ci="2" mb="0" cb="0"/><line nr="1678" mi="6" ci="0" mb="0" cb="0"/><line nr="1680" mi="5" ci="0" mb="0" cb="0"/><line nr="1682" mi="0" ci="4" mb="0" cb="0"/><line nr="1683" mi="0" ci="1" mb="0" cb="0"/><line nr="1684" mi="2" ci="0" mb="0" cb="0"/><line nr="1687" mi="0" ci="8" mb="1" cb="1"/><line nr="1688" mi="4" ci="0" mb="0" cb="0"/><line nr="1693" mi="0" ci="8" mb="0" cb="0"/><line nr="1694" mi="0" ci="5" mb="0" cb="0"/><line nr="1697" mi="0" ci="4" mb="0" cb="0"/><line nr="1699" mi="0" ci="3" mb="0" cb="0"/><line nr="1700" mi="0" ci="4" mb="0" cb="0"/><line nr="1701" mi="0" ci="5" mb="0" cb="0"/><line nr="1702" mi="0" ci="3" mb="0" cb="2"/><line nr="1704" mi="0" ci="3" mb="0" cb="0"/><line nr="1705" mi="0" ci="4" mb="0" cb="0"/><line nr="1709" mi="0" ci="3" mb="0" cb="0"/><line nr="1710" mi="0" ci="3" mb="0" cb="0"/><line nr="1713" mi="1" ci="0" mb="0" cb="0"/><line nr="1714" mi="3" ci="0" mb="0" cb="0"/><line nr="1715" mi="5" ci="0" mb="0" cb="0"/><line nr="1716" mi="5" ci="0" mb="0" cb="0"/><line nr="1719" mi="0" ci="2" mb="0" cb="0"/><line nr="1721" mi="0" ci="2" mb="0" cb="0"/><line nr="1726" mi="0" ci="6" mb="0" cb="0"/><line nr="1729" mi="0" ci="6" mb="0" cb="0"/><line nr="1732" mi="6" ci="0" mb="0" cb="0"/><line nr="1735" mi="0" ci="4" mb="0" cb="0"/><line nr="1736" mi="0" ci="1" mb="0" cb="0"/><line nr="1737" mi="2" ci="0" mb="0" cb="0"/><line nr="1740" mi="0" ci="8" mb="1" cb="1"/><line nr="1741" mi="4" ci="0" mb="0" cb="0"/><line nr="1746" mi="0" ci="8" mb="0" cb="0"/><line nr="1747" mi="0" ci="5" mb="0" cb="0"/><line nr="1749" mi="0" ci="3" mb="0" cb="0"/><line nr="1750" mi="0" ci="4" mb="0" cb="0"/><line nr="1751" mi="0" ci="5" mb="1" cb="2"/><line nr="1755" mi="0" ci="4" mb="0" cb="0"/><line nr="1758" mi="0" ci="3" mb="0" cb="0"/><line nr="1759" mi="0" ci="3" mb="0" cb="0"/><line nr="1760" mi="0" ci="3" mb="0" cb="0"/><line nr="1761" mi="0" ci="3" mb="0" cb="0"/><line nr="1764" mi="0" ci="1" mb="0" cb="0"/><line nr="1766" mi="0" ci="4" mb="0" cb="0"/><line nr="1768" mi="0" ci="3" mb="0" cb="0"/><line nr="1769" mi="0" ci="3" mb="0" cb="0"/><line nr="1771" mi="0" ci="1" mb="0" cb="0"/><line nr="1773" mi="5" ci="0" mb="0" cb="0"/><line nr="1776" mi="1" ci="0" mb="0" cb="0"/><line nr="1777" mi="3" ci="0" mb="0" cb="0"/><line nr="1778" mi="5" ci="0" mb="0" cb="0"/><line nr="1779" mi="5" ci="0" mb="0" cb="0"/><line nr="1782" mi="0" ci="2" mb="0" cb="0"/><line nr="1784" mi="0" ci="2" mb="0" cb="0"/><line nr="1788" mi="5" ci="0" mb="0" cb="0"/><line nr="1789" mi="5" ci="0" mb="0" cb="0"/><line nr="1790" mi="5" ci="0" mb="0" cb="0"/><line nr="1791" mi="5" ci="0" mb="0" cb="0"/><line nr="1793" mi="0" ci="4" mb="0" cb="0"/><line nr="1794" mi="0" ci="1" mb="0" cb="0"/><line nr="1795" mi="2" ci="0" mb="0" cb="0"/><line nr="1798" mi="8" ci="0" mb="2" cb="0"/><line nr="1799" mi="4" ci="0" mb="0" cb="0"/><line nr="1804" mi="0" ci="8" mb="0" cb="0"/><line nr="1805" mi="0" ci="5" mb="0" cb="0"/><line nr="1807" mi="0" ci="3" mb="0" cb="0"/><line nr="1808" mi="0" ci="4" mb="0" cb="0"/><line nr="1809" mi="0" ci="5" mb="3" cb="1"/><line nr="1811" mi="0" ci="4" mb="0" cb="0"/><line nr="1814" mi="0" ci="3" mb="0" cb="0"/><line nr="1815" mi="0" ci="4" mb="0" cb="0"/><line nr="1816" mi="0" ci="3" mb="0" cb="0"/><line nr="1817" mi="0" ci="4" mb="0" cb="0"/><line nr="1820" mi="0" ci="1" mb="0" cb="0"/><line nr="1822" mi="4" ci="0" mb="0" cb="0"/><line nr="1825" mi="3" ci="0" mb="0" cb="0"/><line nr="1826" mi="4" ci="0" mb="0" cb="0"/><line nr="1827" mi="3" ci="0" mb="0" cb="0"/><line nr="1828" mi="4" ci="0" mb="0" cb="0"/><line nr="1831" mi="1" ci="0" mb="0" cb="0"/><line nr="1833" mi="4" ci="0" mb="0" cb="0"/><line nr="1836" mi="3" ci="0" mb="0" cb="0"/><line nr="1837" mi="4" ci="0" mb="0" cb="0"/><line nr="1838" mi="3" ci="0" mb="0" cb="0"/><line nr="1839" mi="4" ci="0" mb="0" cb="0"/><line nr="1842" mi="1" ci="0" mb="0" cb="0"/><line nr="1844" mi="5" ci="0" mb="0" cb="0"/><line nr="1847" mi="1" ci="0" mb="0" cb="0"/><line nr="1848" mi="3" ci="0" mb="0" cb="0"/><line nr="1849" mi="5" ci="0" mb="0" cb="0"/><line nr="1850" mi="5" ci="0" mb="0" cb="0"/><line nr="1853" mi="0" ci="2" mb="0" cb="0"/><line nr="1855" mi="0" ci="2" mb="0" cb="0"/><line nr="1859" mi="5" ci="0" mb="0" cb="0"/><line nr="1861" mi="0" ci="4" mb="0" cb="0"/><line nr="1862" mi="0" ci="1" mb="0" cb="0"/><line nr="1863" mi="2" ci="0" mb="0" cb="0"/><line nr="1866" mi="0" ci="8" mb="1" cb="1"/><line nr="1867" mi="4" ci="0" mb="0" cb="0"/><line nr="1872" mi="0" ci="8" mb="0" cb="0"/><line nr="1873" mi="0" ci="5" mb="0" cb="0"/><line nr="1875" mi="0" ci="4" mb="0" cb="0"/><line nr="1877" mi="0" ci="3" mb="0" cb="0"/><line nr="1878" mi="0" ci="4" mb="0" cb="0"/><line nr="1881" mi="1" ci="0" mb="0" cb="0"/><line nr="1882" mi="3" ci="0" mb="0" cb="0"/><line nr="1883" mi="5" ci="0" mb="0" cb="0"/><line nr="1884" mi="5" ci="0" mb="0" cb="0"/><line nr="1887" mi="0" ci="2" mb="0" cb="0"/><line nr="1889" mi="0" ci="2" mb="0" cb="0"/><line nr="1894" mi="6" ci="0" mb="0" cb="0"/><line nr="1897" mi="6" ci="0" mb="0" cb="0"/><line nr="1900" mi="0" ci="4" mb="0" cb="0"/><line nr="1901" mi="0" ci="1" mb="0" cb="0"/><line nr="1902" mi="2" ci="0" mb="0" cb="0"/><line nr="1905" mi="0" ci="8" mb="1" cb="1"/><line nr="1906" mi="4" ci="0" mb="0" cb="0"/><line nr="1911" mi="0" ci="8" mb="0" cb="0"/><line nr="1912" mi="0" ci="5" mb="0" cb="0"/><line nr="1914" mi="0" ci="3" mb="0" cb="0"/><line nr="1915" mi="0" ci="4" mb="0" cb="0"/><line nr="1916" mi="0" ci="5" mb="1" cb="2"/><line nr="1944" mi="0" ci="4" mb="0" cb="0"/><line nr="1946" mi="0" ci="3" mb="0" cb="0"/><line nr="1947" mi="0" ci="3" mb="0" cb="0"/><line nr="1949" mi="0" ci="1" mb="0" cb="0"/><line nr="1951" mi="0" ci="4" mb="0" cb="0"/><line nr="1953" mi="0" ci="3" mb="0" cb="0"/><line nr="1954" mi="0" ci="3" mb="0" cb="0"/><line nr="1956" mi="0" ci="1" mb="0" cb="0"/><line nr="1958" mi="5" ci="0" mb="0" cb="0"/><line nr="1961" mi="1" ci="0" mb="0" cb="0"/><line nr="1962" mi="3" ci="0" mb="0" cb="0"/><line nr="1963" mi="5" ci="0" mb="0" cb="0"/><line nr="1964" mi="5" ci="0" mb="0" cb="0"/><line nr="1967" mi="0" ci="2" mb="0" cb="0"/><line nr="1969" mi="0" ci="2" mb="0" cb="0"/><line nr="1973" mi="5" ci="0" mb="0" cb="0"/><line nr="1975" mi="0" ci="4" mb="0" cb="0"/><line nr="1976" mi="0" ci="1" mb="0" cb="0"/><line nr="1977" mi="2" ci="0" mb="0" cb="0"/><line nr="1980" mi="0" ci="8" mb="1" cb="1"/><line nr="1981" mi="4" ci="0" mb="0" cb="0"/><line nr="1986" mi="0" ci="8" mb="0" cb="0"/><line nr="1987" mi="0" ci="5" mb="0" cb="0"/><line nr="1989" mi="0" ci="4" mb="0" cb="0"/><line nr="1991" mi="0" ci="3" mb="0" cb="0"/><line nr="1992" mi="0" ci="4" mb="0" cb="0"/><line nr="1995" mi="1" ci="0" mb="0" cb="0"/><line nr="1996" mi="3" ci="0" mb="0" cb="0"/><line nr="1997" mi="5" ci="0" mb="0" cb="0"/><line nr="1998" mi="5" ci="0" mb="0" cb="0"/><line nr="2001" mi="0" ci="2" mb="0" cb="0"/><line nr="2003" mi="0" ci="2" mb="0" cb="0"/><line nr="2008" mi="6" ci="0" mb="0" cb="0"/><line nr="2011" mi="4" ci="0" mb="0" cb="0"/><line nr="2014" mi="6" ci="0" mb="0" cb="0"/><line nr="2017" mi="0" ci="4" mb="0" cb="0"/><line nr="2018" mi="0" ci="1" mb="0" cb="0"/><line nr="2019" mi="2" ci="0" mb="0" cb="0"/><line nr="2022" mi="0" ci="8" mb="1" cb="1"/><line nr="2023" mi="4" ci="0" mb="0" cb="0"/><line nr="2028" mi="0" ci="8" mb="0" cb="0"/><line nr="2029" mi="0" ci="5" mb="0" cb="0"/><line nr="2032" mi="0" ci="4" mb="0" cb="0"/><line nr="2034" mi="0" ci="3" mb="0" cb="0"/><line nr="2035" mi="0" ci="3" mb="0" cb="0"/><line nr="2036" mi="0" ci="3" mb="0" cb="0"/><line nr="2037" mi="0" ci="4" mb="0" cb="0"/><line nr="2038" mi="0" ci="5" mb="0" cb="0"/><line nr="2039" mi="0" ci="3" mb="1" cb="1"/><line nr="2042" mi="3" ci="0" mb="0" cb="0"/><line nr="2043" mi="3" ci="0" mb="0" cb="0"/><line nr="2046" mi="3" ci="0" mb="0" cb="0"/><line nr="2047" mi="4" ci="0" mb="0" cb="0"/><line nr="2048" mi="6" ci="0" mb="0" cb="0"/><line nr="2052" mi="1" ci="0" mb="0" cb="0"/><line nr="2053" mi="3" ci="0" mb="0" cb="0"/><line nr="2054" mi="5" ci="0" mb="0" cb="0"/><line nr="2055" mi="5" ci="0" mb="0" cb="0"/><line nr="2058" mi="0" ci="2" mb="0" cb="0"/><line nr="2060" mi="0" ci="2" mb="0" cb="0"/><line nr="2064" mi="5" ci="0" mb="0" cb="0"/><line nr="2065" mi="5" ci="0" mb="0" cb="0"/><line nr="2067" mi="4" ci="0" mb="0" cb="0"/><line nr="2070" mi="6" ci="0" mb="0" cb="0"/><line nr="2072" mi="4" ci="0" mb="0" cb="0"/><line nr="2074" mi="5" ci="0" mb="0" cb="0"/><line nr="2077" mi="0" ci="4" mb="0" cb="0"/><line nr="2078" mi="0" ci="1" mb="0" cb="0"/><line nr="2079" mi="2" ci="0" mb="0" cb="0"/><line nr="2082" mi="8" ci="0" mb="2" cb="0"/><line nr="2083" mi="4" ci="0" mb="0" cb="0"/><line nr="2088" mi="0" ci="8" mb="0" cb="0"/><line nr="2089" mi="0" ci="5" mb="0" cb="0"/><line nr="2092" mi="0" ci="4" mb="0" cb="0"/><line nr="2094" mi="0" ci="3" mb="0" cb="0"/><line nr="2095" mi="0" ci="4" mb="0" cb="0"/><line nr="2096" mi="0" ci="3" mb="0" cb="0"/><line nr="2097" mi="0" ci="4" mb="0" cb="0"/><line nr="2098" mi="0" ci="10" mb="1" cb="1"/><line nr="2101" mi="3" ci="0" mb="0" cb="0"/><line nr="2102" mi="3" ci="0" mb="0" cb="0"/><line nr="2103" mi="3" ci="0" mb="0" cb="0"/><line nr="2104" mi="4" ci="0" mb="0" cb="0"/><line nr="2105" mi="5" ci="0" mb="0" cb="0"/><line nr="2106" mi="3" ci="0" mb="2" cb="0"/><line nr="2109" mi="3" ci="0" mb="0" cb="0"/><line nr="2110" mi="4" ci="0" mb="0" cb="0"/><line nr="2111" mi="3" ci="0" mb="0" cb="0"/><line nr="2112" mi="3" ci="0" mb="0" cb="0"/><line nr="2115" mi="3" ci="0" mb="0" cb="0"/><line nr="2116" mi="4" ci="0" mb="0" cb="0"/><line nr="2117" mi="6" ci="0" mb="0" cb="0"/><line nr="2122" mi="0" ci="3" mb="0" cb="0"/><line nr="2123" mi="0" ci="4" mb="0" cb="0"/><line nr="2126" mi="1" ci="0" mb="0" cb="0"/><line nr="2127" mi="3" ci="0" mb="0" cb="0"/><line nr="2128" mi="5" ci="0" mb="0" cb="0"/><line nr="2129" mi="5" ci="0" mb="0" cb="0"/><line nr="2132" mi="0" ci="2" mb="0" cb="0"/><line nr="2134" mi="0" ci="2" mb="0" cb="0"/><line nr="2139" mi="4" ci="0" mb="0" cb="0"/><line nr="2142" mi="6" ci="0" mb="0" cb="0"/><line nr="2145" mi="0" ci="4" mb="0" cb="0"/><line nr="2146" mi="0" ci="1" mb="0" cb="0"/><line nr="2147" mi="2" ci="0" mb="0" cb="0"/><line nr="2150" mi="8" ci="0" mb="2" cb="0"/><line nr="2151" mi="4" ci="0" mb="0" cb="0"/><line nr="2156" mi="0" ci="8" mb="0" cb="0"/><line nr="2157" mi="0" ci="5" mb="0" cb="0"/><line nr="2160" mi="0" ci="4" mb="0" cb="0"/><line nr="2162" mi="0" ci="3" mb="0" cb="0"/><line nr="2163" mi="0" ci="4" mb="0" cb="0"/><line nr="2164" mi="0" ci="5" mb="0" cb="0"/><line nr="2165" mi="0" ci="3" mb="1" cb="1"/><line nr="2168" mi="3" ci="0" mb="0" cb="0"/><line nr="2169" mi="3" ci="0" mb="0" cb="0"/><line nr="2172" mi="3" ci="0" mb="0" cb="0"/><line nr="2173" mi="4" ci="0" mb="0" cb="0"/><line nr="2174" mi="6" ci="0" mb="0" cb="0"/><line nr="2178" mi="1" ci="0" mb="0" cb="0"/><line nr="2179" mi="3" ci="0" mb="0" cb="0"/><line nr="2180" mi="5" ci="0" mb="0" cb="0"/><line nr="2181" mi="5" ci="0" mb="0" cb="0"/><line nr="2184" mi="0" ci="2" mb="0" cb="0"/><line nr="2186" mi="0" ci="2" mb="0" cb="0"/><line nr="2190" mi="5" ci="0" mb="0" cb="0"/><line nr="2192" mi="6" ci="0" mb="0" cb="0"/><line nr="2194" mi="5" ci="0" mb="0" cb="0"/><line nr="2196" mi="4" ci="0" mb="0" cb="0"/><line nr="2197" mi="1" ci="0" mb="0" cb="0"/><line nr="2198" mi="2" ci="0" mb="0" cb="0"/><line nr="2201" mi="8" ci="0" mb="2" cb="0"/><line nr="2202" mi="4" ci="0" mb="0" cb="0"/><line nr="2207" mi="8" ci="0" mb="0" cb="0"/><line nr="2208" mi="5" ci="0" mb="0" cb="0"/><line nr="2210" mi="4" ci="0" mb="0" cb="0"/><line nr="2212" mi="3" ci="0" mb="0" cb="0"/><line nr="2213" mi="4" ci="0" mb="0" cb="0"/><line nr="2214" mi="3" ci="0" mb="0" cb="0"/><line nr="2215" mi="3" ci="0" mb="0" cb="0"/><line nr="2216" mi="3" ci="0" mb="0" cb="0"/><line nr="2217" mi="4" ci="0" mb="0" cb="0"/><line nr="2220" mi="1" ci="0" mb="0" cb="0"/><line nr="2221" mi="3" ci="0" mb="0" cb="0"/><line nr="2222" mi="5" ci="0" mb="0" cb="0"/><line nr="2223" mi="5" ci="0" mb="0" cb="0"/><line nr="2226" mi="2" ci="0" mb="0" cb="0"/><line nr="2228" mi="2" ci="0" mb="0" cb="0"/><line nr="2233" mi="6" ci="0" mb="0" cb="0"/><line nr="2236" mi="6" ci="0" mb="0" cb="0"/><line nr="2239" mi="6" ci="0" mb="0" cb="0"/><line nr="2242" mi="4" ci="0" mb="0" cb="0"/><line nr="2243" mi="1" ci="0" mb="0" cb="0"/><line nr="2244" mi="2" ci="0" mb="0" cb="0"/><line nr="2247" mi="8" ci="0" mb="2" cb="0"/><line nr="2248" mi="4" ci="0" mb="0" cb="0"/><line nr="2253" mi="8" ci="0" mb="0" cb="0"/><line nr="2254" mi="5" ci="0" mb="0" cb="0"/><line nr="2256" mi="3" ci="0" mb="0" cb="0"/><line nr="2257" mi="4" ci="0" mb="0" cb="0"/><line nr="2258" mi="5" ci="0" mb="4" cb="0"/><line nr="2286" mi="4" ci="0" mb="0" cb="0"/><line nr="2288" mi="3" ci="0" mb="0" cb="0"/><line nr="2289" mi="3" ci="0" mb="0" cb="0"/><line nr="2291" mi="1" ci="0" mb="0" cb="0"/><line nr="2293" mi="4" ci="0" mb="0" cb="0"/><line nr="2295" mi="3" ci="0" mb="0" cb="0"/><line nr="2296" mi="3" ci="0" mb="0" cb="0"/><line nr="2298" mi="1" ci="0" mb="0" cb="0"/><line nr="2300" mi="4" ci="0" mb="0" cb="0"/><line nr="2302" mi="3" ci="0" mb="0" cb="0"/><line nr="2303" mi="3" ci="0" mb="0" cb="0"/><line nr="2305" mi="1" ci="0" mb="0" cb="0"/><line nr="2307" mi="5" ci="0" mb="0" cb="0"/><line nr="2310" mi="1" ci="0" mb="0" cb="0"/><line nr="2311" mi="3" ci="0" mb="0" cb="0"/><line nr="2312" mi="5" ci="0" mb="0" cb="0"/><line nr="2313" mi="5" ci="0" mb="0" cb="0"/><line nr="2316" mi="2" ci="0" mb="0" cb="0"/><line nr="2318" mi="2" ci="0" mb="0" cb="0"/><line nr="2323" mi="6" ci="0" mb="0" cb="0"/><line nr="2326" mi="6" ci="0" mb="0" cb="0"/><line nr="2329" mi="6" ci="0" mb="0" cb="0"/><line nr="2332" mi="6" ci="0" mb="0" cb="0"/><line nr="2335" mi="6" ci="0" mb="0" cb="0"/><line nr="2338" mi="0" ci="4" mb="0" cb="0"/><line nr="2339" mi="0" ci="1" mb="0" cb="0"/><line nr="2340" mi="2" ci="0" mb="0" cb="0"/><line nr="2343" mi="0" ci="8" mb="1" cb="1"/><line nr="2344" mi="4" ci="0" mb="0" cb="0"/><line nr="2349" mi="0" ci="8" mb="0" cb="0"/><line nr="2350" mi="0" ci="5" mb="0" cb="0"/><line nr="2352" mi="0" ci="3" mb="0" cb="0"/><line nr="2353" mi="0" ci="4" mb="0" cb="0"/><line nr="2354" mi="0" ci="10" mb="3" cb="3"/><line nr="2356" mi="0" ci="4" mb="0" cb="0"/><line nr="2358" mi="0" ci="3" mb="0" cb="0"/><line nr="2359" mi="0" ci="3" mb="0" cb="0"/><line nr="2361" mi="0" ci="1" mb="0" cb="0"/><line nr="2363" mi="4" ci="0" mb="0" cb="0"/><line nr="2365" mi="3" ci="0" mb="0" cb="0"/><line nr="2366" mi="3" ci="0" mb="0" cb="0"/><line nr="2368" mi="1" ci="0" mb="0" cb="0"/><line nr="2370" mi="4" ci="0" mb="0" cb="0"/><line nr="2372" mi="3" ci="0" mb="0" cb="0"/><line nr="2373" mi="3" ci="0" mb="0" cb="0"/><line nr="2375" mi="1" ci="0" mb="0" cb="0"/><line nr="2377" mi="0" ci="4" mb="0" cb="0"/><line nr="2379" mi="0" ci="3" mb="0" cb="0"/><line nr="2380" mi="0" ci="3" mb="0" cb="0"/><line nr="2382" mi="0" ci="1" mb="0" cb="0"/><line nr="2384" mi="0" ci="4" mb="0" cb="0"/><line nr="2386" mi="0" ci="3" mb="0" cb="0"/><line nr="2387" mi="0" ci="3" mb="0" cb="0"/><line nr="2392" mi="1" ci="0" mb="0" cb="0"/><line nr="2393" mi="3" ci="0" mb="0" cb="0"/><line nr="2394" mi="5" ci="0" mb="0" cb="0"/><line nr="2395" mi="5" ci="0" mb="0" cb="0"/><line nr="2398" mi="0" ci="2" mb="0" cb="0"/><line nr="2400" mi="0" ci="2" mb="0" cb="0"/><line nr="2405" mi="6" ci="0" mb="0" cb="0"/><line nr="2407" mi="5" ci="0" mb="0" cb="0"/><line nr="2409" mi="0" ci="4" mb="0" cb="0"/><line nr="2410" mi="0" ci="1" mb="0" cb="0"/><line nr="2411" mi="2" ci="0" mb="0" cb="0"/><line nr="2414" mi="0" ci="8" mb="1" cb="1"/><line nr="2415" mi="4" ci="0" mb="0" cb="0"/><line nr="2420" mi="0" ci="8" mb="0" cb="0"/><line nr="2421" mi="0" ci="5" mb="0" cb="0"/><line nr="2423" mi="0" ci="3" mb="0" cb="0"/><line nr="2424" mi="0" ci="4" mb="0" cb="0"/><line nr="2425" mi="0" ci="5" mb="2" cb="1"/><line nr="2429" mi="0" ci="4" mb="0" cb="0"/><line nr="2431" mi="0" ci="3" mb="0" cb="0"/><line nr="2432" mi="0" ci="3" mb="0" cb="0"/><line nr="2434" mi="0" ci="1" mb="0" cb="0"/><line nr="2436" mi="4" ci="0" mb="0" cb="0"/><line nr="2438" mi="3" ci="0" mb="0" cb="0"/><line nr="2439" mi="4" ci="0" mb="0" cb="0"/><line nr="2441" mi="1" ci="0" mb="0" cb="0"/><line nr="2443" mi="5" ci="0" mb="0" cb="0"/><line nr="2446" mi="1" ci="0" mb="0" cb="0"/><line nr="2447" mi="3" ci="0" mb="0" cb="0"/><line nr="2448" mi="5" ci="0" mb="0" cb="0"/><line nr="2449" mi="5" ci="0" mb="0" cb="0"/><line nr="2452" mi="0" ci="2" mb="0" cb="0"/><line nr="2454" mi="0" ci="2" mb="0" cb="0"/><line nr="2458" mi="5" ci="0" mb="0" cb="0"/><line nr="2459" mi="5" ci="0" mb="0" cb="0"/><line nr="2460" mi="5" ci="0" mb="0" cb="0"/><line nr="2462" mi="0" ci="4" mb="0" cb="0"/><line nr="2463" mi="0" ci="1" mb="0" cb="0"/><line nr="2464" mi="2" ci="0" mb="0" cb="0"/><line nr="2467" mi="0" ci="8" mb="1" cb="1"/><line nr="2468" mi="4" ci="0" mb="0" cb="0"/><line nr="2473" mi="0" ci="8" mb="0" cb="0"/><line nr="2474" mi="0" ci="5" mb="0" cb="0"/><line nr="2477" mi="0" ci="4" mb="0" cb="0"/><line nr="2479" mi="0" ci="3" mb="0" cb="0"/><line nr="2480" mi="0" ci="5" mb="0" cb="0"/><line nr="2481" mi="0" ci="16" mb="2" cb="2"/><line nr="2482" mi="6" ci="0" mb="0" cb="0"/><line nr="2485" mi="3" ci="6" mb="1" cb="1"/><line nr="2486" mi="0" ci="4" mb="0" cb="0"/><line nr="2487" mi="0" ci="3" mb="0" cb="0"/><line nr="2491" mi="1" ci="0" mb="0" cb="0"/><line nr="2492" mi="3" ci="0" mb="0" cb="0"/><line nr="2493" mi="5" ci="0" mb="0" cb="0"/><line nr="2494" mi="5" ci="0" mb="0" cb="0"/><line nr="2497" mi="0" ci="2" mb="0" cb="0"/><line nr="2499" mi="0" ci="2" mb="0" cb="0"/><line nr="2503" mi="5" ci="0" mb="0" cb="0"/><line nr="2505" mi="6" ci="0" mb="0" cb="0"/><line nr="2508" mi="4" ci="0" mb="0" cb="0"/><line nr="2509" mi="1" ci="0" mb="0" cb="0"/><line nr="2510" mi="2" ci="0" mb="0" cb="0"/><line nr="2513" mi="8" ci="0" mb="2" cb="0"/><line nr="2514" mi="4" ci="0" mb="0" cb="0"/><line nr="2519" mi="8" ci="0" mb="0" cb="0"/><line nr="2520" mi="5" ci="0" mb="0" cb="0"/><line nr="2522" mi="4" ci="0" mb="0" cb="0"/><line nr="2524" mi="3" ci="0" mb="0" cb="0"/><line nr="2525" mi="4" ci="0" mb="0" cb="0"/><line nr="2526" mi="3" ci="0" mb="0" cb="0"/><line nr="2527" mi="3" ci="0" mb="0" cb="0"/><line nr="2530" mi="1" ci="0" mb="0" cb="0"/><line nr="2531" mi="3" ci="0" mb="0" cb="0"/><line nr="2532" mi="5" ci="0" mb="0" cb="0"/><line nr="2533" mi="5" ci="0" mb="0" cb="0"/><line nr="2536" mi="2" ci="0" mb="0" cb="0"/><line nr="2538" mi="2" ci="0" mb="0" cb="0"/><line nr="2543" mi="6" ci="0" mb="0" cb="0"/><line nr="2546" mi="4" ci="0" mb="0" cb="0"/><line nr="2547" mi="1" ci="0" mb="0" cb="0"/><line nr="2548" mi="2" ci="0" mb="0" cb="0"/><line nr="2551" mi="8" ci="0" mb="2" cb="0"/><line nr="2552" mi="4" ci="0" mb="0" cb="0"/><line nr="2557" mi="8" ci="0" mb="0" cb="0"/><line nr="2558" mi="5" ci="0" mb="0" cb="0"/><line nr="2560" mi="4" ci="0" mb="0" cb="0"/><line nr="2562" mi="3" ci="0" mb="0" cb="0"/><line nr="2563" mi="3" ci="0" mb="0" cb="0"/><line nr="2566" mi="1" ci="0" mb="0" cb="0"/><line nr="2567" mi="3" ci="0" mb="0" cb="0"/><line nr="2568" mi="5" ci="0" mb="0" cb="0"/><line nr="2569" mi="5" ci="0" mb="0" cb="0"/><line nr="2572" mi="2" ci="0" mb="0" cb="0"/><line nr="2574" mi="2" ci="0" mb="0" cb="0"/><line nr="2578" mi="5" ci="0" mb="0" cb="0"/><line nr="2579" mi="5" ci="0" mb="0" cb="0"/><line nr="2581" mi="6" ci="0" mb="0" cb="0"/><line nr="2584" mi="4" ci="0" mb="0" cb="0"/><line nr="2585" mi="1" ci="0" mb="0" cb="0"/><line nr="2586" mi="2" ci="0" mb="0" cb="0"/><line nr="2589" mi="8" ci="0" mb="2" cb="0"/><line nr="2590" mi="4" ci="0" mb="0" cb="0"/><line nr="2595" mi="8" ci="0" mb="0" cb="0"/><line nr="2596" mi="5" ci="0" mb="0" cb="0"/><line nr="2598" mi="4" ci="0" mb="0" cb="0"/><line nr="2600" mi="3" ci="0" mb="0" cb="0"/><line nr="2601" mi="4" ci="0" mb="0" cb="0"/><line nr="2602" mi="3" ci="0" mb="0" cb="0"/><line nr="2603" mi="4" ci="0" mb="0" cb="0"/><line nr="2604" mi="10" ci="0" mb="2" cb="0"/><line nr="2607" mi="3" ci="0" mb="0" cb="0"/><line nr="2608" mi="3" ci="0" mb="0" cb="0"/><line nr="2612" mi="3" ci="0" mb="0" cb="0"/><line nr="2613" mi="4" ci="0" mb="0" cb="0"/><line nr="2616" mi="1" ci="0" mb="0" cb="0"/><line nr="2617" mi="3" ci="0" mb="0" cb="0"/><line nr="2618" mi="5" ci="0" mb="0" cb="0"/><line nr="2619" mi="5" ci="0" mb="0" cb="0"/><line nr="2622" mi="2" ci="0" mb="0" cb="0"/><line nr="2624" mi="2" ci="0" mb="0" cb="0"/><line nr="2628" mi="5" ci="0" mb="0" cb="0"/><line nr="2630" mi="0" ci="4" mb="0" cb="0"/><line nr="2631" mi="0" ci="1" mb="0" cb="0"/><line nr="2632" mi="2" ci="0" mb="0" cb="0"/><line nr="2635" mi="0" ci="8" mb="1" cb="1"/><line nr="2636" mi="4" ci="0" mb="0" cb="0"/><line nr="2641" mi="0" ci="8" mb="0" cb="0"/><line nr="2642" mi="0" ci="5" mb="0" cb="0"/><line nr="2644" mi="0" ci="4" mb="0" cb="0"/><line nr="2646" mi="0" ci="3" mb="0" cb="0"/><line nr="2647" mi="0" ci="4" mb="0" cb="0"/><line nr="2650" mi="1" ci="0" mb="0" cb="0"/><line nr="2651" mi="3" ci="0" mb="0" cb="0"/><line nr="2652" mi="5" ci="0" mb="0" cb="0"/><line nr="2653" mi="5" ci="0" mb="0" cb="0"/><line nr="2656" mi="0" ci="2" mb="0" cb="0"/><line nr="2658" mi="0" ci="2" mb="0" cb="0"/><line nr="2663" mi="0" ci="6" mb="0" cb="0"/><line nr="2666" mi="0" ci="6" mb="0" cb="0"/><line nr="2669" mi="0" ci="4" mb="0" cb="0"/><line nr="2670" mi="0" ci="1" mb="0" cb="0"/><line nr="2671" mi="2" ci="0" mb="0" cb="0"/><line nr="2674" mi="0" ci="8" mb="1" cb="1"/><line nr="2675" mi="4" ci="0" mb="0" cb="0"/><line nr="2680" mi="0" ci="8" mb="0" cb="0"/><line nr="2681" mi="0" ci="5" mb="0" cb="0"/><line nr="2683" mi="0" ci="4" mb="0" cb="0"/><line nr="2685" mi="0" ci="3" mb="0" cb="0"/><line nr="2686" mi="0" ci="1" mb="0" cb="0"/><line nr="2687" mi="0" ci="5" mb="1" cb="1"/><line nr="2688" mi="6" ci="0" mb="0" cb="0"/><line nr="2689" mi="0" ci="3" mb="0" cb="0"/><line nr="2690" mi="0" ci="3" mb="0" cb="0"/><line nr="2691" mi="0" ci="3" mb="0" cb="0"/><line nr="2692" mi="0" ci="3" mb="0" cb="0"/><line nr="2695" mi="1" ci="0" mb="0" cb="0"/><line nr="2696" mi="3" ci="0" mb="0" cb="0"/><line nr="2697" mi="5" ci="0" mb="0" cb="0"/><line nr="2698" mi="5" ci="0" mb="0" cb="0"/><line nr="2701" mi="0" ci="2" mb="0" cb="0"/><line nr="2703" mi="0" ci="2" mb="0" cb="0"/><line nr="2708" mi="6" ci="0" mb="0" cb="0"/><line nr="2711" mi="4" ci="0" mb="0" cb="0"/><line nr="2712" mi="1" ci="0" mb="0" cb="0"/><line nr="2713" mi="2" ci="0" mb="0" cb="0"/><line nr="2716" mi="8" ci="0" mb="2" cb="0"/><line nr="2717" mi="4" ci="0" mb="0" cb="0"/><line nr="2722" mi="8" ci="0" mb="0" cb="0"/><line nr="2723" mi="5" ci="0" mb="0" cb="0"/><line nr="2725" mi="4" ci="0" mb="0" cb="0"/><line nr="2727" mi="3" ci="0" mb="0" cb="0"/><line nr="2728" mi="3" ci="0" mb="0" cb="0"/><line nr="2731" mi="1" ci="0" mb="0" cb="0"/><line nr="2732" mi="3" ci="0" mb="0" cb="0"/><line nr="2733" mi="5" ci="0" mb="0" cb="0"/><line nr="2734" mi="5" ci="0" mb="0" cb="0"/><line nr="2737" mi="2" ci="0" mb="0" cb="0"/><line nr="2739" mi="2" ci="0" mb="0" cb="0"/><line nr="2743" mi="5" ci="0" mb="0" cb="0"/><line nr="2744" mi="5" ci="0" mb="0" cb="0"/><line nr="2745" mi="5" ci="0" mb="0" cb="0"/><line nr="2746" mi="5" ci="0" mb="0" cb="0"/><line nr="2747" mi="5" ci="0" mb="0" cb="0"/><line nr="2748" mi="5" ci="0" mb="0" cb="0"/><line nr="2749" mi="5" ci="0" mb="0" cb="0"/><line nr="2750" mi="5" ci="0" mb="0" cb="0"/><line nr="2751" mi="5" ci="0" mb="0" cb="0"/><line nr="2752" mi="5" ci="0" mb="0" cb="0"/><line nr="2753" mi="5" ci="0" mb="0" cb="0"/><line nr="2754" mi="5" ci="0" mb="0" cb="0"/><line nr="2755" mi="5" ci="0" mb="0" cb="0"/><line nr="2756" mi="5" ci="0" mb="0" cb="0"/><line nr="2757" mi="5" ci="0" mb="0" cb="0"/><line nr="2758" mi="5" ci="0" mb="0" cb="0"/><line nr="2759" mi="5" ci="0" mb="0" cb="0"/><line nr="2760" mi="5" ci="0" mb="0" cb="0"/><line nr="2761" mi="5" ci="0" mb="0" cb="0"/><line nr="2762" mi="5" ci="0" mb="0" cb="0"/><line nr="2763" mi="5" ci="0" mb="0" cb="0"/><line nr="2764" mi="5" ci="0" mb="0" cb="0"/><line nr="2765" mi="5" ci="0" mb="0" cb="0"/><line nr="2766" mi="5" ci="0" mb="0" cb="0"/><line nr="2767" mi="5" ci="0" mb="0" cb="0"/><line nr="2768" mi="5" ci="0" mb="0" cb="0"/><line nr="2769" mi="5" ci="0" mb="0" cb="0"/><line nr="2771" mi="0" ci="4" mb="0" cb="0"/><line nr="2772" mi="0" ci="1" mb="0" cb="0"/><line nr="2773" mi="2" ci="0" mb="0" cb="0"/><line nr="2776" mi="0" ci="8" mb="1" cb="1"/><line nr="2777" mi="4" ci="0" mb="0" cb="0"/><line nr="2782" mi="0" ci="8" mb="0" cb="0"/><line nr="2783" mi="0" ci="5" mb="0" cb="0"/><line nr="2786" mi="0" ci="4" mb="0" cb="0"/><line nr="2788" mi="0" ci="3" mb="0" cb="0"/><line nr="2789" mi="0" ci="5" mb="0" cb="0"/><line nr="2790" mi="0" ci="16" mb="2" cb="2"/><line nr="2791" mi="6" ci="0" mb="0" cb="0"/><line nr="2794" mi="3" ci="6" mb="1" cb="1"/><line nr="2795" mi="0" ci="4" mb="0" cb="0"/><line nr="2796" mi="0" ci="3" mb="0" cb="0"/><line nr="2800" mi="1" ci="0" mb="0" cb="0"/><line nr="2801" mi="3" ci="0" mb="0" cb="0"/><line nr="2802" mi="5" ci="0" mb="0" cb="0"/><line nr="2803" mi="5" ci="0" mb="0" cb="0"/><line nr="2806" mi="0" ci="2" mb="0" cb="0"/><line nr="2808" mi="0" ci="2" mb="0" cb="0"/><line nr="2812" mi="0" ci="2" mb="1" cb="1"/><line nr="2814" mi="0" ci="6" mb="0" cb="0"/><line nr="2816" mi="2" ci="0" mb="0" cb="0"/><line nr="2819" mi="0" ci="2" mb="1" cb="1"/><line nr="2821" mi="0" ci="2" mb="0" cb="0"/><line nr="2822" mi="1" ci="7" mb="1" cb="1"/><line nr="2825" mi="2" ci="0" mb="0" cb="0"/><line nr="3044" mi="0" ci="4" mb="0" cb="0"/><line nr="3045" mi="0" ci="3" mb="0" cb="0"/><line nr="3047" mi="0" ci="4" mb="0" cb="0"/><line nr="3048" mi="0" ci="8" mb="0" cb="2"/><line nr="3049" mi="0" ci="10" mb="0" cb="0"/><line nr="3051" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3098" covered="3228"/><counter type="BRANCH" missed="156" covered="115"/><counter type="LINE" missed="770" covered="618"/><counter type="COMPLEXITY" missed="392" covered="139"/><counter type="METHOD" missed="268" covered="117"/><counter type="CLASS" missed="10" covered="37"/></sourcefile><counter type="INSTRUCTION" missed="3298" covered="4224"/><counter type="BRANCH" missed="156" covered="123"/><counter type="LINE" missed="824" covered="646"/><counter type="COMPLEXITY" missed="446" covered="149"/><counter type="METHOD" missed="322" covered="123"/><counter type="CLASS" missed="10" covered="39"/></package><package name="gov/nist/secauto/metaschema/core/model"><class name="gov/nist/secauto/metaschema/core/model/XmlGroupAsBehavior" sourcefilename="XmlGroupAsBehavior.java"><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/AbstractInstance" sourcefilename="AbstractInstance.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IContainer;)V" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParentContainer" desc="()Lgov/nist/secauto/metaschema/core/model/IContainer;" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagContainer;" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/MetaschemaVersion" sourcefilename="MetaschemaVersion.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBuildTimestamp" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGitOriginUrl" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGitCommit" desc="()Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGitBranch" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGitClosestTag" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/AbstractFlagInstance" sourcefilename="AbstractFlagInstance.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagContainer;)V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagContainer;" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IFlagContainer" sourcefilename="IFlagContainer.java"><method name="isSimple" desc="()Z" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasJsonKey" desc="()Z" line="96"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/JsonGroupAsBehavior" sourcefilename="JsonGroupAsBehavior.java"><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IChoiceInstance" sourcefilename="IChoiceInstance.java"><method name="getModelType" desc="()Lgov/nist/secauto/metaschema/core/model/ModelType;" line="41"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOwningDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/AbstractModelInstance" sourcefilename="AbstractModelInstance.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;" line="41"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IFeatureModelContainer" sourcefilename="IFeatureModelContainer.java"><method name="getModelInstanceByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/INamedModelInstance;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamedModelInstances" desc="()Ljava/util/Collection;" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldInstanceByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IFieldInstance;" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldInstances" desc="()Ljava/util/Collection;" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssemblyInstanceByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IAssemblyInstance;" line="73"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssemblyInstances" desc="()Ljava/util/Collection;" line="79"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChoiceInstances" desc="()Ljava/util/List;" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelInstances" desc="()Ljava/util/Collection;" line="89"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IModelContainer" sourcefilename="IModelContainer.java"/><class name="gov/nist/secauto/metaschema/core/model/AbstractChoiceInstance" sourcefilename="AbstractChoiceInstance.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinOccurs" desc="()I" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxOccurs" desc="()I" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupAsName" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupAsXmlNamespace" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonGroupAsBehavior" desc="()Lgov/nist/secauto/metaschema/core/model/JsonGroupAsBehavior;" line="67"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlGroupAsBehavior" desc="()Lgov/nist/secauto/metaschema/core/model/XmlGroupAsBehavior;" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IFieldDefinition" sourcefilename="IFieldDefinition.java"><method name="getOwningDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonValueKey" desc="()Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasJsonValueKeyFlagInstance" desc="()Z" line="63"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/ModelWalker" sourcefilename="ModelWalker.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;)V" line="55"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;Ljava/lang/Object;)V" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;)V" line="78"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Ljava/lang/Object;)V" line="91"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;)V" line="104"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Ljava/lang/Object;)V" line="117"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagInstance;Ljava/lang/Object;)V" line="133"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldInstance;Ljava/lang/Object;)V" line="148"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyInstance;Ljava/lang/Object;)V" line="163"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walk" desc="(Lgov/nist/secauto/metaschema/core/model/IChoiceInstance;Ljava/lang/Object;)V" line="178"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walkDefinition" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;)V" line="190"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walkDefinition" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;Ljava/lang/Object;)V" line="202"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walkFlagInstances" desc="(Ljava/util/Collection;Ljava/lang/Object;)V" line="220"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walkModelInstances" desc="(Ljava/util/Collection;Ljava/lang/Object;)V" line="235"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="walkModelInstance" desc="(Lgov/nist/secauto/metaschema/core/model/IModelInstance;Ljava/lang/Object;)V" line="250"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Ljava/lang/Object;)Z" line="282"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Ljava/lang/Object;)Z" line="297"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagInstance;Ljava/lang/Object;)Z" line="312"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldInstance;Ljava/lang/Object;)Z" line="327"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyInstance;Ljava/lang/Object;)Z" line="342"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IChoiceInstance;Ljava/lang/Object;)Z" line="357"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="216" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="60" covered="0"/><counter type="COMPLEXITY" missed="39" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IContainer" sourcefilename="IContainer.java"/><class name="gov/nist/secauto/metaschema/core/model/IFlagContainerSupport" sourcefilename="IFlagContainerSupport.java"><method name="empty" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagContainerSupport;" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IFeatureFlagContainer" sourcefilename="IFeatureFlagContainer.java"><method name="getFlagInstanceByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IFlagInstance;" line="46"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlagInstances" desc="()Ljava/util/Collection;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonKeyFlagInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagInstance;" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/EmptyFlagContainer" sourcefilename="EmptyFlagContainer.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlagInstanceMap" desc="()Ljava/util/Map;" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonKeyFlagInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagInstance;" line="48"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IModelInstance" sourcefilename="IModelInstance.java"><method name="getXmlGroupAsQName" desc="()Ljavax/xml/namespace/QName;" line="62"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/MetaschemaModelConstants" sourcefilename="MetaschemaModelConstants.java"><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/UsedDefinitionModelWalker" sourcefilename="UsedDefinitionModelWalker.java"><method name="collectUsedDefinitions" desc="(Ljava/util/Collection;)Ljava/util/Collection;" line="62"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectUsedDefinitionsFromModule" desc="(Ljava/util/Collection;)Ljava/util/Collection;" line="82"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectUsedDefinitionsFromModule" desc="(Lgov/nist/secauto/metaschema/core/model/IModule;)Ljava/util/Collection;" line="111"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="118"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;)Ljava/lang/Boolean;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/DefinitionCollectingModelWalker" sourcefilename="DefinitionCollectingModelWalker.java"><method name="getDefaultData" desc="()Ljava/lang/Void;" line="56"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;)V" line="51"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFilter" desc="()Ljava/util/function/Function;" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefinitions" desc="()Ljava/util/Collection;" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;Ljava/lang/Void;)V" line="92"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;Ljava/lang/Void;)Z" line="102"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Ljava/lang/Void;)Z" line="120"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IAssemblyDefinition" sourcefilename="IAssemblyDefinition.java"><method name="getRootXmlQName" desc="()Ljavax/xml/namespace/QName;" line="59"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRootJsonName" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOwningDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSimple" desc="()Z" line="87"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IFlagDefinition" sourcefilename="IFlagDefinition.java"/><class name="gov/nist/secauto/metaschema/core/model/IInstance" sourcefilename="IInstance.java"><method name="getContainingModule" desc="()Lgov/nist/secauto/metaschema/core/model/IModule;" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCoordinates" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IFlag" sourcefilename="IFlag.java"><method name="getModelType" desc="()Lgov/nist/secauto/metaschema/core/model/ModelType;" line="41"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/IUriResolver" sourcefilename="IUriResolver.java"/><class name="gov/nist/secauto/metaschema/core/model/IModule" sourcefilename="IModule.java"><method name="allNonLocalDefinitions" desc="()Ljava/util/function/Predicate;" line="81"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allRootAssemblyDefinitions" desc="()Ljava/util/function/Predicate;" line="95"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQName" desc="()Ljavax/xml/namespace/QName;" line="162"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAssemblyAndFieldDefinitions" desc="()Ljava/util/List;" line="232"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getScopedAssemblyDefinitionByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;" line="281"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScopedFieldDefinitionByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;" line="301"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getScopedFlagDefinitionByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;" line="321"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExportedRootAssemblyDefinitions" desc="()Ljava/util/Collection;" line="337"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootAssemblyDefinitions" desc="()Ljava/util/Collection;" line="350"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$allRootAssemblyDefinitions$1" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;)Z" line="96"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$allNonLocalDefinitions$0" desc="(Lgov/nist/secauto/metaschema/core/model/IDefinition;)Z" line="82"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="75"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="11" covered="16"/><counter type="COMPLEXITY" missed="8" covered="11"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/AbstractAssemblyInstance" sourcefilename="AbstractAssemblyInstance.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupAsXmlNamespace" desc="()Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/INamedInstance" sourcefilename="INamedInstance.java"><method name="getXmlQName" desc="()Ljavax/xml/namespace/QName;" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlNamespace" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toCoordinates" desc="()Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEffectiveName" desc="()Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEffectiveFormalName" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEffectiveDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="127"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IAssemblyInstance" sourcefilename="IAssemblyInstance.java"/><class name="gov/nist/secauto/metaschema/core/model/IFlagInstance" sourcefilename="IFlagInstance.java"><method name="getXmlNamespace" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlQName" desc="()Ljavax/xml/namespace/QName;" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJsonKey" desc="()Z" line="72"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJsonValueKey" desc="()Z" line="85"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/AbstractModule" sourcefilename="AbstractModule.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImportedModules" desc="()Ljava/util/List;" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImportedModulesByShortName" desc="()Ljava/util/Map;" line="81"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImportedModuleByShortName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IModule;" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExportedFlagDefinitions" desc="()Ljava/util/Collection;" line="92"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExportedFlagDefinitionByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;" line="97"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExportedFlagDefinitionMap" desc="()Ljava/util/Map;" line="101"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExportedFieldDefinitions" desc="()Ljava/util/Collection;" line="108"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExportedFieldDefinitionByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;" line="113"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExportedFieldDefinitionMap" desc="()Ljava/util/Map;" line="117"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExportedAssemblyDefinitions" desc="()Ljava/util/Collection;" line="124"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExportedAssemblyDefinitionByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;" line="129"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExportedAssemblyDefinitionMap" desc="()Ljava/util/Map;" line="133"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initExports" desc="()V" line="142"><counter type="INSTRUCTION" missed="6" covered="128"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="39"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleShadowedDefinitions" desc="(Ljava/lang/String;Lgov/nist/secauto/metaschema/core/model/IDefinition;Lgov/nist/secauto/metaschema/core/model/IDefinition;)Lgov/nist/secauto/metaschema/core/model/IDefinition;" line="206"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="220"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="5" covered="65"/><counter type="COMPLEXITY" missed="6" covered="18"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/INamedModelElement" sourcefilename="INamedModelElement.java"><method name="getEffectiveFormalName" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEffectiveDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="80"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasProperty" desc="(Ljavax/xml/namespace/QName;)Z" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyValues" desc="(Ljavax/xml/namespace/QName;)Ljava/util/Set;" line="111"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasPropertyValue" desc="(Ljavax/xml/namespace/QName;Ljava/lang/String;)Z" line="130"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonName" desc="()Ljava/lang/String;" line="155"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEffectiveName" desc="()Ljava/lang/String;" line="172"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="10"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="10" covered="2"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/ModelType" sourcefilename="ModelType.java"><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/IFieldInstance" sourcefilename="IFieldInstance.java"><method name="getXmlNamespace" desc="()Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlQName" desc="()Ljavax/xml/namespace/QName;" line="39"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupAsXmlNamespace" desc="()Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IResourceLoader" sourcefilename="IResourceLoader.java"><method name="getUriResolver" desc="()Lgov/nist/secauto/metaschema/core/model/IUriResolver;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IFeatureInlinedDefinition" sourcefilename="IFeatureInlinedDefinition.java"><method name="isInline" desc="()Z" line="41"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IModelElement" sourcefilename="IModelElement.java"/><class name="gov/nist/secauto/metaschema/core/model/IModelContainerSupport" sourcefilename="IModelContainerSupport.java"/><class name="gov/nist/secauto/metaschema/core/model/JsonValueKeyTypeEnum" sourcefilename="JsonValueKeyTypeEnum.java"><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/ModuleScopeEnum" sourcefilename="ModuleScopeEnum.java"><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/INamedModelInstance" sourcefilename="INamedModelInstance.java"><method name="getJsonName" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IAssembly" sourcefilename="IAssembly.java"><method name="getModelType" desc="()Lgov/nist/secauto/metaschema/core/model/ModelType;" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/IValuedDefinition" sourcefilename="IValuedDefinition.java"/><class name="gov/nist/secauto/metaschema/core/model/AbstractFieldInstance" sourcefilename="AbstractFieldInstance.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IDefinition" sourcefilename="IDefinition.java"><method name="toCoordinates" desc="()Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="3"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/MetaschemaException" sourcefilename="MetaschemaException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V" line="85"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/IField" sourcefilename="IField.java"><method name="getModelType" desc="()Lgov/nist/secauto/metaschema/core/model/ModelType;" line="41"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="EmptyFlagContainer.java"><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IContainer.java"/><sourcefile name="IAssemblyDefinition.java"><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="11" ci="0" mb="4" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ModelType.java"><line nr="32" mi="0" ci="20" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IModelContainer.java"/><sourcefile name="IFlagContainer.java"><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IFlagDefinition.java"/><sourcefile name="AbstractModule.java"><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="9" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="11" mb="0" cb="2"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="1" cb="1"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="1" cb="1"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="1" cb="1"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="1" cb="3"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="220"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="5" covered="65"/><counter type="COMPLEXITY" missed="6" covered="18"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractChoiceInstance.java"><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="UsedDefinitionModelWalker.java"><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="10" ci="0" mb="2" cb="0"/><line nr="64" mi="7" ci="0" mb="2" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="10" ci="0" mb="2" cb="0"/><line nr="85" mi="11" ci="0" mb="2" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="11" ci="0" mb="2" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IFeatureInlinedDefinition.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractFieldInstance.java"><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IInstance.java"><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ModelWalker.java"><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="2" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="2" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="2" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="2" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="2" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="2" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="2" cb="0"/><line nr="203" mi="6" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="2" cb="0"/><line nr="205" mi="6" ci="0" mb="0" cb="0"/><line nr="206" mi="3" ci="0" mb="2" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="10" ci="0" mb="2" cb="0"/><line nr="221" mi="7" ci="0" mb="2" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="10" ci="0" mb="2" cb="0"/><line nr="236" mi="7" ci="0" mb="2" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="3" ci="0" mb="2" cb="0"/><line nr="251" mi="6" ci="0" mb="0" cb="0"/><line nr="252" mi="3" ci="0" mb="2" cb="0"/><line nr="253" mi="6" ci="0" mb="0" cb="0"/><line nr="254" mi="3" ci="0" mb="2" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="2" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="2" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="357" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="216" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="60" covered="0"/><counter type="COMPLEXITY" missed="39" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IField.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IValuedDefinition.java"/><sourcefile name="IModule.java"><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="0" ci="10" mb="1" cb="3"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="13" mb="1" cb="3"/><line nr="162" mi="0" ci="9" mb="0" cb="0"/><line nr="232" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="6" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="1" cb="1"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="4" ci="0" mb="0" cb="0"/><line nr="302" mi="2" ci="0" mb="2" cb="0"/><line nr="304" mi="4" ci="0" mb="0" cb="0"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="2" mb="1" cb="1"/><line nr="324" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="6" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="6" ci="0" mb="0" cb="0"/><line nr="351" mi="2" ci="0" mb="0" cb="0"/><line nr="352" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="75"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="11" covered="16"/><counter type="COMPLEXITY" missed="8" covered="11"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MetaschemaModelConstants.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="INamedModelInstance.java"><line nr="43" mi="8" ci="0" mb="4" cb="0"/><line nr="44" mi="11" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JsonValueKeyTypeEnum.java"><line nr="29" mi="16" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IFlag.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModuleScopeEnum.java"><line nr="29" mi="0" ci="12" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractInstance.java"><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IFlagInstance.java"><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="2" cb="0"/><line nr="87" mi="6" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IFeatureFlagContainer.java"><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IFieldDefinition.java"><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="2" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MetaschemaException.java"><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MetaschemaVersion.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IFeatureModelContainer.java"><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XmlGroupAsBehavior.java"><line nr="29" mi="12" ci="0" mb="0" cb="0"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractModelInstance.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IModelContainerSupport.java"/><sourcefile name="IAssembly.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IAssemblyInstance.java"/><sourcefile name="DefinitionCollectingModelWalker.java"><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="2" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="7" ci="0" mb="2" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="2" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="2" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="2" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IModelInstance.java"><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="2" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="2" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IFieldInstance.java"><line nr="34" mi="8" ci="0" mb="2" cb="0"/><line nr="39" mi="8" ci="0" mb="2" cb="0"/><line nr="44" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JsonGroupAsBehavior.java"><line nr="29" mi="20" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IResourceLoader.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IDefinition.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="3"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="INamedModelElement.java"><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="10" ci="0" mb="4" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="42" covered="10"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="10" covered="2"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFlagContainerSupport.java"><line nr="38" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractAssemblyInstance.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="INamedInstance.java"><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="7" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="9" ci="0" mb="2" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="2" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="8" ci="0" mb="2" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IUriResolver.java"/><sourcefile name="IModelElement.java"/><sourcefile name="IChoiceInstance.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractFlagInstance.java"><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1144" covered="382"/><counter type="BRANCH" missed="114" covered="24"/><counter type="LINE" missed="280" covered="95"/><counter type="COMPLEXITY" missed="189" covered="37"/><counter type="METHOD" missed="128" covered="29"/><counter type="CLASS" missed="31" covered="9"/></package><package name="gov/nist/secauto/metaschema/core/datatype/markup"><class name="gov/nist/secauto/metaschema/core/datatype/markup/AbstractMarkupString" sourcefilename="AbstractMarkupString.java"><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/util/ast/Document;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDocument" desc="()Lcom/vladsch/flexmark/util/ast/Document;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseHtml" desc="(Ljava/lang/String;Lcom/vladsch/flexmark/html2md/converter/FlexmarkHtmlConverter;Lcom/vladsch/flexmark/parser/Parser;)Lcom/vladsch/flexmark/util/ast/Document;" line="141"><counter type="INSTRUCTION" missed="8" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseMarkdown" desc="(Ljava/lang/String;Lcom/vladsch/flexmark/parser/Parser;)Lcom/vladsch/flexmark/util/ast/Document;" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toXHtml" desc="(Ljava/lang/String;)Ljava/lang/String;" line="185"><counter type="INSTRUCTION" missed="4" covered="50"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toHtml" desc="()Ljava/lang/String;" line="219"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMarkdown" desc="()Ljava/lang/String;" line="226"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMarkdown" desc="(Lcom/vladsch/flexmark/formatter/Formatter;)Ljava/lang/String;" line="231"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeXHtml" desc="(Ljava/lang/String;Lorg/codehaus/stax2/XMLStreamWriter2;)V" line="236"><counter type="INSTRUCTION" missed="3" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeXHtml" desc="(Ljava/lang/String;Lorg/codehaus/stax2/evt/XMLEventFactory2;Ljavax/xml/stream/XMLEventWriter;)V" line="253"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNodesAsStream" desc="()Ljava/util/stream/Stream;" line="273"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInserts" desc="()Ljava/util/List;" line="280"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInserts" desc="(Ljava/util/function/Predicate;)Ljava/util/List;" line="294"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="301"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getInserts$0" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorNode;)Z" line="280"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="82" covered="147"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="18" covered="42"/><counter type="COMPLEXITY" missed="11" covered="11"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/MarkupLineAdapter" sourcefilename="MarkupLineAdapter.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Lorg/codehaus/stax2/XMLEventReader2;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="71"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Lcom/fasterxml/jackson/core/JsonParser;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="79"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultJsonValueKey" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="92"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IMarkupItem;" line="97"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="35" covered="12"/><counter type="LINE" missed="11" covered="5"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/AbstractMarkupAdapter" sourcefilename="AbstractMarkupAdapter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="63"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isXmlMixed" desc="()Z" line="68"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeXmlValue" desc="(Ljava/lang/Object;Ljavax/xml/stream/events/StartElement;Lorg/codehaus/stax2/evt/XMLEventFactory2;Ljavax/xml/stream/XMLEventWriter;)V" line="80"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeXmlValue" desc="(Ljava/lang/Object;Ljavax/xml/namespace/QName;Lorg/codehaus/stax2/XMLStreamWriter2;)V" line="91"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeJsonValue" desc="(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V" line="103"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="4"/><counter type="LINE" missed="16" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/MarkupDataTypeProvider" sourcefilename="MarkupDataTypeProvider.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/MarkupLine" sourcefilename="MarkupLine.java"><method name="newParserOptions" desc="()Lcom/vladsch/flexmark/util/data/DataSet;" line="60"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromHtml" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="77"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromMarkdown" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="83"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlexmarkFactory" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/FlexmarkFactory;" line="88"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/util/ast/Document;)V" line="92"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="103"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBlock" desc="()Z" line="108"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="87"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/AbstractMarkupString$1" sourcefilename="AbstractMarkupString.java"><method name="&lt;init&gt;" desc="()V" line="145"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="head" desc="(Lorg/jsoup/nodes/Node;I)V" line="149"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTag" desc="(Lorg/jsoup/nodes/Node;Ljava/lang/String;)Z" line="161"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline" sourcefilename="MarkupMultiline.java"><method name="fromHtml" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="50"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromMarkdown" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/util/ast/Document;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlexmarkFactory" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/FlexmarkFactory;" line="82"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="89"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBlock" desc="()Z" line="94"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="29"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/MarkupMultilineAdapter" sourcefilename="MarkupMultilineAdapter.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="57"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUnrappedValueAllowedInXml" desc="()Z" line="62"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Lorg/codehaus/stax2/XMLEventReader2;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="77"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Lcom/fasterxml/jackson/core/JsonParser;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="85"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canHandleQName" desc="(Ljavax/xml/namespace/QName;)Z" line="93"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultJsonValueKey" desc="()Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="103"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IMarkupItem;" line="108"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="15"/><counter type="LINE" missed="12" covered="6"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="7" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/IMarkupString" sourcefilename="IMarkupString.java"><method name="getInserts" desc="()Ljava/util/List;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getInserts$0" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorNode;)Z" line="96"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="MarkupLine.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="2" cb="2"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="87"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IMarkupString.java"><line nr="96" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MarkupDataTypeProvider.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MarkupLineAdapter.java"><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="12"/><counter type="LINE" missed="11" covered="5"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractMarkupString.java"><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="2"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="11" mb="0" cb="4"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="11" mb="1" cb="3"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="4" ci="3" mb="1" cb="1"/><line nr="168" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="4" ci="4" mb="1" cb="1"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="7" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="7" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="1" cb="1"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="3" ci="0" mb="2" cb="0"/><line nr="256" mi="4" ci="0" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="262" mi="6" ci="0" mb="0" cb="0"/><line nr="263" mi="5" ci="0" mb="0" cb="0"/><line nr="264" mi="1" ci="0" mb="0" cb="0"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="273" mi="6" ci="0" mb="0" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="280" mi="6" ci="0" mb="0" cb="0"/><line nr="294" mi="5" ci="0" mb="0" cb="0"/><line nr="295" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="301" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="82" covered="189"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="18" covered="49"/><counter type="COMPLEXITY" missed="12" covered="18"/><counter type="METHOD" missed="6" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractMarkupAdapter.java"><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="4"/><counter type="LINE" missed="16" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MarkupMultiline.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="29"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MarkupMultilineAdapter.java"><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="15"/><counter type="LINE" missed="12" covered="6"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="7" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="220" covered="354"/><counter type="BRANCH" missed="9" covered="17"/><counter type="LINE" missed="61" covered="99"/><counter type="COMPLEXITY" missed="36" covered="41"/><counter type="METHOD" missed="28" covered="36"/><counter type="CLASS" missed="1" covered="8"/></package><package name="gov/nist/secauto/metaschema/core/datatype/adapter"><class name="gov/nist/secauto/metaschema/core/datatype/adapter/DecimalAdapter" sourcefilename="DecimalAdapter.java"><method name="&lt;init&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="64"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/math/BigDecimal;" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeJsonValue" desc="(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V" line="80"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/math/BigDecimal;" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="94"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDecimalItem;" line="99"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castInternal" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDecimalItem;" line="106"><counter type="INSTRUCTION" missed="25" covered="15"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="55"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="13" covered="16"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/DateAdapter" sourcefilename="DateAdapter.java"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="72"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/datatype/object/Date;" line="82"><counter type="INSTRUCTION" missed="19" covered="62"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="123"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="128"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castInternal" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="135"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="95" covered="77"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="25" covered="16"/><counter type="COMPLEXITY" missed="10" covered="5"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/DateFormats" sourcefilename="DateFormats.java"><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/UriAdapter" sourcefilename="UriAdapter.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/net/URI;" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/net/URI;" line="69"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyUriItem;" line="79"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="12"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/NonNegativeIntegerAdapter" sourcefilename="NonNegativeIntegerAdapter.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INonNegativeIntegerItem;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/Base64Adapter" sourcefilename="Base64Adapter.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="61"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/nio/ByteBuffer;" line="67"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/nio/ByteBuffer;" line="74"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="92"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;" line="97"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="40"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="13"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/DateWithTZAdapter" sourcefilename="DateWithTZAdapter.java"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="68"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/time/ZonedDateTime;" line="74"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/time/ZonedDateTime;" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="100"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;" line="105"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="15"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="6"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/AbstractIntegerAdapter" sourcefilename="AbstractIntegerAdapter.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="58"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/math/BigInteger;" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeJsonValue" desc="(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V" line="69"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/math/BigInteger;" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="4"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/DateTimeWithTZAdapter" sourcefilename="DateTimeWithTZAdapter.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="61"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/time/ZonedDateTime;" line="68"><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/time/ZonedDateTime;" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="88"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;" line="93"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="18"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/EmailAddressAdapter" sourcefilename="EmailAddressAdapter.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="56"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IEmailAddressItem;" line="61"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/IntegerAdapter" sourcefilename="IntegerAdapter.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="58"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="63"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castInternal" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="70"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="11"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="5"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/DayTimeAdapter" sourcefilename="DayTimeAdapter.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="58"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/time/Duration;" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/time/Duration;" line="71"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDayTimeDurationItem;" line="84"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="12"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/IPv4AddressAdapter" sourcefilename="IPv4AddressAdapter.java"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="68"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Linet/ipaddr/ipv4/IPv4Address;" line="75"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/Object;)Linet/ipaddr/ipv4/IPv4Address;" line="84"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="89"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIPv4AddressItem;" line="94"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="33"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/UriReferenceAdapter" sourcefilename="UriReferenceAdapter.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/net/URI;" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/net/URI;" line="69"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="74"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IUriReferenceItem;" line="79"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="12"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/HostnameAdapter" sourcefilename="HostnameAdapter.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IHostnameItem;" line="58"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/DateTimeAdapter" sourcefilename="DateTimeAdapter.java"><method name="&lt;init&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="64"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/datatype/object/DateTime;" line="76"><counter type="INSTRUCTION" missed="13" covered="23"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="107"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;" line="112"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castInternal" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;" line="120"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="87" covered="36"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="23" covered="9"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/NcNameAdapter" sourcefilename="NcNameAdapter.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INcNameItem;" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="10"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/YearMonthAdapter" sourcefilename="YearMonthAdapter.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="58"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/time/Period;" line="64"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/time/Period;" line="71"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IYearMonthDurationItem;" line="84"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="12"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/IPv6AddressAdapter" sourcefilename="IPv6AddressAdapter.java"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="68"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Linet/ipaddr/ipv6/IPv6Address;" line="75"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/lang/Object;)Linet/ipaddr/ipv6/IPv6Address;" line="84"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="89"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIPv6AddressItem;" line="94"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="47"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/BooleanAdapter" sourcefilename="BooleanAdapter.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="58"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="63"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Boolean;" line="74"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeJsonValue" desc="(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V" line="84"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="93"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="98"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="103"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castInternal" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="110"><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castToBoolean" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="131"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castToBoolean" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="148"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="74"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="8" covered="24"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/StringAdapter" sourcefilename="StringAdapter.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;" line="58"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="13"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/AbstractStringAdapter" sourcefilename="AbstractStringAdapter.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/TokenAdapter" sourcefilename="TokenAdapter.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/ITokenItem;" line="58"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/UuidAdapter" sourcefilename="UuidAdapter.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonRawType" desc="()Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes;" line="60"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/util/UUID;" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="(Ljava/lang/Object;)Ljava/util/UUID;" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IUuidItem;" line="82"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="15"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/PositiveIntegerAdapter" sourcefilename="PositiveIntegerAdapter.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNames" desc="()Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItemClass" desc="()Ljava/lang/Class;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newItem" desc="(Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IPositiveIntegerItem;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/adapter/MetaschemaDataTypeProvider" sourcefilename="MetaschemaDataTypeProvider.java"><method name="&lt;init&gt;" desc="()V" line="97"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="157"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PositiveIntegerAdapter.java"><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TokenAdapter.java"><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateFormats.java"><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NcNameAdapter.java"><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="10"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractIntegerAdapter.java"><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="4"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringAdapter.java"><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="13"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Base64Adapter.java"><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="11" ci="0" mb="2" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="40"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="13"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DayTimeAdapter.java"><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="12"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractStringAdapter.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateWithTZAdapter.java"><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="17" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="15"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="6"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="YearMonthAdapter.java"><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="12"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IPv4AddressAdapter.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="33"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateTimeWithTZAdapter.java"><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="18"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IPv6AddressAdapter.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="47"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmailAddressAdapter.java"><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateAdapter.java"><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="16" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="11" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="2" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="7" ci="0" mb="4" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="77"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="25" covered="16"/><counter type="COMPLEXITY" missed="10" covered="5"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UuidAdapter.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="15"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DateTimeAdapter.java"><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="4" cb="0"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="87" covered="36"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="23" covered="9"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BooleanAdapter.java"><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="2"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="74"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="8" covered="24"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UriAdapter.java"><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="12"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HostnameAdapter.java"><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UriReferenceAdapter.java"><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="12"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DecimalAdapter.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="0" ci="3" mb="1" cb="1"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="2" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="8" ci="0" mb="2" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="55"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="13" covered="16"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntegerAdapter.java"><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="2" cb="0"/><line nr="71" mi="3" ci="0" mb="2" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="2" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="11"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="5"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NonNegativeIntegerAdapter.java"><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MetaschemaDataTypeProvider.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="157"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="660" covered="764"/><counter type="BRANCH" missed="36" covered="8"/><counter type="LINE" missed="188" covered="250"/><counter type="COMPLEXITY" missed="106" covered="93"/><counter type="METHOD" missed="86" covered="91"/><counter type="CLASS" missed="0" covered="26"/></package><package name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark"><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler" sourcefilename="IMarkupWriter.java"/><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/SuppressPTagExtension$PTagNodeRenderer$Factory" sourcefilename="SuppressPTagExtension.java"><method name="&lt;init&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)Lcom/vladsch/flexmark/html/renderer/NodeRenderer;" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorFormatter" sourcefilename="InsertAnchorExtension.java"><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)V" line="228"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeFormattingHandlers" desc="()Ljava/util/Set;" line="234"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorNode;Lcom/vladsch/flexmark/formatter/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/MarkdownWriter;)V" line="241"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeClasses" desc="()Ljava/util/Set;" line="252"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="52"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/SuppressPTagExtension" sourcefilename="SuppressPTagExtension.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/SuppressPTagExtension;" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rendererOptions" desc="(Lcom/vladsch/flexmark/util/data/MutableDataHolder;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extend" desc="(Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;Ljava/lang/String;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlQuoteTagExtension$DoubleQuoteNode" sourcefilename="HtmlQuoteTagExtension.java"><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/ext/typographic/TypographicQuotes;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlCodeRenderExtension$CodeNodeHtmlRenderer$Factory" sourcefilename="HtmlCodeRenderExtension.java"><method name="&lt;init&gt;" desc="()V" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)Lcom/vladsch/flexmark/html/renderer/NodeRenderer;" line="134"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorNodeRenderer" sourcefilename="InsertAnchorExtension.java"><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeRenderingHandlers" desc="()Ljava/util/Set;" line="131"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorNode;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/AbstractMarkupWriter" sourcefilename="AbstractMarkupWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/vladsch/flexmark/parser/ListOptions;Ljava/lang/Object;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamespace" desc="()Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOptions" desc="()Lcom/vladsch/flexmark/parser/ListOptions;" line="141"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStream" desc="()Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asQName" desc="(Ljava/lang/String;)Ljavax/xml/namespace/QName;" line="152"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitChildren" desc="(Lcom/vladsch/flexmark/util/ast/Node;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="158"><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writePrecedingNewline" desc="(Lcom/vladsch/flexmark/util/ast/Block;)V" line="165"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTrailingNewline" desc="(Lcom/vladsch/flexmark/util/ast/Block;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeElement" desc="(Ljavax/xml/namespace/QName;Lcom/vladsch/flexmark/util/ast/Node;Ljava/util/Map;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="186"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeHtml" desc="(Lcom/vladsch/flexmark/util/ast/Node;)V" line="203"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeText" desc="(Lcom/vladsch/flexmark/ast/Text;)V" line="213"><counter type="INSTRUCTION" missed="8" covered="23"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeText" desc="(Lcom/vladsch/flexmark/ast/TextBase;)V" line="226"><counter type="INSTRUCTION" missed="7" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeHtmlEntity" desc="(Lcom/vladsch/flexmark/ast/HtmlEntity;)V" line="245"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeHtmlEntity" desc="(Lcom/vladsch/flexmark/ext/typographic/TypographicSmarts;)V" line="252"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeHtmlEntity" desc="(Ljava/lang/String;)V" line="258"><counter type="INSTRUCTION" missed="23" covered="17"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeHtmlEntityInternal" desc="(Ljava/lang/String;)V" line="274"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeParagraph" desc="(Lcom/vladsch/flexmark/ast/Paragraph;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="281"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLink" desc="(Lcom/vladsch/flexmark/ast/Link;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="297"><counter type="INSTRUCTION" missed="6" covered="57"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLink" desc="(Lcom/vladsch/flexmark/ast/MailLink;)V" line="323"><counter type="INSTRUCTION" missed="8" covered="43"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLink" desc="(Lcom/vladsch/flexmark/ast/AutoLink;)V" line="342"><counter type="INSTRUCTION" missed="6" covered="38"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTypographicQuotes" desc="(Lcom/vladsch/flexmark/ext/typographic/TypographicQuotes;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="361"><counter type="INSTRUCTION" missed="26" covered="10"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeInlineHtml" desc="(Lcom/vladsch/flexmark/ast/HtmlInline;)V" line="382"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeBlockHtml" desc="(Lcom/vladsch/flexmark/ast/HtmlBlock;)V" line="390"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeTable" desc="(Lcom/vladsch/flexmark/ext/tables/TableBlock;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="399"><counter type="INSTRUCTION" missed="0" covered="110"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTableRow" desc="(Lcom/vladsch/flexmark/ext/tables/TableRow;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="439"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTableCell" desc="(Lcom/vladsch/flexmark/ext/tables/TableCell;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="458"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeImage" desc="(Lcom/vladsch/flexmark/ast/Image;)V" line="473"><counter type="INSTRUCTION" missed="6" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeInsertAnchor" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorNode;)V" line="492"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeHeading" desc="(Lcom/vladsch/flexmark/ast/Heading;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="503"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collapseWhitespace" desc="(Ljava/lang/CharSequence;)Ljava/lang/String;" line="529"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCode" desc="(Lcom/vladsch/flexmark/ast/Code;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="559"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCodeBlock" desc="(Lcom/vladsch/flexmark/ast/IndentedCodeBlock;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="576"><counter type="INSTRUCTION" missed="3" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCodeBlock" desc="(Lcom/vladsch/flexmark/ast/FencedCodeBlock;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="602"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCodeBlock" desc="(Lcom/vladsch/flexmark/ast/CodeBlock;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="631"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeBlockQuote" desc="(Lcom/vladsch/flexmark/ast/BlockQuote;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="641"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeList" desc="(Ljavax/xml/namespace/QName;Lcom/vladsch/flexmark/ast/ListBlock;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="660"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeListItem" desc="(Lcom/vladsch/flexmark/ast/ListItem;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="683"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeBreak" desc="(Lcom/vladsch/flexmark/ast/HardLineBreak;)V" line="699"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeBreak" desc="(Lcom/vladsch/flexmark/ast/ThematicBreak;)V" line="705"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeComment" desc="(Lcom/vladsch/flexmark/ast/HtmlCommentBlock;)V" line="712"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$writeList$1" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;Lcom/vladsch/flexmark/util/ast/Node;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter;)V" line="673"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$writeCode$0" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;Lcom/vladsch/flexmark/util/ast/Node;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter;)V" line="562"><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="103"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="167" covered="1059"/><counter type="BRANCH" missed="32" covered="90"/><counter type="LINE" missed="42" covered="282"/><counter type="COMPLEXITY" missed="31" covered="73"/><counter type="METHOD" missed="5" covered="38"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupVisitor" sourcefilename="IMarkupVisitor.java"/><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorHtmlNodeRenderer$Factory" sourcefilename="InsertAnchorExtension.java"><method name="&lt;init&gt;" desc="()V" line="294"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)Lcom/vladsch/flexmark/html2md/converter/HtmlNodeRenderer;" line="298"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorNode" sourcefilename="InsertAnchorExtension.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="313"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V" line="316"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lcom/vladsch/flexmark/util/sequence/BasedSequence;" line="323"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIdReference" desc="()Lcom/vladsch/flexmark/util/sequence/BasedSequence;" line="328"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIdReference" desc="(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V" line="332"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSegments" desc="()[Lcom/vladsch/flexmark/util/sequence/BasedSequence;" line="338"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAstExtra" desc="(Ljava/lang/StringBuilder;)V" line="344"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="26"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlCodeRenderExtension" sourcefilename="HtmlCodeRenderExtension.java"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlCodeRenderExtension;" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rendererOptions" desc="(Lcom/vladsch/flexmark/util/data/MutableDataHolder;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extend" desc="(Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;Ljava/lang/String;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter" sourcefilename="IMarkupWriter.java"><method name="writeElement" desc="(Ljava/lang/String;Lcom/vladsch/flexmark/util/ast/Node;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeElement" desc="(Ljava/lang/String;Lcom/vladsch/flexmark/util/ast/Node;Ljava/util/Map;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeEmptyElement" desc="(Ljava/lang/String;Ljava/util/Map;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeElementStart" desc="(Ljavax/xml/namespace/QName;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeList" desc="(Ljava/lang/String;Lcom/vladsch/flexmark/ast/ListBlock;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter$ChildHandler;)V" line="192"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlQuoteTagExtension" sourcefilename="HtmlQuoteTagExtension.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlQuoteTagExtension;" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rendererOptions" desc="(Lcom/vladsch/flexmark/util/data/MutableDataHolder;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parserOptions" desc="(Lcom/vladsch/flexmark/util/data/MutableDataHolder;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extend" desc="(Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;Ljava/lang/String;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extend" desc="(Lcom/vladsch/flexmark/parser/Parser$Builder;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extend" desc="(Lcom/vladsch/flexmark/html2md/converter/FlexmarkHtmlConverter$Builder;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertVisitor" sourcefilename="InsertVisitor.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Predicate;)V" line="43"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processNode" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/IMarkupString;)Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertVisitor;" line="55"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lcom/vladsch/flexmark/util/ast/Node;)V" line="61"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInserts" desc="()Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlCodeRenderExtension$CodeNodeHtmlRenderer" sourcefilename="HtmlCodeRenderExtension.java"><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeRenderingHandlers" desc="()Ljava/util/Set;" line="83"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lcom/vladsch/flexmark/ast/Code;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V" line="92"><counter type="INSTRUCTION" missed="54" covered="69"/><counter type="BRANCH" missed="12" covered="12"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="54" covered="87"/><counter type="BRANCH" missed="12" covered="12"/><counter type="LINE" missed="8" covered="17"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlQuoteTagExtension$QTagNodeRenderer" sourcefilename="HtmlQuoteTagExtension.java"><method name="&lt;init&gt;" desc="()V" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeRenderingHandlers" desc="()Ljava/util/Set;" line="97"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlQuoteTagExtension$DoubleQuoteNode;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/AbstractMarkupWriter$MarkupNodeVisitor" sourcefilename="AbstractMarkupWriter.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/AbstractMarkupWriter;)V" line="735"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="head" desc="(Lorg/jsoup/nodes/Node;I)V" line="738"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tail" desc="(Lorg/jsoup/nodes/Node;I)V" line="773"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="122" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlQuoteTagExtension$QuoteReplacingPostProcessor" sourcefilename="HtmlQuoteTagExtension.java"><method name="&lt;init&gt;" desc="()V" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Lcom/vladsch/flexmark/util/ast/NodeTracker;Lcom/vladsch/flexmark/util/ast/Node;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorNodeRenderer$Factory" sourcefilename="InsertAnchorExtension.java"><method name="&lt;init&gt;" desc="()V" line="152"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)Lcom/vladsch/flexmark/html/renderer/NodeRenderer;" line="156"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorHtmlNodeRenderer" sourcefilename="InsertAnchorExtension.java"><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)V" line="268"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHtmlNodeRendererHandlers" desc="()Ljava/util/Set;" line="274"><counter type="INSTRUCTION" missed="1" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processInsert" desc="(Lorg/jsoup/nodes/Element;Lcom/vladsch/flexmark/html2md/converter/HtmlNodeConverterContext;Lcom/vladsch/flexmark/html2md/converter/HtmlMarkdownWriter;)V" line="284"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="52"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/AstCollectingVisitor" sourcefilename="AstCollectingVisitor.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="(Lcom/vladsch/flexmark/util/ast/Node;)Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAst" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="56"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendIndent" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendEOL" desc="()V" line="69"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendPendingEOL" desc="()V" line="74"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collect" desc="(Lcom/vladsch/flexmark/util/ast/Node;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/vladsch/flexmark/util/ast/Node;)V" line="85"><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="77"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="10" covered="20"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorFormatter$Factory" sourcefilename="InsertAnchorExtension.java"><method name="&lt;init&gt;" desc="()V" line="255"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)Lcom/vladsch/flexmark/formatter/NodeFormatter;" line="259"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorInlineParser" sourcefilename="InsertAnchorExtension.java"><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/parser/LightInlineParser;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finalizeDocument" desc="(Lcom/vladsch/flexmark/parser/InlineParser;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finalizeBlock" desc="(Lcom/vladsch/flexmark/parser/InlineParser;)V" line="178"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Lcom/vladsch/flexmark/parser/LightInlineParser;)Z" line="182"><counter type="INSTRUCTION" missed="8" covered="48"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="164"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="57"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlQuoteTagExtension$QTagHtmlNodeRenderer" sourcefilename="HtmlQuoteTagExtension.java"><method name="&lt;init&gt;" desc="()V" line="150"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHtmlNodeRendererHandlers" desc="()Ljava/util/Set;" line="154"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderMarkdown" desc="(Lorg/jsoup/nodes/Element;Lcom/vladsch/flexmark/html2md/converter/HtmlNodeConverterContext;Lcom/vladsch/flexmark/html2md/converter/HtmlMarkdownWriter;)V" line="159"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlQuoteTagExtension$QTagHtmlNodeRenderer$Factory" sourcefilename="HtmlQuoteTagExtension.java"><method name="&lt;init&gt;" desc="()V" line="162"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)Lcom/vladsch/flexmark/html2md/converter/HtmlNodeRenderer;" line="166"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/MarkupXmlStreamWriter" sourcefilename="MarkupXmlStreamWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/vladsch/flexmark/parser/ListOptions;Ljavax/xml/stream/XMLStreamWriter;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeEmptyElement" desc="(Ljavax/xml/namespace/QName;Ljava/util/Map;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeElementStart" desc="(Ljavax/xml/namespace/QName;Ljava/util/Map;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeElementEnd" desc="(Ljavax/xml/namespace/QName;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeText" desc="(Ljava/lang/CharSequence;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeHtmlEntityInternal" desc="(Ljava/lang/String;)V" line="82"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeComment" desc="(Ljava/lang/CharSequence;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="87"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlQuoteTagExtension$QTagNodeRenderer$Factory" sourcefilename="HtmlQuoteTagExtension.java"><method name="&lt;init&gt;" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)Lcom/vladsch/flexmark/html/renderer/NodeRenderer;" line="112"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension" sourcefilename="InsertAnchorExtension.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lcom/vladsch/flexmark/util/misc/Extension;" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parserOptions" desc="(Lcom/vladsch/flexmark/util/data/MutableDataHolder;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rendererOptions" desc="(Lcom/vladsch/flexmark/util/data/MutableDataHolder;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extend" desc="(Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;Ljava/lang/String;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extend" desc="(Lcom/vladsch/flexmark/parser/Parser$Builder;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extend" desc="(Lcom/vladsch/flexmark/formatter/Formatter$Builder;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extend" desc="(Lcom/vladsch/flexmark/html2md/converter/FlexmarkHtmlConverter$Builder;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorInlineParser$Factory" sourcefilename="InsertAnchorExtension.java"><method name="&lt;init&gt;" desc="()V" line="197"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAfterDependents" desc="()Ljava/util/Set;" line="200"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCharacters" desc="()Ljava/lang/CharSequence;" line="205"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeforeDependents" desc="()Ljava/util/Set;" line="210"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lcom/vladsch/flexmark/parser/LightInlineParser;)Lcom/vladsch/flexmark/parser/InlineParserExtension;" line="215"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="affectsGlobalScope" desc="()Z" line="220"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/HtmlQuoteTagExtension$QuoteReplacingPostProcessor$Factory" sourcefilename="HtmlQuoteTagExtension.java"><method name="&lt;init&gt;" desc="()V" line="138"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/vladsch/flexmark/util/ast/Document;)Lcom/vladsch/flexmark/parser/block/NodePostProcessor;" line="145"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/FixedEmphasisDelimiterProcessor" sourcefilename="FixedEmphasisDelimiterProcessor.java"><method name="&lt;init&gt;" desc="(Z)V" line="49"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelimiterUse" desc="(Lcom/vladsch/flexmark/parser/delimiter/DelimiterRun;Lcom/vladsch/flexmark/parser/delimiter/DelimiterRun;)I" line="57"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Lcom/vladsch/flexmark/parser/core/delimiter/Delimiter;Lcom/vladsch/flexmark/parser/core/delimiter/Delimiter;I)V" line="74"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="97"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/XmlMarkupParser" sourcefilename="XmlMarkupParser.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/XmlMarkupParser;" line="79"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseMarkupline" desc="(Lorg/codehaus/stax2/XMLEventReader2;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="83"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseMarkupMultiline" desc="(Lorg/codehaus/stax2/XMLEventReader2;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="90"><counter type="INSTRUCTION" missed="6" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseToString" desc="(Lorg/codehaus/stax2/XMLEventReader2;Ljava/lang/StringBuilder;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseStartElement" desc="(Lorg/codehaus/stax2/XMLEventReader2;Ljavax/xml/stream/events/StartElement;Ljava/lang/StringBuilder;)V" line="147"><counter type="INSTRUCTION" missed="16" covered="92"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="2" covered="28"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseContents" desc="(Lorg/codehaus/stax2/XMLEventReader2;Ljavax/xml/stream/events/StartElement;Ljava/lang/StringBuilder;)V" line="203"><counter type="INSTRUCTION" missed="10" covered="50"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="272"/><counter type="BRANCH" missed="16" covered="22"/><counter type="LINE" missed="8" covered="61"/><counter type="COMPLEXITY" missed="15" covered="12"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/InsertAnchorExtension$InsertAnchorOptions" sourcefilename="InsertAnchorExtension.java"><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/MarkupVisitor" sourcefilename="MarkupVisitor.java"><method name="&lt;init&gt;" desc="(Z)V" line="84"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isHandleBlockElements" desc="()Z" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDocument" desc="(Lcom/vladsch/flexmark/util/ast/Document;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitChildren" desc="(Lcom/vladsch/flexmark/util/ast/Node;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter;)V" line="98"><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lcom/vladsch/flexmark/util/ast/Node;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter;)V" line="105"><counter type="INSTRUCTION" missed="19" covered="28"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processInlineElements" desc="(Lcom/vladsch/flexmark/util/ast/Node;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter;)Z" line="124"><counter type="INSTRUCTION" missed="47" covered="148"/><counter type="BRANCH" missed="7" covered="35"/><counter type="LINE" missed="8" covered="37"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processBlockElements" desc="(Lcom/vladsch/flexmark/util/ast/Node;Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/IMarkupWriter;)Z" line="178"><counter type="INSTRUCTION" missed="7" covered="115"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="2" covered="25"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="77" covered="326"/><counter type="BRANCH" missed="12" covered="66"/><counter type="LINE" missed="12" covered="82"/><counter type="COMPLEXITY" missed="12" covered="35"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/SuppressPTagExtension$PTagNodeRenderer" sourcefilename="SuppressPTagExtension.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeRenderingHandlers" desc="()Ljava/util/Set;" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/FlexmarkFactory" sourcefilename="FlexmarkFactory.java"><method name="instance" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/flexmark/FlexmarkFactory;" line="57"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfiguration" desc="()Lcom/vladsch/flexmark/util/data/DataHolder;" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getListOptions" desc="()Lcom/vladsch/flexmark/parser/ListOptions;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarkdownParser" desc="()Lcom/vladsch/flexmark/parser/Parser;" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHtmlRenderer" desc="()Lcom/vladsch/flexmark/html/HtmlRenderer;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFormatter" desc="()Lcom/vladsch/flexmark/formatter/Formatter;" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlexmarkHtmlConverter" desc="()Lcom/vladsch/flexmark/html2md/converter/FlexmarkHtmlConverter;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="65"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/MarkupXmlEventWriter" sourcefilename="MarkupXmlEventWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/vladsch/flexmark/parser/ListOptions;Ljavax/xml/stream/XMLEventWriter;Lorg/codehaus/stax2/evt/XMLEventFactory2;)V" line="61"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEventFactory" desc="()Lorg/codehaus/stax2/evt/XMLEventFactory2;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAttributes" desc="(Ljava/util/Map;)Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeEmptyElement" desc="(Ljavax/xml/namespace/QName;Ljava/util/Map;)V" line="85"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeElementStart" desc="(Ljavax/xml/namespace/QName;Ljava/util/Map;)V" line="97"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeElementEnd" desc="(Ljavax/xml/namespace/QName;)V" line="104"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeText" desc="(Ljava/lang/CharSequence;)V" line="110"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeHtmlEntityInternal" desc="(Ljava/lang/String;)V" line="115"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeComment" desc="(Ljava/lang/CharSequence;)V" line="120"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$handleAttributes$0" desc="(Ljava/util/Map$Entry;)Ljavax/xml/stream/events/Attribute;" line="77"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="144" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/AbstractMarkupWriter$NodeVisitorException" sourcefilename="AbstractMarkupWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="731"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/datatype/markup/flexmark/FlexmarkConfiguration" sourcefilename="FlexmarkConfiguration.java"><method name="initFlexmarkConfig" desc="()Lcom/vladsch/flexmark/util/data/DataSet;" line="63"><counter type="INSTRUCTION" missed="0" covered="199"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFlexmarkConfig" desc="(Lcom/vladsch/flexmark/util/data/DataHolder;)Lcom/vladsch/flexmark/util/data/DataSet;" line="150"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="218"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FixedEmphasisDelimiterProcessor.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="2" ci="5" mb="1" cb="1"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="14" mb="0" cb="6"/><line nr="58" mi="0" ci="10" mb="1" cb="3"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="4"/><line nr="66" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="2"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="97"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InsertVisitor.java"><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="2" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="2" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SuppressPTagExtension.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="MarkupXmlStreamWriter.java"><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="2"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="11" mb="0" cb="2"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="87"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HtmlCodeRenderExtension.java"><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="2" ci="8" mb="2" cb="2"/><line nr="95" mi="0" ci="2" mb="1" cb="1"/><line nr="96" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="1" cb="1"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="3" ci="3" mb="3" cb="1"/><line nr="106" mi="11" ci="0" mb="2" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="8" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="6"/><line nr="116" mi="0" ci="12" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="1" cb="1"/><line nr="124" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="114"/><counter type="BRANCH" missed="12" covered="12"/><counter type="LINE" missed="8" covered="25"/><counter type="COMPLEXITY" missed="9" covered="13"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="FlexmarkFactory.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="65"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlMarkupParser.java"><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="61" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="2" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="1" cb="1"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="6" mb="1" cb="1"/><line nr="107" mi="0" ci="7" mb="1" cb="3"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="1" cb="1"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="1" cb="1"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="11" mb="0" cb="2"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="1" cb="3"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="1" cb="1"/><line nr="191" mi="11" ci="0" mb="2" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="1" cb="3"/><line nr="211" mi="0" ci="3" mb="0" cb="2"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="1" cb="1"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="7" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="3" ci="4" mb="1" cb="1"/><line nr="233" mi="0" ci="7" mb="1" cb="1"/><line nr="234" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="272"/><counter type="BRANCH" missed="16" covered="22"/><counter type="LINE" missed="8" covered="61"/><counter type="COMPLEXITY" missed="15" covered="12"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MarkupXmlEventWriter.java"><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="11" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="13" ci="0" mb="2" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="13" ci="0" mb="2" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="9" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="9" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="144" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IMarkupWriter.java"><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InsertAnchorExtension.java"><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="1" cb="1"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="1" cb="1"/><line nr="137" mi="0" ci="15" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="1" cb="1"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="2"/><line nr="186" mi="0" ci="9" mb="0" cb="0"/><line nr="187" mi="0" ci="9" mb="0" cb="0"/><line nr="188" mi="4" ci="3" mb="1" cb="1"/><line nr="189" mi="4" ci="3" mb="1" cb="1"/><line nr="190" mi="0" ci="7" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="1" cb="1"/><line nr="235" mi="0" ci="8" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="1" cb="1"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="1" cb="1"/><line nr="275" mi="0" ci="9" mb="0" cb="0"/><line nr="276" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="4" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="313" mi="6" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="3" ci="0" mb="0" cb="0"/><line nr="333" mi="1" ci="0" mb="0" cb="0"/><line nr="338" mi="13" ci="0" mb="0" cb="0"/><line nr="339" mi="2" ci="0" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="346" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="333"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="11" covered="87"/><counter type="COMPLEXITY" missed="14" covered="39"/><counter type="METHOD" missed="6" covered="38"/><counter type="CLASS" missed="0" covered="11"/></sourcefile><sourcefile name="MarkupVisitor.java"><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="11" mb="0" cb="2"/><line nr="99" mi="4" ci="3" mb="1" cb="1"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="1" cb="3"/><line nr="107" mi="0" ci="3" mb="0" cb="2"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="1" cb="1"/><line nr="116" mi="8" ci="0" mb="0" cb="0"/><line nr="117" mi="11" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="1" cb="1"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="2"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="2"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="1" cb="1"/><line nr="142" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="2"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="7" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="1" cb="1"/><line nr="152" mi="7" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="1" cb="1"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="2" cb="2"/><line nr="164" mi="8" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="2"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="2"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="2"/><line nr="184" mi="0" ci="8" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="2"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="1" cb="1"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="2"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="2"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="1" cb="1"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="77" covered="326"/><counter type="BRANCH" missed="12" covered="66"/><counter type="LINE" missed="12" covered="82"/><counter type="COMPLEXITY" missed="12" covered="35"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AstCollectingVisitor.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="2"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="2" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="4" ci="3" mb="1" cb="1"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="77"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="10" covered="20"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FlexmarkConfiguration.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="2" ci="14" mb="1" cb="1"/><counter type="INSTRUCTION" missed="2" covered="218"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractMarkupWriter.java"><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="11" mb="0" cb="2"/><line nr="159" mi="4" ci="3" mb="1" cb="1"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="14" mb="1" cb="5"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="2"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="1" cb="1"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="8" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="2"/><line nr="217" mi="4" ci="3" mb="1" cb="1"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="4" ci="3" mb="1" cb="1"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="11" mb="0" cb="2"/><line nr="229" mi="0" ci="3" mb="0" cb="2"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="1" cb="1"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="7" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="4" ci="3" mb="1" cb="1"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="253" mi="7" ci="0" mb="2" cb="0"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><line nr="255" mi="1" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="1" cb="1"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="2" cb="0"/><line nr="262" mi="8" ci="0" mb="0" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="4" ci="3" mb="1" cb="1"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="281" mi="0" ci="9" mb="0" cb="4"/><line nr="282" mi="0" ci="3" mb="0" cb="2"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="9" mb="0" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="5" ci="0" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="2"/><line nr="306" mi="0" ci="6" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="2"/><line nr="314" mi="0" ci="5" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="10" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="2" ci="8" mb="1" cb="1"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="1" mb="0" cb="0"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="346" mi="0" ci="9" mb="0" cb="0"/><line nr="347" mi="1" ci="0" mb="0" cb="0"/><line nr="348" mi="5" ci="0" mb="0" cb="0"/><line nr="349" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="7" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="1" cb="1"/><line nr="362" mi="0" ci="6" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="365" mi="5" ci="0" mb="4" cb="0"/><line nr="366" mi="3" ci="0" mb="0" cb="0"/><line nr="369" mi="4" ci="0" mb="0" cb="0"/><line nr="371" mi="3" ci="0" mb="0" cb="0"/><line nr="372" mi="5" ci="0" mb="4" cb="0"/><line nr="373" mi="3" ci="0" mb="0" cb="0"/><line nr="376" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="3" ci="0" mb="0" cb="0"/><line nr="383" mi="1" ci="0" mb="0" cb="0"/><line nr="390" mi="3" ci="0" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="0" cb="0"/><line nr="393" mi="1" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="3" mb="0" cb="0"/><line nr="403" mi="0" ci="10" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="1" cb="1"/><line nr="407" mi="0" ci="3" mb="0" cb="0"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="11" mb="0" cb="2"/><line nr="410" mi="0" ci="3" mb="1" cb="1"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="413" mi="0" ci="1" mb="0" cb="0"/><line nr="414" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="10" mb="0" cb="0"/><line nr="419" mi="0" ci="2" mb="1" cb="1"/><line nr="420" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="0" ci="3" mb="0" cb="0"/><line nr="422" mi="0" ci="3" mb="0" cb="0"/><line nr="423" mi="0" ci="11" mb="0" cb="2"/><line nr="424" mi="0" ci="3" mb="1" cb="1"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="427" mi="0" ci="1" mb="0" cb="0"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="0" ci="3" mb="0" cb="0"/><line nr="434" mi="0" ci="1" mb="0" cb="0"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="4" mb="0" cb="0"/><line nr="441" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="11" mb="0" cb="2"/><line nr="444" mi="0" ci="3" mb="1" cb="1"/><line nr="445" mi="0" ci="5" mb="0" cb="0"/><line nr="447" mi="0" ci="1" mb="0" cb="0"/><line nr="449" mi="0" ci="3" mb="0" cb="0"/><line nr="450" mi="0" ci="3" mb="0" cb="2"/><line nr="451" mi="0" ci="3" mb="0" cb="0"/><line nr="453" mi="0" ci="1" mb="0" cb="0"/><line nr="458" mi="0" ci="11" mb="0" cb="2"/><line nr="460" mi="0" ci="4" mb="0" cb="0"/><line nr="461" mi="0" ci="3" mb="1" cb="1"/><line nr="462" mi="9" ci="0" mb="0" cb="0"/><line nr="465" mi="0" ci="4" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="0" cb="0"/><line nr="468" mi="0" ci="1" mb="0" cb="0"/><line nr="473" mi="0" ci="4" mb="0" cb="0"/><line nr="474" mi="0" ci="7" mb="0" cb="0"/><line nr="476" mi="0" ci="9" mb="0" cb="0"/><line nr="477" mi="1" ci="0" mb="0" cb="0"/><line nr="478" mi="5" ci="0" mb="0" cb="0"/><line nr="479" mi="0" ci="1" mb="0" cb="0"/><line nr="481" mi="0" ci="9" mb="0" cb="0"/><line nr="483" mi="0" ci="4" mb="0" cb="2"/><line nr="484" mi="0" ci="9" mb="0" cb="0"/><line nr="487" mi="0" ci="4" mb="0" cb="0"/><line nr="488" mi="0" ci="1" mb="0" cb="0"/><line nr="492" mi="0" ci="4" mb="0" cb="0"/><line nr="493" mi="0" ci="9" mb="0" cb="0"/><line nr="494" mi="0" ci="9" mb="0" cb="0"/><line nr="496" mi="0" ci="6" mb="0" cb="0"/><line nr="497" mi="0" ci="1" mb="0" cb="0"/><line nr="503" mi="0" ci="3" mb="0" cb="0"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="506" mi="0" ci="14" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="0" cb="0"/><line nr="509" mi="0" ci="3" mb="0" cb="2"/><line nr="510" mi="0" ci="5" mb="0" cb="0"/><line nr="513" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="3" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="0" cb="0"/><line nr="517" mi="0" ci="1" mb="0" cb="0"/><line nr="529" mi="0" ci="6" mb="0" cb="0"/><line nr="530" mi="0" ci="3" mb="0" cb="0"/><line nr="531" mi="0" ci="2" mb="0" cb="0"/><line nr="532" mi="0" ci="7" mb="0" cb="2"/><line nr="533" mi="0" ci="4" mb="0" cb="0"/><line nr="535" mi="0" ci="6" mb="1" cb="3"/><line nr="536" mi="0" ci="3" mb="0" cb="2"/><line nr="538" mi="0" ci="3" mb="0" cb="0"/><line nr="541" mi="0" ci="2" mb="0" cb="2"/><line nr="542" mi="0" ci="4" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="0" cb="0"/><line nr="545" mi="0" ci="4" mb="0" cb="0"/><line nr="549" mi="0" ci="3" mb="0" cb="0"/><line nr="550" mi="0" ci="4" mb="0" cb="2"/><line nr="552" mi="0" ci="8" mb="0" cb="0"/><line nr="554" mi="0" ci="4" mb="0" cb="0"/><line nr="559" mi="0" ci="4" mb="0" cb="0"/><line nr="560" mi="0" ci="3" mb="0" cb="0"/><line nr="561" mi="0" ci="6" mb="0" cb="0"/><line nr="562" mi="0" ci="6" mb="1" cb="3"/><line nr="563" mi="0" ci="6" mb="0" cb="0"/><line nr="564" mi="0" ci="3" mb="0" cb="0"/><line nr="565" mi="0" ci="1" mb="0" cb="0"/><line nr="566" mi="4" ci="0" mb="0" cb="0"/><line nr="568" mi="0" ci="1" mb="0" cb="0"/><line nr="569" mi="0" ci="3" mb="0" cb="0"/><line nr="570" mi="0" ci="1" mb="0" cb="0"/><line nr="576" mi="0" ci="3" mb="0" cb="0"/><line nr="577" mi="0" ci="4" mb="0" cb="0"/><line nr="579" mi="0" ci="3" mb="0" cb="0"/><line nr="581" mi="0" ci="4" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="0" cb="0"/><line nr="585" mi="0" ci="3" mb="1" cb="1"/><line nr="586" mi="0" ci="5" mb="0" cb="0"/><line nr="589" mi="3" ci="0" mb="0" cb="0"/><line nr="592" mi="0" ci="3" mb="0" cb="0"/><line nr="594" mi="0" ci="3" mb="0" cb="0"/><line nr="595" mi="0" ci="3" mb="0" cb="0"/><line nr="596" mi="0" ci="1" mb="0" cb="0"/><line nr="602" mi="0" ci="3" mb="0" cb="0"/><line nr="603" mi="0" ci="4" mb="0" cb="0"/><line nr="605" mi="0" ci="3" mb="0" cb="0"/><line nr="607" mi="0" ci="4" mb="0" cb="0"/><line nr="608" mi="0" ci="4" mb="0" cb="0"/><line nr="609" mi="0" ci="4" mb="0" cb="2"/><line nr="610" mi="0" ci="8" mb="0" cb="0"/><line nr="613" mi="0" ci="4" mb="0" cb="0"/><line nr="615" mi="0" ci="3" mb="0" cb="2"/><line nr="616" mi="0" ci="5" mb="0" cb="0"/><line nr="619" mi="0" ci="3" mb="0" cb="0"/><line nr="622" mi="0" ci="3" mb="0" cb="0"/><line nr="624" mi="0" ci="3" mb="0" cb="0"/><line nr="625" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="1" mb="0" cb="0"/><line nr="631" mi="0" ci="4" mb="0" cb="2"/><line nr="632" mi="0" ci="7" mb="0" cb="0"/><line nr="634" mi="0" ci="4" mb="0" cb="0"/><line nr="636" mi="0" ci="5" mb="0" cb="0"/><line nr="637" mi="0" ci="1" mb="0" cb="0"/><line nr="641" mi="0" ci="3" mb="0" cb="0"/><line nr="642" mi="0" ci="4" mb="0" cb="0"/><line nr="643" mi="0" ci="3" mb="0" cb="0"/><line nr="646" mi="0" ci="3" mb="0" cb="2"/><line nr="647" mi="0" ci="5" mb="0" cb="0"/><line nr="650" mi="0" ci="3" mb="0" cb="0"/><line nr="654" mi="0" ci="3" mb="0" cb="0"/><line nr="655" mi="0" ci="3" mb="0" cb="0"/><line nr="656" mi="0" ci="1" mb="0" cb="0"/><line nr="660" mi="0" ci="4" mb="0" cb="0"/><line nr="661" mi="0" ci="3" mb="0" cb="2"/><line nr="662" mi="0" ci="3" mb="0" cb="0"/><line nr="663" mi="0" ci="3" mb="0" cb="0"/><line nr="664" mi="0" ci="3" mb="0" cb="2"/><line nr="665" mi="0" ci="6" mb="0" cb="0"/><line nr="669" mi="0" ci="3" mb="0" cb="0"/><line nr="670" mi="0" ci="4" mb="0" cb="0"/><line nr="672" mi="0" ci="6" mb="0" cb="0"/><line nr="673" mi="0" ci="3" mb="0" cb="0"/><line nr="674" mi="0" ci="4" mb="0" cb="0"/><line nr="675" mi="0" ci="1" mb="0" cb="0"/><line nr="677" mi="0" ci="3" mb="0" cb="0"/><line nr="678" mi="0" ci="3" mb="0" cb="0"/><line nr="679" mi="0" ci="1" mb="0" cb="0"/><line nr="683" mi="0" ci="4" mb="0" cb="0"/><line nr="684" mi="0" ci="3" mb="0" cb="0"/><line nr="685" mi="0" ci="3" mb="0" cb="0"/><line nr="687" mi="0" ci="3" mb="0" cb="2"/><line nr="688" mi="0" ci="5" mb="0" cb="0"/><line nr="691" mi="0" ci="3" mb="0" cb="0"/><line nr="693" mi="0" ci="3" mb="0" cb="0"/><line nr="694" mi="0" ci="3" mb="0" cb="0"/><line nr="695" mi="0" ci="1" mb="0" cb="0"/><line nr="699" mi="0" ci="5" mb="0" cb="0"/><line nr="700" mi="0" ci="3" mb="0" cb="0"/><line nr="701" mi="0" ci="1" mb="0" cb="0"/><line nr="705" mi="0" ci="3" mb="0" cb="0"/><line nr="706" mi="0" ci="5" mb="0" cb="0"/><line nr="707" mi="0" ci="3" mb="0" cb="0"/><line nr="708" mi="0" ci="1" mb="0" cb="0"/><line nr="712" mi="0" ci="3" mb="0" cb="0"/><line nr="714" mi="0" ci="3" mb="0" cb="0"/><line nr="715" mi="0" ci="8" mb="0" cb="0"/><line nr="716" mi="0" ci="6" mb="0" cb="0"/><line nr="717" mi="0" ci="3" mb="0" cb="0"/><line nr="719" mi="0" ci="1" mb="0" cb="0"/><line nr="731" mi="3" ci="0" mb="0" cb="0"/><line nr="732" mi="1" ci="0" mb="0" cb="0"/><line nr="735" mi="6" ci="0" mb="0" cb="0"/><line nr="738" mi="2" ci="0" mb="2" cb="0"/><line nr="740" mi="3" ci="0" mb="2" cb="0"/><line nr="741" mi="3" ci="0" mb="0" cb="0"/><line nr="743" mi="3" ci="0" mb="0" cb="0"/><line nr="746" mi="3" ci="0" mb="2" cb="0"/><line nr="747" mi="3" ci="0" mb="0" cb="0"/><line nr="749" mi="4" ci="0" mb="0" cb="0"/><line nr="750" mi="10" ci="0" mb="2" cb="0"/><line nr="751" mi="7" ci="0" mb="0" cb="0"/><line nr="752" mi="1" ci="0" mb="0" cb="0"/><line nr="755" mi="8" ci="0" mb="0" cb="0"/><line nr="756" mi="4" ci="0" mb="2" cb="0"/><line nr="757" mi="6" ci="0" mb="0" cb="0"/><line nr="759" mi="5" ci="0" mb="0" cb="0"/><line nr="761" mi="4" ci="0" mb="2" cb="0"/><line nr="762" mi="3" ci="0" mb="0" cb="0"/><line nr="763" mi="7" ci="0" mb="0" cb="0"/><line nr="765" mi="1" ci="0" mb="0" cb="0"/><line nr="766" mi="5" ci="0" mb="0" cb="0"/><line nr="767" mi="1" ci="0" mb="0" cb="0"/><line nr="769" mi="1" ci="0" mb="0" cb="0"/><line nr="773" mi="5" ci="0" mb="4" cb="0"/><line nr="774" mi="3" ci="0" mb="0" cb="0"/><line nr="775" mi="4" ci="0" mb="2" cb="0"/><line nr="776" mi="8" ci="0" mb="0" cb="0"/><line nr="778" mi="4" ci="0" mb="0" cb="0"/><line nr="779" mi="1" ci="0" mb="0" cb="0"/><line nr="780" mi="5" ci="0" mb="0" cb="0"/><line nr="781" mi="1" ci="0" mb="0" cb="0"/><line nr="784" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="293" covered="1059"/><counter type="BRANCH" missed="50" covered="90"/><counter type="LINE" missed="75" covered="282"/><counter type="COMPLEXITY" missed="44" covered="73"/><counter type="METHOD" missed="9" covered="38"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="IMarkupVisitor.java"/><sourcefile name="HtmlQuoteTagExtension.java"><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="1" cb="1"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="1" cb="1"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="9" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="9" mb="0" cb="0"/><line nr="159" mi="0" ci="10" mb="0" cb="2"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="11" mb="0" cb="2"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="171"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="2" covered="24"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><counter type="INSTRUCTION" missed="749" covered="2898"/><counter type="BRANCH" missed="116" covered="232"/><counter type="LINE" missed="171" covered="729"/><counter type="COMPLEXITY" missed="125" covered="249"/><counter type="METHOD" missed="35" covered="165"/><counter type="CLASS" missed="4" covered="34"/></package><package name="gov/nist/secauto/metaschema/core/model/xml"><class name="gov/nist/secauto/metaschema/core/model/xml/XmlModule" sourcefilename="XmlModule.java"><method name="&lt;init&gt;" desc="(Ljava/net/URI;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/METASCHEMADocument;Ljava/util/List;)V" line="91"><counter type="INSTRUCTION" missed="15" covered="177"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="3" covered="44"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocation" desc="()Ljava/net/URI;" line="169"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXmlModule" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/METASCHEMADocument$METASCHEMA;" line="179"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="185"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="191"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="197"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShortName" desc="()Ljava/lang/String;" line="204"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXmlNamespace" desc="()Ljava/net/URI;" line="210"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJsonBaseUri" desc="()Ljava/net/URI;" line="216"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssemblyDefinitionMap" desc="()Ljava/util/Map;" line="220"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAssemblyDefinitions" desc="()Ljava/util/Collection;" line="226"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAssemblyDefinitionByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;" line="231"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFieldDefinitionMap" desc="()Ljava/util/Map;" line="235"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFieldDefinitions" desc="()Ljava/util/Collection;" line="241"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFieldDefinitionByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;" line="246"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssemblyAndFieldDefinitions" desc="()Ljava/util/List;" line="252"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlagDefinitionMap" desc="()Ljava/util/Map;" line="257"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlagDefinitions" desc="()Ljava/util/Collection;" line="263"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlagDefinitionByName" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;" line="268"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootAssemblyDefinitionMap" desc="()Ljava/util/Map;" line="272"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRootAssemblyDefinitions" desc="()Ljava/util/Collection;" line="278"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="232"/><counter type="BRANCH" missed="5" covered="19"/><counter type="LINE" missed="13" covered="57"/><counter type="COMPLEXITY" missed="12" covered="22"/><counter type="METHOD" missed="8" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/AssemblyTargetedConstraints" sourcefilename="AssemblyTargetedConstraints.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Lgov/nist/secauto/metaschema/core/model/xml/AssemblyConstraintSupport;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexConstraints" desc="()Ljava/util/List;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUniqueConstraints" desc="()Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHasCardinalityConstraints" desc="()Ljava/util/List;" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;)V" line="69"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint;)V" line="74"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;)V" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="target" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyTo" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$applyTo$2" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;)V" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$applyTo$1" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint;)V" line="91"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$applyTo$0" desc="(Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;)V" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="43"/><counter type="LINE" missed="6" covered="12"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlModelParser" sourcefilename="XmlModelParser.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseChoice" desc="(Lorg/apache/xmlbeans/XmlObject;Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="70"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseModel" desc="(Lorg/apache/xmlbeans/XmlObject;Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="81"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/util/stream/Stream;Ljava/lang/Object;)Ljava/util/stream/Stream;" line="93"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseInternal" desc="(Lorg/apache/xmlbeans/XmlCursor;Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="103"><counter type="INSTRUCTION" missed="187" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="46" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldInstances" desc="()Ljava/util/Map;" line="163"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssemblyInstances" desc="()Ljava/util/Map;" line="169"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamedModelInstances" desc="()Ljava/util/Map;" line="175"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelInstances" desc="()Ljava/util/List;" line="181"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonGroupAsBehavior" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GroupAsType;)Lgov/nist/secauto/metaschema/core/model/JsonGroupAsBehavior;" line="186"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlGroupAsBehavior" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GroupAsType;)Lgov/nist/secauto/metaschema/core/model/XmlGroupAsBehavior;" line="195"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinOccurs" desc="(Ljava/math/BigInteger;)I" line="203"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxOccurs" desc="(Ljava/lang/Object;)I" line="211"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="318" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="81" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlInlineAssemblyDefinition$InternalAssemblyDefinition" sourcefilename="XmlInlineAssemblyDefinition.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/XmlInlineAssemblyDefinition;)V" line="199"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInline" desc="()Z" line="219"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInlineInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IAssemblyInstance;" line="225"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="230"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="235"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="240"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModuleScope" desc="()Lgov/nist/secauto/metaschema/core/model/ModuleScopeEnum;" line="245"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="250"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="256"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRoot" desc="()Z" line="262"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRootName" desc="()Ljava/lang/String;" line="268"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlagContainer" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlFlagContainerSupport;" line="274"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelContainer" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlModelContainerSupport;" line="280"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConstraintSupport" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IModelConstrained;" line="286"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="291"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingModule" desc="()Lgov/nist/secauto/metaschema/core/model/IModule;" line="296"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IModelConstrained;" line="204"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlModelContainerSupport;" line="201"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlFlagContainerSupport;" line="200"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="118" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlInlineFieldDefinition" sourcefilename="XmlInlineFieldDefinition.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/InlineFieldDefinitionType;Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="82"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlInlineFieldDefinition$InternalFieldDefinition;" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingModule" desc="()Lgov/nist/secauto/metaschema/core/model/IModule;" line="94"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlField" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/InlineFieldDefinitionType;" line="108"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInXmlWrapped" desc="()Z" line="114"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="135"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="141"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="147"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupAsName" desc="()Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinOccurs" desc="()I" line="157"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxOccurs" desc="()I" line="162"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonGroupAsBehavior" desc="()Lgov/nist/secauto/metaschema/core/model/JsonGroupAsBehavior;" line="167"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlGroupAsBehavior" desc="()Lgov/nist/secauto/metaschema/core/model/XmlGroupAsBehavior;" line="172"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="178"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="188"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="194"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemValues" desc="(Ljava/lang/Object;)Ljava/util/Collection;" line="201"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="125" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlGlobalFlagDefinition" sourcefilename="XmlGlobalFlagDefinition.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalFlagDefinitionType;Lgov/nist/secauto/metaschema/core/model/IModule;)V" line="73"><counter type="INSTRUCTION" missed="8" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContainingModule" desc="()Lgov/nist/secauto/metaschema/core/model/IModule;" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultValue" desc="()Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConstraintSupport" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;" line="115"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXmlFlag" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalFlagDefinitionType;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModuleScope" desc="()Lgov/nist/secauto/metaschema/core/model/ModuleScopeEnum;" line="134"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="154"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="160"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="165"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="171"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="177"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInline" desc="()Z" line="187"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInlineInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagInstance;" line="193"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;" line="84"><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="67" covered="80"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="10" covered="23"/><counter type="COMPLEXITY" missed="15" covered="9"/><counter type="METHOD" missed="8" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlInlineFlagDefinition" sourcefilename="XmlInlineFlagDefinition.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/InlineFlagDefinitionType;Lgov/nist/secauto/metaschema/core/model/IFlagContainer;)V" line="75"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlInlineFlagDefinition$InternalFlagDefinition;" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingModule" desc="()Lgov/nist/secauto/metaschema/core/model/IModule;" line="99"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlFlag" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/InlineFlagDefinitionType;" line="112"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="123"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="129"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRequired" desc="()Z" line="140"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="146"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="156"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;" line="80"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/FlagTargetedConstraints" sourcefilename="FlagTargetedConstraints.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;)V" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="target" desc="(Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;)V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlInlineFlagDefinition$InternalFlagDefinition" sourcefilename="XmlInlineFlagDefinition.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/XmlInlineFlagDefinition;)V" line="174"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="189"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultValue" desc="()Ljava/lang/Object;" line="198"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInline" desc="()Z" line="203"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInlineInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagInstance;" line="209"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="220"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModuleScope" desc="()Lgov/nist/secauto/metaschema/core/model/ModuleScopeEnum;" line="225"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="230"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="235"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="240"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConstraintSupport" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;" line="250"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="255"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingModule" desc="()Lgov/nist/secauto/metaschema/core/model/IModule;" line="260"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/MarkupStringConverter" sourcefilename="MarkupStringConverter.java"><method name="toMarkupString" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/MarkupLineDatatype;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMarkupString" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/MarkupMultilineDatatype;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="76"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMarkupLineDatatype" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;)Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/MarkupLineDatatype;" line="82"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processHTML" desc="(Lorg/apache/xmlbeans/XmlTokenSource;)Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="6" covered="30"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="36"/><counter type="LINE" missed="7" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/ModuleLoader$2" sourcefilename="ModuleLoader.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/ModuleLoader;Ljava/net/URI;)V" line="208"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveEntity" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;" line="212"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/ModuleLoader$1" sourcefilename="ModuleLoader.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/ModuleLoader;)V" line="194"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveEntity" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;" line="198"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/IndentingXmlStreamWriter2" sourcefilename="IndentingXmlStreamWriter2.java"><method name="&lt;init&gt;" desc="(Lorg/codehaus/stax2/XMLStreamWriter2;)V" line="40"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIndentText" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIndentText" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLineEndText" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLineEndText" desc="(Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleStartElement" desc="()V" line="71"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStartElement" desc="(Ljava/lang/String;)V" line="84"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStartElement" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="90"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStartElement" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="98"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleEndElement" desc="()V" line="103"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeEndElement" desc="()V" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeFullEndElement" desc="()V" line="118"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleEmptyElement" desc="()V" line="124"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeEmptyElement" desc="(Ljava/lang/String;)V" line="134"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeEmptyElement" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="140"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeEmptyElement" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="146"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="189" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="54" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/ConstraintLoader" sourcefilename="ConstraintLoader.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseResource" desc="(Ljava/net/URI;Ljava/util/Deque;)Lgov/nist/secauto/metaschema/core/model/constraint/IConstraintSet;" line="77"><counter type="INSTRUCTION" missed="43" covered="31"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="10" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseConstraintSet" desc="(Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/METASCHEMACONSTRAINTSDocument;" line="115"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseScopedConstraints" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/METASCHEMACONSTRAINTSDocument;Ljava/net/URI;)Ljava/util/List;" line="137"><counter type="INSTRUCTION" missed="51" covered="87"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="9" covered="21"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="100" covered="141"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="21" covered="32"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/AssemblyConstraintSupport" sourcefilename="AssemblyConstraintSupport.java"><method name="newInstance" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalAssemblyDefinitionType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/xml/AssemblyConstraintSupport;" line="108"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="97"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/DefineAssemblyConstraintsType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)V" line="97"><counter type="INSTRUCTION" missed="4" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseXmlObject" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lorg/apache/xmlbeans/XmlObject;)Z" line="141"><counter type="INSTRUCTION" missed="55" covered="46"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="20" covered="17"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexConstraints" desc="()Ljava/util/List;" line="183"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUniqueConstraints" desc="()Ljava/util/List;" line="190"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHasCardinalityConstraints" desc="()Ljava/util/List;" line="197"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;)V" line="204"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint;)V" line="212"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;)V" line="220"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/DefineAssemblyConstraintsType;" line="227"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="89"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="162" covered="118"/><counter type="BRANCH" missed="10" covered="10"/><counter type="LINE" missed="44" covered="35"/><counter type="COMPLEXITY" missed="14" covered="8"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlbeansMarkupVisitor" sourcefilename="XmlbeansMarkupVisitor.java"><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/IMarkupString;Ljava/lang/String;Lorg/apache/xmlbeans/XmlObject;)V" line="64"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/datatype/markup/IMarkupString;Ljava/lang/String;Lorg/apache/xmlbeans/XmlCursor;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/vladsch/flexmark/parser/ListOptions;Lorg/apache/xmlbeans/XmlCursor;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeEmptyElement" desc="(Ljavax/xml/namespace/QName;Ljava/util/Map;)V" line="110"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeElementStart" desc="(Ljavax/xml/namespace/QName;Ljava/util/Map;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeElementEnd" desc="(Ljavax/xml/namespace/QName;)V" line="138"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeText" desc="(Ljava/lang/CharSequence;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeComment" desc="(Ljava/lang/CharSequence;)V" line="160"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$writeElementStart$1" desc="(Lorg/apache/xmlbeans/XmlCursor;Ljava/lang/String;Ljava/lang/String;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$writeEmptyElement$0" desc="(Lorg/apache/xmlbeans/XmlCursor;Ljava/lang/String;Ljava/lang/String;)V" line="113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="69"/><counter type="LINE" missed="12" covered="20"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlInlineAssemblyDefinition" sourcefilename="XmlInlineAssemblyDefinition.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/InlineAssemblyDefinitionType;Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="85"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlInlineAssemblyDefinition$InternalAssemblyDefinition;" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlAssembly" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/InlineAssemblyDefinitionType;" line="105"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="116"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="123"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupAsName" desc="()Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinOccurs" desc="()I" line="139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxOccurs" desc="()I" line="144"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonGroupAsBehavior" desc="()Lgov/nist/secauto/metaschema/core/model/JsonGroupAsBehavior;" line="149"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlGroupAsBehavior" desc="()Lgov/nist/secauto/metaschema/core/model/XmlGroupAsBehavior;" line="154"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="160"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="170"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="176"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemValues" desc="(Ljava/lang/Object;)Ljava/util/Collection;" line="183"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlFieldInstance" sourcefilename="XmlFieldInstance.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/FieldReferenceType;Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="67"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlField" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/FieldReferenceType;" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInXmlWrapped" desc="()Z" line="89"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="111"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupAsName" desc="()Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinOccurs" desc="()I" line="138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxOccurs" desc="()I" line="143"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonGroupAsBehavior" desc="()Lgov/nist/secauto/metaschema/core/model/JsonGroupAsBehavior;" line="148"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlGroupAsBehavior" desc="()Lgov/nist/secauto/metaschema/core/model/XmlGroupAsBehavior;" line="153"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="159"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="166"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemValues" desc="(Ljava/lang/Object;)Ljava/util/Collection;" line="173"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlModelContainerSupport" sourcefilename="XmlModelContainerSupport.java"><method name="&lt;init&gt;" desc="(Lorg/apache/xmlbeans/XmlObject;Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="68"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelInstances" desc="()Ljava/util/Collection;" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNamedModelInstanceMap" desc="()Ljava/util/Map;" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldInstanceMap" desc="()Ljava/util/Map;" line="113"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssemblyInstanceMap" desc="()Ljava/util/Map;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChoiceInstances" desc="()Ljava/util/List;" line="139"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getChoiceInstances$1" desc="(Lgov/nist/secauto/metaschema/core/model/IModelInstance;)Lgov/nist/secauto/metaschema/core/model/IChoiceInstance;" line="141"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getChoiceInstances$0" desc="(Lgov/nist/secauto/metaschema/core/model/IModelInstance;)Z" line="140"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlFlagContainerSupport" sourcefilename="XmlFlagContainerSupport.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalFieldDefinitionType;Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;)V" line="70"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/InlineFieldDefinitionType;Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;)V" line="90"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalAssemblyDefinitionType;Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;)V" line="110"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/InlineAssemblyDefinitionType;Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;)V" line="130"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlagInstanceMap" desc="()Ljava/util/Map;" line="148"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonKeyFlagInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagInstance;" line="153"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseLocalFlags" desc="(Lorg/apache/xmlbeans/XmlObject;Lgov/nist/secauto/metaschema/core/model/IFlagContainer;)Ljava/util/Map;" line="160"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="202" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/ValueConstraintSupport" sourcefilename="ValueConstraintSupport.java"><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/DefineFlagConstraintsType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)V" line="61"><counter type="INSTRUCTION" missed="4" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/DefineFieldConstraintsType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)V" line="61"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lorg/apache/xmlbeans/XmlCursor;Ljava/lang/String;)V" line="117"><counter type="INSTRUCTION" missed="34" covered="23"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseXmlObject" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lorg/apache/xmlbeans/XmlObject;)Z" line="139"><counter type="INSTRUCTION" missed="41" covered="18"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="13" covered="8"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstraints" desc="()Ljava/util/List;" line="165"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedValuesConstraints" desc="()Ljava/util/List;" line="172"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchesConstraints" desc="()Ljava/util/List;" line="179"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexHasKeyConstraints" desc="()Ljava/util/List;" line="186"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpectConstraints" desc="()Ljava/util/List;" line="193"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;)V" line="200"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;)V" line="208"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;)V" line="216"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;)V" line="224"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="158" covered="190"/><counter type="BRANCH" missed="14" covered="6"/><counter type="LINE" missed="35" covered="50"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlAssemblyInstance" sourcefilename="XmlAssemblyInstance.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/AssemblyReferenceType;Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="69"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlAssembly" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/AssemblyReferenceType;" line="79"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IAssemblyDefinition;" line="85"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="96"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="101"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupAsName" desc="()Ljava/lang/String;" line="123"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMinOccurs" desc="()I" line="128"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxOccurs" desc="()I" line="133"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonGroupAsBehavior" desc="()Lgov/nist/secauto/metaschema/core/model/JsonGroupAsBehavior;" line="138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlGroupAsBehavior" desc="()Lgov/nist/secauto/metaschema/core/model/XmlGroupAsBehavior;" line="143"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="149"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="155"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItemValues" desc="(Ljava/lang/Object;)Ljava/util/Collection;" line="162"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/AssemblyConstraintSupport$XmlbeanGeneratingVisitor" sourcefilename="AssemblyConstraintSupport.java"><method name="applyCommonValues" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ConstraintType;)V" line="241"><counter type="INSTRUCTION" missed="90" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAllowedValues" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/DefineAssemblyConstraintsType;)Ljava/lang/Void;" line="278"><counter type="INSTRUCTION" missed="96" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitCardinalityConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/DefineAssemblyConstraintsType;)Ljava/lang/Void;" line="312"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitExpectConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/DefineAssemblyConstraintsType;)Ljava/lang/Void;" line="337"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitMatchesConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/DefineAssemblyConstraintsType;)Ljava/lang/Void;" line="359"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyKeyFields" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IKeyConstraint;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/KeyConstraintType;)V" line="383"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyKeyField" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IKeyField;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/KeyConstraintType$KeyField;)V" line="392"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitIndexConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/DefineAssemblyConstraintsType;)Ljava/lang/Void;" line="409"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitIndexHasKeyConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/DefineAssemblyConstraintsType;)Ljava/lang/Void;" line="427"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitUniqueConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/DefineAssemblyConstraintsType;)Ljava/lang/Void;" line="445"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="237"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="523" covered="0"/><counter type="BRANCH" missed="86" covered="0"/><counter type="LINE" missed="140" covered="0"/><counter type="COMPLEXITY" missed="54" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlFlagInstance" sourcefilename="XmlFlagInstance.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/FlagReferenceType;Lgov/nist/secauto/metaschema/core/model/IFlagContainer;)V" line="61"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlFlag" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/FlagReferenceType;" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefinition" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagDefinition;" line="77"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="89"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="94"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="106"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRequired" desc="()Z" line="111"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="122"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/ModelFactory" sourcefilename="ModelFactory.java"><method name="target" desc="(Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;)Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;" line="84"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="level" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;)Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$Level;" line="89"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remarks" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/RemarksType;)Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toProperties" desc="(Ljava/util/List;)Ljava/util/Map;" line="100"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toAllowedValues" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/AllowedValuesType;)Ljava/util/Map;" line="115"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAllowedValuesConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ScopedAllowedValuesType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint;" line="130"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAllowedValuesConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/AllowedValuesType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint;" line="137"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newAllowedValuesConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/AllowedValuesType;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultAllowedValuesConstraint;" line="146"><counter type="INSTRUCTION" missed="15" covered="32"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyToBuilder" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ConstraintType;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;)Lgov/nist/secauto/metaschema/core/model/constraint/AbstractConstraint$AbstractConstraintBuilder;" line="172"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newMatchesConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ScopedMatchesConstraintType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultMatchesConstraint;" line="185"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatchesConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/MatchesConstraintType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultMatchesConstraint;" line="192"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatchesConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/MatchesConstraintType;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultMatchesConstraint;" line="200"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildKeyFields" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/KeyConstraintType;Lgov/nist/secauto/metaschema/core/model/constraint/AbstractKeyConstraint$AbstractKeyConstraintBuilder;)V" line="221"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newUniqueConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ScopedKeyConstraintType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultUniqueConstraint;" line="235"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newIndexConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ScopedIndexConstraintType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexConstraint;" line="252"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newIndexHasKeyConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ScopedIndexHasKeyConstraintType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexHasKeyConstraint;" line="270"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newIndexHasKeyConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/IndexHasKeyConstraintType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexHasKeyConstraint;" line="277"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newIndexHasKeyConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/IndexHasKeyConstraintType;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultIndexHasKeyConstraint;" line="286"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newExpectConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ScopedExpectConstraintType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultExpectConstraint;" line="304"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newExpectConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ExpectConstraintType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultExpectConstraint;" line="311"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newExpectConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ExpectConstraintType;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultExpectConstraint;" line="320"><counter type="INSTRUCTION" missed="15" covered="25"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCardinalityConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/HasCardinalityConstraintType;Lgov/nist/secauto/metaschema/core/model/constraint/IConstraint$ISource;)Lgov/nist/secauto/metaschema/core/model/constraint/DefaultCardinalityConstraint;" line="342"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toProperties$0" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/PropertyType;)Ljava/util/Map$Entry;" line="102"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="329" covered="138"/><counter type="BRANCH" missed="33" covered="11"/><counter type="LINE" missed="66" covered="33"/><counter type="COMPLEXITY" missed="34" covered="11"/><counter type="METHOD" missed="14" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/AbstractLoader" sourcefilename="AbstractLoader.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLoadedResources" desc="()Ljava/util/Collection;" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCachedEntries" desc="()Ljava/util/Map;" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="load" desc="(Ljava/net/URI;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="13" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/nio/file/Path;)Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/io/File;)Ljava/lang/Object;" line="126"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="load" desc="(Ljava/net/URL;)Ljava/lang/Object;" line="143"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadInternal" desc="(Ljava/net/URI;Ljava/util/Deque;)Ljava/lang/Object;" line="179"><counter type="INSTRUCTION" missed="18" covered="39"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$loadInternal$0" desc="(Ljava/net/URI;)Ljava/lang/String;" line="181"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="72" covered="73"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="12" covered="16"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/FieldTargetedConstraints" sourcefilename="FieldTargetedConstraints.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;)V" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="target" desc="(Lgov/nist/secauto/metaschema/core/model/IFieldDefinition;)V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlChoiceInstance" sourcefilename="XmlChoiceInstance.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ChoiceType;Lgov/nist/secauto/metaschema/core/model/IModelContainer;)V" line="64"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelContainer" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlModelContainerSupport;" line="71"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroupAsName" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlChoice" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ChoiceType;" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="93"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/ChoiceType;)Lgov/nist/secauto/metaschema/core/model/xml/XmlModelContainerSupport;" line="66"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlGlobalAssemblyDefinition" sourcefilename="XmlGlobalAssemblyDefinition.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalAssemblyDefinitionType;Lgov/nist/secauto/metaschema/core/model/xml/XmlModule;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlagContainer" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlFlagContainerSupport;" line="96"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelContainer" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlModelContainerSupport;" line="101"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConstraintSupport" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IModelConstrained;" line="106"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContainingModule" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlModule;" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXmlAssembly" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalAssemblyDefinitionType;" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="146"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="152"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRoot" desc="()Z" line="157"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootName" desc="()Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModuleScope" desc="()Lgov/nist/secauto/metaschema/core/model/ModuleScopeEnum;" line="168"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="174"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInline" desc="()Z" line="184"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInlineInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IAssemblyInstance;" line="190"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalAssemblyDefinitionType;Lgov/nist/secauto/metaschema/core/model/xml/XmlModule;)Lgov/nist/secauto/metaschema/core/model/xml/AssemblyConstraintSupport;" line="89"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalAssemblyDefinitionType;)Lgov/nist/secauto/metaschema/core/model/xml/XmlModelContainerSupport;" line="88"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalAssemblyDefinitionType;)Lgov/nist/secauto/metaschema/core/model/xml/XmlFlagContainerSupport;" line="87"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="91"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="9" covered="16"/><counter type="COMPLEXITY" missed="14" covered="12"/><counter type="METHOD" missed="10" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/ModuleLoader" sourcefilename="ModuleLoader.java"><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRegisteredConstraintSets" desc="()Ljava/util/Set;" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowEntityResolution" desc="()V" line="109"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newXmlMetaschema" desc="(Ljava/net/URI;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/METASCHEMADocument;Ljava/util/List;)Lgov/nist/secauto/metaschema/core/model/IModule;" line="130"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseResource" desc="(Ljava/net/URI;Ljava/util/Deque;)Lgov/nist/secauto/metaschema/core/model/IModule;" line="141"><counter type="INSTRUCTION" missed="12" covered="64"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseModule" desc="(Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/METASCHEMADocument;" line="182"><counter type="INSTRUCTION" missed="12" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="166"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="8" covered="43"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlInlineFieldDefinition$InternalFieldDefinition" sourcefilename="XmlInlineFieldDefinition.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/XmlInlineFieldDefinition;Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/InlineFieldDefinitionType;)V" line="217"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="245"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasJsonValueKeyFlagInstance" desc="()Z" line="250"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonValueKeyFlagInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagInstance;" line="255"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonValueKeyName" desc="()Ljava/lang/String;" line="264"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultValue" desc="()Ljava/lang/Object;" line="282"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInline" desc="()Z" line="287"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInlineInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IFieldInstance;" line="293"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="298"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="303"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="308"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModuleScope" desc="()Lgov/nist/secauto/metaschema/core/model/ModuleScopeEnum;" line="313"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="318"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="324"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlagContainer" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlFlagContainerSupport;" line="330"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConstraintSupport" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;" line="342"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="347"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingModule" desc="()Lgov/nist/secauto/metaschema/core/model/IModule;" line="352"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="358"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/InlineFieldDefinitionType;)Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;" line="226"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/InlineFieldDefinitionType;)Lgov/nist/secauto/metaschema/core/model/xml/XmlFlagContainerSupport;" line="223"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="188" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/model/xml/XmlGlobalFieldDefinition" sourcefilename="XmlGlobalFieldDefinition.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalFieldDefinitionType;Lgov/nist/secauto/metaschema/core/model/IModule;)V" line="77"><counter type="INSTRUCTION" missed="8" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlagContainer" desc="()Lgov/nist/secauto/metaschema/core/model/xml/XmlFlagContainerSupport;" line="108"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConstraintSupport" desc="()Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;" line="120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXmlField" desc="()Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalFieldDefinitionType;" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUseName" desc="()Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="4" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFormalName" desc="()Ljava/lang/String;" line="150"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescription" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupLine;" line="156"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="162"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaTypeAdapter" desc="()Lgov/nist/secauto/metaschema/core/datatype/IDataTypeAdapter;" line="168"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasJsonValueKeyFlagInstance" desc="()Z" line="173"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonValueKeyFlagInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IFlagInstance;" line="178"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJsonValueKeyName" desc="()Ljava/lang/String;" line="187"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModuleScope" desc="()Lgov/nist/secauto/metaschema/core/model/ModuleScopeEnum;" line="202"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRemarks" desc="()Lgov/nist/secauto/metaschema/core/datatype/markup/MarkupMultiline;" line="208"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="218"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingModule" desc="()Lgov/nist/secauto/metaschema/core/model/IModule;" line="223"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultValue" desc="()Ljava/lang/Object;" line="228"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInline" desc="()Z" line="234"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInlineInstance" desc="()Lgov/nist/secauto/metaschema/core/model/IFieldInstance;" line="240"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalFieldDefinitionType;Lgov/nist/secauto/metaschema/core/model/IModule;)Lgov/nist/secauto/metaschema/core/model/constraint/IValueConstrained;" line="88"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Lgov/nist/secauto/metaschema/core/model/xml/xmlbeans/GlobalFieldDefinitionType;)Lgov/nist/secauto/metaschema/core/model/xml/XmlFlagContainerSupport;" line="85"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="168" covered="53"/><counter type="BRANCH" missed="26" covered="4"/><counter type="LINE" missed="32" covered="13"/><counter type="COMPLEXITY" missed="31" covered="6"/><counter type="METHOD" missed="17" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="XmlInlineFlagDefinition.java"><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="2" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="10" ci="0" mb="2" cb="0"/><line nr="123" mi="10" ci="0" mb="2" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="11" ci="0" mb="2" cb="0"/><line nr="146" mi="11" ci="0" mb="2" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="2" cb="0"/><line nr="177" mi="9" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="12" ci="0" mb="2" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="250" mi="6" ci="0" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="190" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="43" covered="0"/><counter type="COMPLEXITY" missed="34" covered="0"/><counter type="METHOD" missed="27" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ConstraintLoader.java"><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="1"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="11" ci="0" mb="2" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="13" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="12" mb="0" cb="2"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="2"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="1" cb="1"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="3" ci="1" mb="2" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="162" mi="8" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="2" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="8" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="141"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="21" covered="32"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlModule.java"><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="1" cb="1"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="2"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="1" cb="1"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="2"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="2"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="8" mb="0" cb="2"/><line nr="160" mi="0" ci="6" mb="0" cb="2"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="10" ci="0" mb="2" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="252" mi="8" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="3" ci="0" mb="0" cb="0"/><line nr="278" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="232"/><counter type="BRANCH" missed="5" covered="19"/><counter type="LINE" missed="13" covered="57"/><counter type="COMPLEXITY" missed="12" covered="22"/><counter type="METHOD" missed="8" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlFieldInstance.java"><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="2" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="10" ci="0" mb="2" cb="0"/><line nr="111" mi="10" ci="0" mb="2" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="10" ci="0" mb="2" cb="0"/><line nr="133" mi="11" ci="0" mb="2" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="11" ci="0" mb="2" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ModelFactory.java"><line nr="84" mi="2" ci="4" mb="1" cb="1"/><line nr="89" mi="2" ci="4" mb="1" cb="1"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="8" ci="0" mb="2" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="1" cb="1"/><line nr="151" mi="8" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="1" cb="1"/><line nr="159" mi="7" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="1" cb="1"/><line nr="173" mi="7" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="7" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="2" cb="0"/><line nr="205" mi="8" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="0" mb="2" cb="0"/><line nr="209" mi="7" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="2" cb="0"/><line nr="212" mi="7" ci="0" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="11" ci="0" mb="2" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="7" ci="0" mb="2" cb="0"/><line nr="226" mi="10" ci="0" mb="2" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="1" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="8" ci="0" mb="0" cb="0"/><line nr="239" mi="3" ci="0" mb="2" cb="0"/><line nr="240" mi="8" ci="0" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="8" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="2" cb="0"/><line nr="257" mi="8" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="270" mi="7" ci="0" mb="0" cb="0"/><line nr="277" mi="5" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="288" mi="6" ci="0" mb="0" cb="0"/><line nr="290" mi="3" ci="0" mb="2" cb="0"/><line nr="291" mi="8" ci="0" mb="0" cb="0"/><line nr="294" mi="7" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="4" ci="0" mb="0" cb="0"/><line nr="304" mi="0" ci="7" mb="0" cb="0"/><line nr="311" mi="5" ci="0" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="1" cb="1"/><line nr="325" mi="8" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="1" cb="1"/><line nr="329" mi="7" ci="0" mb="0" cb="0"/><line nr="332" mi="0" ci="7" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="344" mi="8" ci="0" mb="0" cb="0"/><line nr="346" mi="3" ci="0" mb="2" cb="0"/><line nr="347" mi="8" ci="0" mb="0" cb="0"/><line nr="350" mi="3" ci="0" mb="2" cb="0"/><line nr="351" mi="6" ci="0" mb="0" cb="0"/><line nr="354" mi="3" ci="0" mb="2" cb="0"/><line nr="355" mi="6" ci="0" mb="0" cb="0"/><line nr="358" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="329" covered="138"/><counter type="BRANCH" missed="33" covered="11"/><counter type="LINE" missed="66" covered="33"/><counter type="COMPLEXITY" missed="34" covered="11"/><counter type="METHOD" missed="14" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlFlagInstance.java"><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="10" ci="0" mb="2" cb="0"/><line nr="89" mi="11" ci="0" mb="2" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="11" ci="0" mb="2" cb="0"/><line nr="111" mi="11" ci="0" mb="2" cb="0"/><line nr="116" mi="10" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FieldTargetedConstraints.java"><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XmlInlineFieldDefinition.java"><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="2" cb="0"/><line nr="118" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="10" ci="0" mb="2" cb="0"/><line nr="135" mi="10" ci="0" mb="2" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="11" ci="0" mb="2" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="11" ci="0" mb="2" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="5" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="2" cb="0"/><line nr="220" mi="8" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="12" ci="0" mb="0" cb="0"/><line nr="224" mi="6" ci="0" mb="0" cb="0"/><line nr="226" mi="3" ci="0" mb="2" cb="0"/><line nr="227" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="245" mi="12" ci="0" mb="2" cb="0"/><line nr="250" mi="15" ci="0" mb="4" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="256" mi="11" ci="0" mb="4" cb="0"/><line nr="257" mi="10" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="5" ci="0" mb="2" cb="0"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="270" mi="5" ci="0" mb="4" cb="0"/><line nr="271" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="308" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="324" mi="2" ci="0" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="4" ci="0" mb="0" cb="0"/><line nr="352" mi="5" ci="0" mb="0" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="313" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="68" covered="0"/><counter type="COMPLEXITY" missed="55" covered="0"/><counter type="METHOD" missed="39" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="XmlGlobalFieldDefinition.java"><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="1" cb="1"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="6" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="4" ci="6" mb="1" cb="1"/><line nr="150" mi="10" ci="0" mb="2" cb="0"/><line nr="156" mi="10" ci="0" mb="2" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="10" ci="0" mb="2" cb="0"/><line nr="173" mi="13" ci="0" mb="4" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="9" ci="0" mb="4" cb="0"/><line nr="180" mi="9" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="2" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="4" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="10" mb="0" cb="2"/><line nr="208" mi="11" ci="0" mb="2" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="168" covered="53"/><counter type="BRANCH" missed="26" covered="4"/><counter type="LINE" missed="32" covered="13"/><counter type="COMPLEXITY" missed="31" covered="6"/><counter type="METHOD" missed="17" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlGlobalAssemblyDefinition.java"><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="6" ci="8" mb="0" cb="0"/><line nr="88" mi="6" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="7" ci="0" mb="0" cb="0"/><line nr="101" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="10" mb="0" cb="2"/><line nr="140" mi="10" ci="0" mb="2" cb="0"/><line nr="146" mi="10" ci="0" mb="2" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="1" ci="9" mb="1" cb="1"/><line nr="168" mi="0" ci="10" mb="0" cb="2"/><line nr="174" mi="11" ci="0" mb="2" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="91"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="9" covered="16"/><counter type="COMPLEXITY" missed="14" covered="12"/><counter type="METHOD" missed="10" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MarkupStringConverter.java"><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="36"/><counter type="LINE" missed="7" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ValueConstraintSupport.java"><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="5" ci="10" mb="0" cb="0"/><line nr="63" mi="5" ci="10" mb="0" cb="0"/><line nr="65" mi="5" ci="10" mb="0" cb="0"/><line nr="67" mi="5" ci="10" mb="0" cb="0"/><line nr="69" mi="5" ci="10" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="4" ci="3" mb="1" cb="1"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="7" ci="0" mb="2" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="3" mb="1" cb="1"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="4" ci="3" mb="1" cb="1"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="2" cb="0"/><line nr="126" mi="8" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="1" cb="1"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="3" ci="1" mb="2" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="2" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="2" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="5" ci="0" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="158" covered="190"/><counter type="BRANCH" missed="14" covered="6"/><counter type="LINE" missed="35" covered="50"/><counter type="COMPLEXITY" missed="12" covered="13"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssemblyConstraintSupport.java"><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="5" ci="5" mb="0" cb="0"/><line nr="99" mi="5" ci="5" mb="0" cb="0"/><line nr="101" mi="5" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="1" cb="1"/><line nr="109" mi="0" ci="10" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="4" ci="3" mb="1" cb="1"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="1" cb="1"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="3" mb="1" cb="1"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="3" mb="1" cb="1"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="3" mb="1" cb="1"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="3" mb="1" cb="1"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="3" mb="1" cb="1"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="11" ci="0" mb="2" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="2" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="246" mi="2" ci="0" mb="2" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="3" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="2" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="4" ci="0" mb="2" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="12" ci="0" mb="2" cb="0"/><line nr="261" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="10" ci="0" mb="2" cb="0"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="5" ci="0" mb="4" cb="0"/><line nr="269" mi="3" ci="0" mb="0" cb="0"/><line nr="271" mi="3" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="273" mi="1" ci="0" mb="0" cb="0"/><line nr="274" mi="1" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="279" mi="7" ci="0" mb="2" cb="0"/><line nr="280" mi="3" ci="0" mb="0" cb="0"/><line nr="282" mi="5" ci="0" mb="2" cb="0"/><line nr="283" mi="5" ci="0" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="12" ci="0" mb="2" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="10" ci="0" mb="2" cb="0"/><line nr="294" mi="3" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="3" ci="0" mb="0" cb="0"/><line nr="302" mi="2" ci="0" mb="2" cb="0"/><line nr="303" mi="3" ci="0" mb="0" cb="0"/><line nr="304" mi="7" ci="0" mb="2" cb="0"/><line nr="305" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="312" mi="3" ci="0" mb="0" cb="0"/><line nr="313" mi="7" ci="0" mb="2" cb="0"/><line nr="314" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="3" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="2" cb="0"/><line nr="318" mi="6" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="2" ci="0" mb="2" cb="0"/><line nr="323" mi="6" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="2" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="7" ci="0" mb="2" cb="0"/><line nr="330" mi="4" ci="0" mb="0" cb="0"/><line nr="332" mi="2" ci="0" mb="0" cb="0"/><line nr="337" mi="3" ci="0" mb="0" cb="0"/><line nr="338" mi="7" ci="0" mb="2" cb="0"/><line nr="339" mi="3" ci="0" mb="0" cb="0"/><line nr="341" mi="4" ci="0" mb="0" cb="0"/><line nr="343" mi="3" ci="0" mb="0" cb="0"/><line nr="344" mi="2" ci="0" mb="2" cb="0"/><line nr="345" mi="3" ci="0" mb="0" cb="0"/><line nr="348" mi="3" ci="0" mb="0" cb="0"/><line nr="349" mi="2" ci="0" mb="2" cb="0"/><line nr="350" mi="3" ci="0" mb="0" cb="0"/><line nr="351" mi="7" ci="0" mb="2" cb="0"/><line nr="352" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="2" ci="0" mb="0" cb="0"/><line nr="359" mi="3" ci="0" mb="0" cb="0"/><line nr="360" mi="7" ci="0" mb="2" cb="0"/><line nr="361" mi="3" ci="0" mb="0" cb="0"/><line nr="363" mi="3" ci="0" mb="0" cb="0"/><line nr="364" mi="2" ci="0" mb="2" cb="0"/><line nr="365" mi="3" ci="0" mb="0" cb="0"/><line nr="368" mi="3" ci="0" mb="0" cb="0"/><line nr="369" mi="2" ci="0" mb="2" cb="0"/><line nr="370" mi="3" ci="0" mb="0" cb="0"/><line nr="373" mi="3" ci="0" mb="0" cb="0"/><line nr="374" mi="2" ci="0" mb="2" cb="0"/><line nr="375" mi="3" ci="0" mb="0" cb="0"/><line nr="376" mi="7" ci="0" mb="2" cb="0"/><line nr="377" mi="4" ci="0" mb="0" cb="0"/><line nr="379" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="11" ci="0" mb="2" cb="0"/><line nr="384" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="7" ci="0" mb="2" cb="0"/><line nr="386" mi="7" ci="0" mb="2" cb="0"/><line nr="387" mi="3" ci="0" mb="0" cb="0"/><line nr="388" mi="1" ci="0" mb="0" cb="0"/><line nr="389" mi="1" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="2" cb="0"/><line nr="394" mi="3" ci="0" mb="0" cb="0"/><line nr="397" mi="4" ci="0" mb="0" cb="0"/><line nr="399" mi="3" ci="0" mb="0" cb="0"/><line nr="400" mi="2" ci="0" mb="2" cb="0"/><line nr="401" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="7" ci="0" mb="2" cb="0"/><line nr="403" mi="4" ci="0" mb="0" cb="0"/><line nr="405" mi="1" ci="0" mb="0" cb="0"/><line nr="409" mi="3" ci="0" mb="0" cb="0"/><line nr="410" mi="7" ci="0" mb="2" cb="0"/><line nr="411" mi="3" ci="0" mb="0" cb="0"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="4" ci="0" mb="0" cb="0"/><line nr="416" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="2" ci="0" mb="2" cb="0"/><line nr="418" mi="3" ci="0" mb="0" cb="0"/><line nr="419" mi="7" ci="0" mb="2" cb="0"/><line nr="420" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="2" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="0" cb="0"/><line nr="428" mi="7" ci="0" mb="2" cb="0"/><line nr="429" mi="3" ci="0" mb="0" cb="0"/><line nr="430" mi="3" ci="0" mb="0" cb="0"/><line nr="432" mi="4" ci="0" mb="0" cb="0"/><line nr="434" mi="3" ci="0" mb="0" cb="0"/><line nr="435" mi="2" ci="0" mb="2" cb="0"/><line nr="436" mi="3" ci="0" mb="0" cb="0"/><line nr="437" mi="7" ci="0" mb="2" cb="0"/><line nr="438" mi="4" ci="0" mb="0" cb="0"/><line nr="440" mi="2" ci="0" mb="0" cb="0"/><line nr="445" mi="3" ci="0" mb="0" cb="0"/><line nr="446" mi="7" ci="0" mb="2" cb="0"/><line nr="447" mi="3" ci="0" mb="0" cb="0"/><line nr="448" mi="3" ci="0" mb="0" cb="0"/><line nr="450" mi="3" ci="0" mb="0" cb="0"/><line nr="451" mi="2" ci="0" mb="2" cb="0"/><line nr="452" mi="3" ci="0" mb="0" cb="0"/><line nr="453" mi="7" ci="0" mb="2" cb="0"/><line nr="454" mi="4" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="685" covered="118"/><counter type="BRANCH" missed="96" covered="10"/><counter type="LINE" missed="184" covered="35"/><counter type="COMPLEXITY" missed="68" covered="8"/><counter type="METHOD" missed="16" covered="7"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="XmlInlineAssemblyDefinition.java"><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="10" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="2" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="11" ci="0" mb="2" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="11" ci="0" mb="2" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="5" ci="0" mb="0" cb="0"/><line nr="200" mi="13" ci="0" mb="0" cb="0"/><line nr="201" mi="13" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="2" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="245" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><line nr="286" mi="5" ci="0" mb="0" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="216" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="35" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="XmlChoiceInstance.java"><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="14" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XmlbeansMarkupVisitor.java"><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="69"/><counter type="LINE" missed="12" covered="20"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlModelContainerSupport.java"><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="2" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ModuleLoader.java"><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="2"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="12" mb="0" cb="2"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="9" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="2"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="12" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="17" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="1" cb="1"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="228" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="202"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="9" covered="48"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="AbstractLoader.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="1" cb="1"/><line nr="92" mi="13" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="12" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="9" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="1" cb="1"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="13" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="2"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="1" cb="1"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="73"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="12" covered="16"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IndentingXmlStreamWriter2.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="2" cb="0"/><line nr="72" mi="11" ci="0" mb="0" cb="0"/><line nr="75" mi="9" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="9" ci="0" mb="2" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="8" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="2" cb="0"/><line nr="125" mi="11" ci="0" mb="0" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="189" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="54" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XmlAssemblyInstance.java"><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="10" ci="0" mb="2" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="2" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="2" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="10" ci="0" mb="2" cb="0"/><line nr="123" mi="11" ci="0" mb="2" cb="0"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="11" ci="0" mb="2" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FlagTargetedConstraints.java"><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XmlFlagContainerSupport.java"><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="4" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="14" ci="0" mb="2" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="4" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="14" ci="0" mb="2" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="8" ci="0" mb="4" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="14" ci="0" mb="2" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="8" ci="0" mb="4" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="14" ci="0" mb="2" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="2" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="2" cb="0"/><line nr="168" mi="7" ci="0" mb="0" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="2" cb="0"/><line nr="171" mi="7" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="8" ci="0" mb="2" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="202" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XmlModelParser.java"><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="2" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="2" cb="0"/><line nr="115" mi="7" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="2" cb="0"/><line nr="121" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="2" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="2" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="2" cb="0"/><line nr="139" mi="7" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="8" ci="0" mb="2" cb="0"/><line nr="169" mi="8" ci="0" mb="2" cb="0"/><line nr="175" mi="8" ci="0" mb="2" cb="0"/><line nr="181" mi="8" ci="0" mb="2" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="4" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="4" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="2" ci="0" mb="2" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="2" cb="0"/><line nr="213" mi="3" ci="0" mb="2" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="2" cb="0"/><line nr="217" mi="5" ci="0" mb="0" cb="0"/><line nr="219" mi="8" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="318" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="81" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="XmlGlobalFlagDefinition.java"><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="1" cb="1"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="1" cb="1"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="2"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="1" cb="1"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="10" ci="0" mb="2" cb="0"/><line nr="160" mi="11" ci="0" mb="2" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="171" mi="10" ci="0" mb="2" cb="0"/><line nr="177" mi="11" ci="0" mb="2" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="80"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="10" covered="23"/><counter type="COMPLEXITY" missed="15" covered="9"/><counter type="METHOD" missed="8" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssemblyTargetedConstraints.java"><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="4" ci="5" mb="0" cb="0"/><line nr="91" mi="4" ci="5" mb="0" cb="0"/><line nr="92" mi="4" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="43"/><counter type="LINE" missed="6" covered="12"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="3706" covered="1466"/><counter type="BRANCH" missed="372" covered="78"/><counter type="LINE" missed="848" covered="365"/><counter type="COMPLEXITY" missed="497" covered="120"/><counter type="METHOD" missed="294" covered="98"/><counter type="CLASS" missed="17" covered="15"/></package><package name="gov/nist/secauto/metaschema/core/metapath"><class name="gov/nist/secauto/metaschema/core/metapath/RootSlashOnlyPath" sourcefilename="RootSlashOnlyPath.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="63"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$1" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="27"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/StreamSequenceImpl" sourcefilename="StreamSequenceImpl.java"><method name="&lt;init&gt;" desc="(Ljava/util/stream/Stream;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asList" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="4" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asStream" desc="()Ljava/util/stream/Stream;" line="68"><counter type="INSTRUCTION" missed="15" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forEach" desc="(Ljava/util/function/Consumer;)V" line="85"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collect" desc="()V" line="100"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="107"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="113"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="64"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="11" covered="19"/><counter type="COMPLEXITY" missed="13" covered="6"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractComparison" sourcefilename="AbstractComparison.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="()Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toASTString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="111"><counter type="INSTRUCTION" missed="84" covered="44"/><counter type="BRANCH" missed="20" covered="8"/><counter type="LINE" missed="11" covered="7"/><counter type="COMPLEXITY" missed="12" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringCompare" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IStringItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="150"><counter type="INSTRUCTION" missed="13" covered="50"/><counter type="BRANCH" missed="1" covered="6"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numericCompare" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="192"><counter type="INSTRUCTION" missed="69" covered="12"/><counter type="BRANCH" missed="14" covered="1"/><counter type="LINE" missed="15" covered="4"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="booleanCompare" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="239"><counter type="INSTRUCTION" missed="15" covered="66"/><counter type="BRANCH" missed="5" covered="10"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dateTimeCompare" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateTimeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="286"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="15" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dateCompare" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDateItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="333"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="15" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="durationCompare" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDurationItem;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IDurationItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="381"><counter type="INSTRUCTION" missed="220" covered="0"/><counter type="BRANCH" missed="57" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="32" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="binaryCompare" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBase64BinaryItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="471"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="15" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="660" covered="186"/><counter type="BRANCH" missed="142" covered="25"/><counter type="LINE" missed="126" covered="47"/><counter type="COMPLEXITY" missed="94" covered="18"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/StringConcat" sourcefilename="StringConcat.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="58"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="69"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accept$0" desc="(Ljava/lang/StringBuilder;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)V" line="74"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/ILiteralExpression" sourcefilename="ILiteralExpression.java"><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractNAryExpression" sourcefilename="AbstractNAryExpression.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Division" sourcefilename="Division.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="operation" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divide" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="87"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="119" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Modulo" sourcefilename="Modulo.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="49"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="54"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="64"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultOrEmpty" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="83"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Multiplication" sourcefilename="Multiplication.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="operation" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="71"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiply" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="86"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Name" sourcefilename="Name.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="64"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="81"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Z" line="87"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toASTString" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accept$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/MetapathExpression$ResultType" sourcefilename="MetapathExpression.java"><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/IDocumentLoader" sourcefilename="IDocumentLoader.java"><method name="loadAsNodeItem" desc="(Ljava/io/File;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="50"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadAsNodeItem" desc="(Ljava/nio/file/Path;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="55"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadAsNodeItem" desc="(Ljava/net/URL;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/IComparison$Operator" sourcefilename="IComparison.java"><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractNamedInstanceExpression" sourcefilename="AbstractNamedInstanceExpression.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTest" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/SingletonSequenceImpl" sourcefilename="SingletonSequenceImpl.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/IItem;" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asList" desc="()Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asStream" desc="()Ljava/util/stream/Stream;" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="64"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="74"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="()V" line="80"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Ljava/util/function/Consumer;)V" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="91"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="97"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="34"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/StaticContext$Builder" sourcefilename="StaticContext.java"><method name="&lt;init&gt;" desc="()V" line="92"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="baseUri" desc="(Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/metapath/StaticContext$Builder;" line="121"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namespace" desc="(Ljava/lang/String;Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/metapath/StaticContext$Builder;" line="127"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lgov/nist/secauto/metaschema/core/metapath/StaticContext;" line="133"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="46"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/ExpressionUtils" sourcefilename="ExpressionUtils.java"><method name="analyzeStaticResultType" desc="(Ljava/lang/Class;Ljava/util/List;)Ljava/lang/Class;" line="48"><counter type="INSTRUCTION" missed="5" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findCommonBase" desc="(Ljava/lang/Class;Ljava/util/List;)Ljava/lang/Class;" line="70"><counter type="INSTRUCTION" missed="10" covered="50"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCommonBaseClass" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;)Ljava/lang/Class;" line="103"><counter type="INSTRUCTION" missed="6" covered="61"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkDerivedFrom" desc="(Ljava/lang/Class;Ljava/util/List;)Z" line="132"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$analyzeStaticResultType$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Ljava/lang/Class;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="158"/><counter type="BRANCH" missed="10" covered="22"/><counter type="LINE" missed="5" covered="46"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/IPathExpression" sourcefilename="IPathExpression.java"/><class name="gov/nist/secauto/metaschema/core/metapath/Step" sourcefilename="Step.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/Axis;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAxis" desc="()Lgov/nist/secauto/metaschema/core/metapath/Axis;" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStep" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="83"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="88"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="99"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toASTString" desc="()Ljava/lang/String;" line="106"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="33"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/IExpressionVisitor" sourcefilename="IExpressionVisitor.java"/><class name="gov/nist/secauto/metaschema/core/metapath/AbstractArithmeticExpression" sourcefilename="AbstractArithmeticExpression.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;Ljava/lang/Class;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="12"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Or" sourcefilename="Or.java"><method name="&lt;init&gt;" desc="([Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="66"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Metapath" sourcefilename="Metapath.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="50"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="56"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="66"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accept$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Ljava/util/stream/Stream;" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Predicate" sourcefilename="Predicate.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Ljava/util/List;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBase" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredicates" desc="()Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="91"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="134"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accept$4" desc="(Ljava/util/Map$Entry;)Lgov/nist/secauto/metaschema/core/metapath/item/IItem;" line="125"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$3" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Ljava/util/Map$Entry;)Z" line="103"><counter type="INSTRUCTION" missed="1" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$2" desc="(Ljava/lang/Boolean;)Z" line="124"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accept$1" desc="(Ljava/util/Map$Entry;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Ljava/lang/Boolean;" line="109"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accept$0" desc="(Ljava/util/concurrent/atomic/AtomicInteger;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Ljava/util/Map$Entry;" line="100"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="61" covered="75"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="13" covered="19"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/RelativeSlashPath" sourcefilename="RelativeSlashPath.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="47"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/ValueComparison" sourcefilename="ValueComparison.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="59"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resultOrEmpty" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="78"><counter type="INSTRUCTION" missed="3" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueCompairison" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="101"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/RootDoubleSlashPath" sourcefilename="RootDoubleSlashPath.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/GeneralComparison" sourcefilename="GeneralComparison.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="65"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueCompairison" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;Lgov/nist/secauto/metaschema/core/metapath/IComparison$Operator;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IBooleanItem;" line="87"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyGeneralComparisonCast" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="133"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="152" covered="7"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="35" covered="3"/><counter type="COMPLEXITY" missed="16" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/BuildAstVisitor$ITriFunction" sourcefilename="BuildAstVisitor.java"><method name="andThen" desc="(Ljava/util/function/Function;)Lgov/nist/secauto/metaschema/core/metapath/BuildAstVisitor$ITriFunction;" line="767"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$andThen$0" desc="(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="768"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractExpression" sourcefilename="AbstractExpression.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirstDataItem" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;Z)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="55"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractRelativePathExpression" sourcefilename="AbstractRelativePathExpression.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRight" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="82"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="87"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="28"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractRootPathExpression" sourcefilename="AbstractRootPathExpression.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpression" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="66"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="77"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="15"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/FailingErrorListener" sourcefilename="FailingErrorListener.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="syntaxError" desc="(Lorg/antlr/v4/runtime/Recognizer;Ljava/lang/Object;IILjava/lang/String;Lorg/antlr/v4/runtime/RecognitionException;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Union" sourcefilename="Union.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="67"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accept$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Ljava/util/stream/Stream;" line="70"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractAstVisitor" sourcefilename="AbstractAstVisitor.java"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Lorg/antlr/v4/runtime/RuleContext;Ljava/util/function/Function;)Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="passThrough" desc="(Lorg/antlr/v4/runtime/RuleContext;)Ljava/lang/Object;" line="128"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitMetapath" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MetapathContext;)Ljava/lang/Object;" line="136"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitExpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprContext;)Ljava/lang/Object;" line="152"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitExprsingle" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprsingleContext;)Ljava/lang/Object;" line="157"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitOrexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$OrexprContext;)Ljava/lang/Object;" line="173"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAndexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AndexprContext;)Ljava/lang/Object;" line="188"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitComparisonexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ComparisonexprContext;)Ljava/lang/Object;" line="203"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitStringconcatexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StringconcatexprContext;)Ljava/lang/Object;" line="218"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAdditiveexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AdditiveexprContext;)Ljava/lang/Object;" line="233"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitMultiplicativeexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MultiplicativeexprContext;)Ljava/lang/Object;" line="248"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitUnionexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnionexprContext;)Ljava/lang/Object;" line="263"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIntersectexceptexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$IntersectexceptexprContext;)Ljava/lang/Object;" line="278"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitArrowexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowexprContext;)Ljava/lang/Object;" line="293"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitUnaryexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnaryexprContext;)Ljava/lang/Object;" line="308"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitValueexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ValueexprContext;)Ljava/lang/Object;" line="313"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitGeneralcomp" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$GeneralcompContext;)Ljava/lang/Object;" line="320"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitValuecomp" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ValuecompContext;)Ljava/lang/Object;" line="326"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPathexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PathexprContext;)Ljava/lang/Object;" line="341"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitRelativepathexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$RelativepathexprContext;)Ljava/lang/Object;" line="356"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitStepexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StepexprContext;)Ljava/lang/Object;" line="361"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAxisstep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AxisstepContext;)Ljava/lang/Object;" line="377"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitForwardstep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardstepContext;)Ljava/lang/Object;" line="392"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitForwardaxis" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardaxisContext;)Ljava/lang/Object;" line="398"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAbbrevforwardstep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevforwardstepContext;)Ljava/lang/Object;" line="413"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReversestep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReversestepContext;)Ljava/lang/Object;" line="428"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReverseaxis" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReverseaxisContext;)Ljava/lang/Object;" line="434"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAbbrevreversestep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevreversestepContext;)Ljava/lang/Object;" line="449"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNametest" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NametestContext;)Ljava/lang/Object;" line="454"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWildcard" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$WildcardContext;)Ljava/lang/Object;" line="470"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPostfixexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PostfixexprContext;)Ljava/lang/Object;" line="485"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitArgumentlist" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentlistContext;)Ljava/lang/Object;" line="491"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPredicatelist" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicatelistContext;)Ljava/lang/Object;" line="497"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPredicate" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicateContext;)Ljava/lang/Object;" line="503"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPrimaryexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PrimaryexprContext;)Ljava/lang/Object;" line="508"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLiteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LiteralContext;)Ljava/lang/Object;" line="524"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNumericliteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NumericliteralContext;)Ljava/lang/Object;" line="539"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitParenthesizedexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ParenthesizedexprContext;)Ljava/lang/Object;" line="544"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitContextitemexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ContextitemexprContext;)Ljava/lang/Object;" line="559"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFunctioncall" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$FunctioncallContext;)Ljava/lang/Object;" line="574"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitArgument" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentContext;)Ljava/lang/Object;" line="579"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitEqname" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$EqnameContext;)Ljava/lang/Object;" line="595"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLetexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LetexprContext;)Ljava/lang/Object;" line="602"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitSimpleletclause" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$SimpleletclauseContext;)Ljava/lang/Object;" line="609"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitSimpleletbinding" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$SimpleletbindingContext;)Ljava/lang/Object;" line="615"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitArrowfunctionspecifier" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowfunctionspecifierContext;)Ljava/lang/Object;" line="621"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitVarref" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarrefContext;)Ljava/lang/Object;" line="628"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitVarname" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarnameContext;)Ljava/lang/Object;" line="634"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visitFunctioncall$20" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$FunctioncallContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$FunctioncallContext;)Ljava/lang/Object;" line="574"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitContextitemexpr$19" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ContextitemexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ContextitemexprContext;)Ljava/lang/Object;" line="559"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitNumericliteral$18" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NumericliteralContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NumericliteralContext;)Ljava/lang/Object;" line="539"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitLiteral$17" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LiteralContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LiteralContext;)Ljava/lang/Object;" line="524"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visitPostfixexpr$16" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PostfixexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PostfixexprContext;)Ljava/lang/Object;" line="485"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visitReversestep$15" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReversestepContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReversestepContext;)Ljava/lang/Object;" line="428"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitForwardstep$14" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardstepContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardstepContext;)Ljava/lang/Object;" line="392"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitAxisstep$13" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AxisstepContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AxisstepContext;)Ljava/lang/Object;" line="377"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitRelativepathexpr$12" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$RelativepathexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$RelativepathexprContext;)Ljava/lang/Object;" line="356"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitPathexpr$11" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PathexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PathexprContext;)Ljava/lang/Object;" line="341"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitUnaryexpr$10" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnaryexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnaryexprContext;)Ljava/lang/Object;" line="308"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visitArrowexpr$9" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowexprContext;)Ljava/lang/Object;" line="293"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visitIntersectexceptexpr$8" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$IntersectexceptexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$IntersectexceptexprContext;)Ljava/lang/Object;" line="278"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visitUnionexpr$7" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnionexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnionexprContext;)Ljava/lang/Object;" line="263"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visitMultiplicativeexpr$6" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MultiplicativeexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MultiplicativeexprContext;)Ljava/lang/Object;" line="248"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visitAdditiveexpr$5" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AdditiveexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AdditiveexprContext;)Ljava/lang/Object;" line="233"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitStringconcatexpr$4" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StringconcatexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StringconcatexprContext;)Ljava/lang/Object;" line="218"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$visitComparisonexpr$3" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ComparisonexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ComparisonexprContext;)Ljava/lang/Object;" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitAndexpr$2" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AndexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AndexprContext;)Ljava/lang/Object;" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitOrexpr$1" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$OrexprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$OrexprContext;)Ljava/lang/Object;" line="173"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$visitExpr$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprContext;Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprContext;)Ljava/lang/Object;" line="152"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="161" covered="286"/><counter type="BRANCH" missed="16" covered="10"/><counter type="LINE" missed="22" covered="43"/><counter type="COMPLEXITY" missed="36" covered="48"/><counter type="METHOD" missed="25" covered="46"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Negate" sourcefilename="Negate.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="51"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="72"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/RelativeDoubleSlashPath" sourcefilename="RelativeDoubleSlashPath.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="51"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/IBooleanLogicExpression" sourcefilename="IBooleanLogicExpression.java"><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="34"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractFilterExpression" sourcefilename="AbstractFilterExpression.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="51"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="65"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/ISequence$1" sourcefilename="ISequence.java"><method name="&lt;init&gt;" desc="()V" line="182"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supplier" desc="()Ljava/util/function/Supplier;" line="186"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulator" desc="()Ljava/util/function/BiConsumer;" line="191"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combiner" desc="()Ljava/util/function/BinaryOperator;" line="196"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finisher" desc="()Ljava/util/function/Function;" line="204"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="characteristics" desc="()Ljava/util/Set;" line="219"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$finisher$2" desc="(Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="206"><counter type="INSTRUCTION" missed="9" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$combiner$1" desc="(Ljava/util/List;Ljava/util/List;)Ljava/util/List;" line="197"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accumulator$0" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/BuildAstVisitor" sourcefilename="BuildAstVisitor.java"><method name="&lt;init&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/antlr/v4/runtime/tree/ParseTree;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleNAiryCollection" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/util/function/Function;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="123"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleNAiryCollection" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;IILjava/util/function/BiFunction;Ljava/util/function/Function;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="166"><counter type="INSTRUCTION" missed="13" covered="65"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleGroupedNAiry" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;IILgov/nist/secauto/metaschema/core/metapath/BuildAstVisitor$ITriFunction;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="222"><counter type="INSTRUCTION" missed="18" covered="45"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleExpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ExprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="245"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleOrexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$OrexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="253"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleAndexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AndexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="261"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleComparisonexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ComparisonexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="269"><counter type="INSTRUCTION" missed="28" covered="108"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="3" covered="41"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleStringconcatexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$StringconcatexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="340"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAdditiveexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AdditiveexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="348"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleMultiplicativeexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MultiplicativeexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="375"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleUnionexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnionexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="407"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleIntersectexceptexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$IntersectexceptexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="415"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleArrowexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="445"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleUnaryexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$UnaryexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="463"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="9" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handlePathexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PathexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="492"><counter type="INSTRUCTION" missed="40" covered="38"/><counter type="BRANCH" missed="6" covered="3"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleRelativepathexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$RelativepathexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="528"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parsePredicate" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PredicateContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="557"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parsePredicates" desc="(Lorg/antlr/v4/runtime/tree/ParseTree;I)Ljava/util/List;" line="563"><counter type="INSTRUCTION" missed="41" covered="14"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlePostfixexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$PostfixexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="587"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAxisstep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AxisstepContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="602"><counter type="INSTRUCTION" missed="13" covered="28"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleForwardstep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ForwardstepContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="615"><counter type="INSTRUCTION" missed="19" covered="30"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="7" covered="6"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleAbbrevforwardstep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevforwardstepContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="641"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleReversestep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ReversestepContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="658"><counter type="INSTRUCTION" missed="16" covered="30"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleAbbrevreversestep" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AbbrevreversestepContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="681"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleStringLiteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LiteralContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="686"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleNumericLiteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$NumericliteralContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="692"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="2" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleContextitemexpr" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ContextitemexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="711"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseArgumentList" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentlistContext;)Ljava/util/stream/Stream;" line="716"><counter type="INSTRUCTION" missed="11" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleFunctioncall" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$FunctioncallContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="735"><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleEqname" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$EqnameContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="748"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleWildcard" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$WildcardContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="758"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleLet" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$LetexprContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="774"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleVarref" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$VarrefContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="796"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$parseArgumentList$11" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArgumentContext;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="725"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$handleRelativepathexpr$10" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$RelativepathexprContext;Ljava/lang/Integer;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="529"><counter type="INSTRUCTION" missed="23" covered="39"/><counter type="BRANCH" missed="4" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$handleArrowexpr$9" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$ArrowexprContext;Ljava/lang/Integer;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="447"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$handleIntersectexceptexpr$8" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$IntersectexceptexprContext;Ljava/lang/Integer;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="416"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$handleUnionexpr$7" desc="(Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="408"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$handleMultiplicativeexpr$6" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$MultiplicativeexprContext;Ljava/lang/Integer;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="376"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="9" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$handleAdditiveexpr$5" desc="(Lgov/nist/secauto/metaschema/core/metapath/antlr/metapath10Parser$AdditiveexprContext;Ljava/lang/Integer;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="349"><counter type="INSTRUCTION" missed="23" covered="39"/><counter type="BRANCH" missed="4" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$handleStringconcatexpr$4" desc="(Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="341"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$handleAndexpr$3" desc="(Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="262"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$handleOrexpr$2" desc="(Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="254"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$handleExpr$1" desc="(Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="246"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$handleNAiryCollection$0" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/Integer;)Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="125"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="758" covered="633"/><counter type="BRANCH" missed="97" covered="51"/><counter type="LINE" missed="145" covered="166"/><counter type="COMPLEXITY" missed="91" covered="43"/><counter type="METHOD" missed="19" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Except" sourcefilename="Except.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyFilterTo" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="44"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$applyFilterTo$0" desc="(Ljava/util/List;Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Z" line="45"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/ModelInstance" sourcefilename="ModelInstance.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="55"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="67"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="87"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$1" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="70"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="45"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/TypeMetapathException" sourcefilename="TypeMetapathException.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/lang/Throwable;)V" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/Throwable;)V" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCodePrefix" desc="()Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Addition" sourcefilename="Addition.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="operation" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sum" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="89"><counter type="INSTRUCTION" missed="122" covered="28"/><counter type="BRANCH" missed="25" covered="5"/><counter type="LINE" missed="28" covered="10"/><counter type="COMPLEXITY" missed="15" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="127" covered="37"/><counter type="BRANCH" missed="25" covered="5"/><counter type="LINE" missed="29" covered="13"/><counter type="COMPLEXITY" missed="16" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/And" sourcefilename="And.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="60"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/IComparison" sourcefilename="IComparison.java"/><class name="gov/nist/secauto/metaschema/core/metapath/MetapathEvaluationFeature" sourcefilename="MetapathEvaluationFeature.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Object;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractExpressionVisitor" sourcefilename="AbstractExpressionVisitor.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitChildren" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Ljava/lang/Object;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shouldVisitNextChild" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;Ljava/lang/Object;Ljava/lang/Object;)Z" line="103"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAddition" desc="(Lgov/nist/secauto/metaschema/core/metapath/Addition;Ljava/lang/Object;)Ljava/lang/Object;" line="133"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAnd" desc="(Lgov/nist/secauto/metaschema/core/metapath/And;Ljava/lang/Object;)Ljava/lang/Object;" line="138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAxis" desc="(Lgov/nist/secauto/metaschema/core/metapath/Axis;Ljava/lang/Object;)Ljava/lang/Object;" line="143"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitStep" desc="(Lgov/nist/secauto/metaschema/core/metapath/Step;Ljava/lang/Object;)Ljava/lang/Object;" line="148"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitValueComparison" desc="(Lgov/nist/secauto/metaschema/core/metapath/ValueComparison;Ljava/lang/Object;)Ljava/lang/Object;" line="153"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitGeneralComparison" desc="(Lgov/nist/secauto/metaschema/core/metapath/GeneralComparison;Ljava/lang/Object;)Ljava/lang/Object;" line="158"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitContextItem" desc="(Lgov/nist/secauto/metaschema/core/metapath/ContextItem;Ljava/lang/Object;)Ljava/lang/Object;" line="163"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitDecimalLiteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/DecimalLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="168"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitDivision" desc="(Lgov/nist/secauto/metaschema/core/metapath/Division;Ljava/lang/Object;)Ljava/lang/Object;" line="173"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitExcept" desc="(Lgov/nist/secauto/metaschema/core/metapath/Except;Ljava/lang/Object;)Ljava/lang/Object;" line="178"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFlag" desc="(Lgov/nist/secauto/metaschema/core/metapath/Flag;Ljava/lang/Object;)Ljava/lang/Object;" line="183"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFunctionCall" desc="(Lgov/nist/secauto/metaschema/core/metapath/FunctionCall;Ljava/lang/Object;)Ljava/lang/Object;" line="188"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitIntegerDivision" desc="(Lgov/nist/secauto/metaschema/core/metapath/IntegerDivision;Ljava/lang/Object;)Ljava/lang/Object;" line="193"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitIntegerLiteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/IntegerLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="198"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitIntersect" desc="(Lgov/nist/secauto/metaschema/core/metapath/Intersect;Ljava/lang/Object;)Ljava/lang/Object;" line="203"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitMetapath" desc="(Lgov/nist/secauto/metaschema/core/metapath/Metapath;Ljava/lang/Object;)Ljava/lang/Object;" line="208"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitModulo" desc="(Lgov/nist/secauto/metaschema/core/metapath/Modulo;Ljava/lang/Object;)Ljava/lang/Object;" line="213"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitModelInstance" desc="(Lgov/nist/secauto/metaschema/core/metapath/ModelInstance;Ljava/lang/Object;)Ljava/lang/Object;" line="218"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitMultiplication" desc="(Lgov/nist/secauto/metaschema/core/metapath/Multiplication;Ljava/lang/Object;)Ljava/lang/Object;" line="223"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitName" desc="(Lgov/nist/secauto/metaschema/core/metapath/Name;Ljava/lang/Object;)Ljava/lang/Object;" line="228"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitNegate" desc="(Lgov/nist/secauto/metaschema/core/metapath/Negate;Ljava/lang/Object;)Ljava/lang/Object;" line="233"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitOr" desc="(Lgov/nist/secauto/metaschema/core/metapath/Or;Ljava/lang/Object;)Ljava/lang/Object;" line="238"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPredicate" desc="(Lgov/nist/secauto/metaschema/core/metapath/Predicate;Ljava/lang/Object;)Ljava/lang/Object;" line="243"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitRelativeDoubleSlashPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/RelativeDoubleSlashPath;Ljava/lang/Object;)Ljava/lang/Object;" line="248"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitRelativeSlashPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/RelativeSlashPath;Ljava/lang/Object;)Ljava/lang/Object;" line="253"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitRootDoubleSlashPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/RootDoubleSlashPath;Ljava/lang/Object;)Ljava/lang/Object;" line="258"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitRootSlashOnlyPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/RootSlashOnlyPath;Ljava/lang/Object;)Ljava/lang/Object;" line="263"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitRootSlashPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/RootSlashPath;Ljava/lang/Object;)Ljava/lang/Object;" line="268"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitStringConcat" desc="(Lgov/nist/secauto/metaschema/core/metapath/StringConcat;Ljava/lang/Object;)Ljava/lang/Object;" line="273"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitStringLiteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/StringLiteral;Ljava/lang/Object;)Ljava/lang/Object;" line="278"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitSubtraction" desc="(Lgov/nist/secauto/metaschema/core/metapath/Subtraction;Ljava/lang/Object;)Ljava/lang/Object;" line="283"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitUnion" desc="(Lgov/nist/secauto/metaschema/core/metapath/Union;Ljava/lang/Object;)Ljava/lang/Object;" line="288"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitWildcard" desc="(Lgov/nist/secauto/metaschema/core/metapath/Wildcard;Ljava/lang/Object;)Ljava/lang/Object;" line="293"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitLet" desc="(Lgov/nist/secauto/metaschema/core/metapath/Let;Ljava/lang/Object;)Ljava/lang/Object;" line="298"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitVariableReference" desc="(Lgov/nist/secauto/metaschema/core/metapath/VariableReference;Ljava/lang/Object;)Ljava/lang/Object;" line="303"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="217" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="43" covered="0"/><counter type="METHOD" missed="40" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/DynamicMetapathException" sourcefilename="DynamicMetapathException.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/lang/Throwable;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/Throwable;)V" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCodePrefix" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractUnaryExpression" sourcefilename="AbstractUnaryExpression.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="48"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChild" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractCodedMetapathException" sourcefilename="AbstractCodedMetapathException.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/lang/Throwable;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/Throwable;)V" line="86"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCode" desc="()I" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCodeAsString" desc="()Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="8"/><counter type="LINE" missed="9" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractLiteralExpression" sourcefilename="AbstractLiteralExpression.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toASTString" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Let" sourcefilename="Let.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/Name;Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="45"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Lgov/nist/secauto/metaschema/core/metapath/Name;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBoundExpression" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="58"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReturnExpression" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="79"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/DynamicContext$CachingLoader" sourcefilename="DynamicContext.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/IDocumentLoader;)V" line="151"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUriResolver" desc="()Lgov/nist/secauto/metaschema/core/model/IUriResolver;" line="157"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUriResolver" desc="(Lgov/nist/secauto/metaschema/core/model/IUriResolver;)V" line="163"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProxiedDocumentLoader" desc="()Lgov/nist/secauto/metaschema/core/metapath/IDocumentLoader;" line="168"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadAsNodeItem" desc="(Ljava/nio/file/Path;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="173"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadAsNodeItem" desc="(Ljava/net/URL;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="184"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadAsNodeItem" desc="(Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="195"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadAsNodeItem" desc="(Ljava/io/InputStream;Ljava/net/URI;)Lgov/nist/secauto/metaschema/core/metapath/item/node/IDocumentNodeItem;" line="207"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/EmptyListImpl" sourcefilename="EmptyListImpl.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asList" desc="()Ljava/util/List;" line="41"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asStream" desc="()Ljava/util/stream/Stream;" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collect" desc="()V" line="63"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Ljava/util/function/Consumer;)V" line="68"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="73"><counter type="INSTRUCTION" missed="8" covered="6"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="9"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/IntegerLiteral" sourcefilename="IntegerLiteral.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/ContextItem" sourcefilename="ContextItem.java"><method name="instance" desc="()Lgov/nist/secauto/metaschema/core/metapath/ContextItem;" line="43"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="63"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="73"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/DynamicContext" sourcefilename="DynamicContext.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/StaticContext;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStaticContext" desc="()Lgov/nist/secauto/metaschema/core/metapath/StaticContext;" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getImplicitTimeZone" desc="()Ljava/time/ZoneId;" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCurrentDateTime" desc="()Ljava/time/ZonedDateTime;" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAvailableDocuments" desc="()Ljava/util/Map;" line="103"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocumentLoader" desc="()Lgov/nist/secauto/metaschema/core/metapath/IDocumentLoader;" line="107"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDocumentLoader" desc="(Lgov/nist/secauto/metaschema/core/metapath/IDocumentLoader;)V" line="111"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCachedResult" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/DefaultFunction$CallingContext;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="115"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disablePredicateEvaluation" desc="()Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfiguration" desc="()Lgov/nist/secauto/metaschema/core/configuration/IConfiguration;" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cacheResult" desc="(Lgov/nist/secauto/metaschema/core/metapath/function/DefaultFunction$CallingContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="130"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariableValue" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="136"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setVariableValue" desc="(Ljava/lang/String;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)V" line="140"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearVariableValue" desc="(Ljava/lang/String;)V" line="144"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="69"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="12" covered="19"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/ISequence" sourcefilename="ISequence.java"><method name="empty" desc="()Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="62"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="80"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="101"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/util/stream/Stream;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="122"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSequence" desc="()Ljava/util/stream/Collector;" line="182"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="30"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Intersect" sourcefilename="Intersect.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyFilterTo" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;Ljava/util/List;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="44"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/VariableReference" sourcefilename="VariableReference.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/Name;)V" line="41"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Lgov/nist/secauto/metaschema/core/metapath/Name;" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toASTString" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="68"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/MetapathExpression" sourcefilename="MetapathExpression.java"><method name="compile" desc="(Ljava/lang/String;)Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression;" line="87"><counter type="INSTRUCTION" missed="57" covered="78"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="10" covered="18"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="()Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getASTNode" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluateAs" desc="(Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression$ResultType;)Ljava/lang/Object;" line="182"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluateAs" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression$ResultType;)Ljava/lang/Object;" line="208"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateAs" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression$ResultType;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Ljava/lang/Object;" line="240"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toResultType" desc="(Lgov/nist/secauto/metaschema/core/metapath/ISequence;Lgov/nist/secauto/metaschema/core/metapath/MetapathExpression$ResultType;)Ljava/lang/Object;" line="274"><counter type="INSTRUCTION" missed="48" covered="14"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="11" covered="5"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="()Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="312"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="332"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="361"><counter type="INSTRUCTION" missed="15" covered="7"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="143" covered="141"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="29" covered="37"/><counter type="COMPLEXITY" missed="13" covered="10"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/IExpression" sourcefilename="IExpression.java"><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toASTString" desc="()Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/FunctionCall" sourcefilename="FunctionCall.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/List;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunction" desc="()Lgov/nist/secauto/metaschema/core/metapath/function/IFunction;" line="69"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="84"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toASTString" desc="()Ljava/lang/String;" line="94"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="104"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="105"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="60"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/MetapathException" sourcefilename="MetapathException.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="5"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractBinaryExpression" sourcefilename="AbstractBinaryExpression.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRight" desc="()Lgov/nist/secauto/metaschema/core/metapath/IExpression;" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/StringLiteral" sourcefilename="StringLiteral.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="48"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="53"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeQuotes" desc="(Ljava/lang/String;)Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/CSTPrinter" sourcefilename="CSTPrinter.java"><method name="&lt;init&gt;" desc="(Ljava/io/PrintStream;)V" line="44"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIgnoringWrappers" desc="(Z)V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="(Lorg/antlr/v4/runtime/RuleContext;)V" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print" desc="(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/util/List;)V" line="86"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="explore" desc="(Lorg/antlr/v4/runtime/RuleContext;I)V" line="90"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/RootSlashPath" sourcefilename="RootSlashPath.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="51"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$1" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="34"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/ASTPrinter" sourcefilename="ASTPrinter.java"><method name="instance" desc="()Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter;" line="46"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitChildren" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="aggregateResult" desc="(Ljava/lang/String;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultResult" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendNode" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Ljava/lang/String;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visit" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;)Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAddition" desc="(Lgov/nist/secauto/metaschema/core/metapath/Addition;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAnd" desc="(Lgov/nist/secauto/metaschema/core/metapath/And;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="122"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitStep" desc="(Lgov/nist/secauto/metaschema/core/metapath/Step;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitValueComparison" desc="(Lgov/nist/secauto/metaschema/core/metapath/ValueComparison;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="132"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitGeneralComparison" desc="(Lgov/nist/secauto/metaschema/core/metapath/GeneralComparison;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitContextItem" desc="(Lgov/nist/secauto/metaschema/core/metapath/ContextItem;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="142"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitDecimalLiteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/DecimalLiteral;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="147"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitDivision" desc="(Lgov/nist/secauto/metaschema/core/metapath/Division;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitExcept" desc="(Lgov/nist/secauto/metaschema/core/metapath/Except;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="157"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFlag" desc="(Lgov/nist/secauto/metaschema/core/metapath/Flag;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitFunctionCall" desc="(Lgov/nist/secauto/metaschema/core/metapath/FunctionCall;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="167"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitIntegerDivision" desc="(Lgov/nist/secauto/metaschema/core/metapath/IntegerDivision;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="172"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitIntegerLiteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/IntegerLiteral;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="177"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitIntersect" desc="(Lgov/nist/secauto/metaschema/core/metapath/Intersect;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="182"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitMetapath" desc="(Lgov/nist/secauto/metaschema/core/metapath/Metapath;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="187"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitModulo" desc="(Lgov/nist/secauto/metaschema/core/metapath/Modulo;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="192"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitModelInstance" desc="(Lgov/nist/secauto/metaschema/core/metapath/ModelInstance;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="197"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitMultiplication" desc="(Lgov/nist/secauto/metaschema/core/metapath/Multiplication;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="202"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitName" desc="(Lgov/nist/secauto/metaschema/core/metapath/Name;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="207"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitNegate" desc="(Lgov/nist/secauto/metaschema/core/metapath/Negate;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="212"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitOr" desc="(Lgov/nist/secauto/metaschema/core/metapath/Or;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="217"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitAxis" desc="(Lgov/nist/secauto/metaschema/core/metapath/Axis;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="222"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitPredicate" desc="(Lgov/nist/secauto/metaschema/core/metapath/Predicate;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="227"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitRelativeDoubleSlashPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/RelativeDoubleSlashPath;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="232"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitRelativeSlashPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/RelativeSlashPath;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="237"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitRootDoubleSlashPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/RootDoubleSlashPath;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="242"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitRootSlashOnlyPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/RootSlashOnlyPath;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="247"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitRootSlashPath" desc="(Lgov/nist/secauto/metaschema/core/metapath/RootSlashPath;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="252"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitStringConcat" desc="(Lgov/nist/secauto/metaschema/core/metapath/StringConcat;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="257"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitStringLiteral" desc="(Lgov/nist/secauto/metaschema/core/metapath/StringLiteral;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="262"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitSubtraction" desc="(Lgov/nist/secauto/metaschema/core/metapath/Subtraction;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="267"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitUnion" desc="(Lgov/nist/secauto/metaschema/core/metapath/Union;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="272"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitWildcard" desc="(Lgov/nist/secauto/metaschema/core/metapath/Wildcard;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="277"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitLet" desc="(Lgov/nist/secauto/metaschema/core/metapath/Let;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="282"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitVariableReference" desc="(Lgov/nist/secauto/metaschema/core/metapath/VariableReference;Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;)Ljava/lang/String;" line="287"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="424" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="44" covered="0"/><counter type="METHOD" missed="42" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/DynamicContext$CachingLoader$ContextUriResolver" sourcefilename="DynamicContext.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext$CachingLoader;)V" line="211"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="(Ljava/net/URI;)Ljava/net/URI;" line="221"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Subtraction" sourcefilename="Subtraction.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="operation" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtract" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;" line="89"><counter type="INSTRUCTION" missed="133" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractPathExpression" sourcefilename="AbstractPathExpression.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchExpression" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Ljava/util/stream/Stream;" line="67"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="search" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Ljava/util/stream/Stream;" line="130"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$searchExpression$1" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="78"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$searchExpression$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="63" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="2"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/ASTPrinter$State" sourcefilename="ASTPrinter.java"><method name="&lt;init&gt;" desc="()V" line="290"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIndentation" desc="()Ljava/lang/String;" line="296"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="push" desc="()Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;" line="308"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pop" desc="()Lgov/nist/secauto/metaschema/core/metapath/ASTPrinter$State;" line="313"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/MetapathConstants" sourcefilename="MetapathConstants.java"><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/IntegerDivision" sourcefilename="IntegerDivision.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="50"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="65"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultOrEmpty" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="87"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="divide" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/INumericItem;)Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IIntegerItem;" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/StaticMetapathException" sourcefilename="StaticMetapathException.java"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/lang/Throwable;)V" line="43"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/Throwable;)V" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCodePrefix" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Axis" sourcefilename="Axis.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;IILjava/util/function/Function;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeywordIndex" desc="()I" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="78"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="88"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="106"><counter type="INSTRUCTION" missed="3" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$3" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="112"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$2" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="141"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Flag" sourcefilename="Flag.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="84"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$1" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;)Ljava/util/stream/Stream;" line="68"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="47"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/AbstractBasicArithmeticExpression" sourcefilename="AbstractBasicArithmeticExpression.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpression;Lgov/nist/secauto/metaschema/core/metapath/IExpression;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="56"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resultOrEmpty" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;Lgov/nist/secauto/metaschema/core/metapath/item/atomic/IAnyAtomicItem;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="77"><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="41"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/DecimalLiteral" sourcefilename="DecimalLiteral.java"><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;)V" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="60"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/StaticContext" sourcefilename="StaticContext.java"><method name="newInstance" desc="()Lgov/nist/secauto/metaschema/core/metapath/StaticContext;" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lgov/nist/secauto/metaschema/core/metapath/StaticContext$Builder;" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URI;Ljava/util/Map;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaseUri" desc="()Ljava/net/URI;" line="70"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUriForPrefix" desc="(Ljava/lang/String;)Ljava/net/URI;" line="77"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newDynamicContext" desc="()Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="18"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/Wildcard" sourcefilename="Wildcard.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseResultType" desc="()Ljava/lang/Class;" line="49"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStaticResultType" desc="()Ljava/lang/Class;" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/IExpressionVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lgov/nist/secauto/metaschema/core/metapath/DynamicContext;Lgov/nist/secauto/metaschema/core/metapath/ISequence;)Lgov/nist/secauto/metaschema/core/metapath/ISequence;" line="65"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$accept$0" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/ListSequenceImpl" sourcefilename="ListSequenceImpl.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="46"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Z)V" line="49"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asList" desc="()Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asStream" desc="()Ljava/util/stream/Stream;" line="60"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collect" desc="()V" line="81"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Ljava/util/function/Consumer;)V" line="85"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="92"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/InvalidTypeMetapathException" sourcefilename="InvalidTypeMetapathException.java"><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;Ljava/lang/Throwable;)V" line="46"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)V" line="52"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;Ljava/lang/String;Ljava/lang/Throwable;)V" line="57"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;Ljava/lang/String;)V" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getItem" desc="()Lgov/nist/secauto/metaschema/core/metapath/item/IItem;" line="68"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="IDocumentLoader.java"><line nr="50" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="10" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractArithmeticExpression.java"><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="12"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ILiteralExpression.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RelativeSlashPath.java"><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RootSlashPath.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="34"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MetapathEvaluationFeature.java"><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="And.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="2"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Or.java"><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="11" mb="0" cb="2"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FailingErrorListener.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringLiteral.java"><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="2" cb="0"/><line nr="63" mi="4" ci="0" mb="2" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="2" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RelativeDoubleSlashPath.java"><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DynamicContext.java"><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="4" ci="3" mb="1" cb="1"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="8" ci="0" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="7" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="2" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="7" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="7" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="2" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="188" mi="7" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="2" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="7" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="6" ci="0" mb="0" cb="0"/><line nr="221" mi="6" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="2" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="227" mi="6" ci="0" mb="0" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="231" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="188" covered="69"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="43" covered="19"/><counter type="COMPLEXITY" missed="25" covered="6"/><counter type="METHOD" missed="19" covered="6"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="MetapathException.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="5"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractNamedInstanceExpression.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Let.java"><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractUnaryExpression.java"><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Division.java"><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="2" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="2" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="2" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="2" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="2" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="2" cb="0"/><line nr="116" mi="9" ci="0" mb="0" cb="0"/><line nr="118" mi="9" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="119" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StaticContext.java"><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="64"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MetapathConstants.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Union.java"><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="9" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ASTPrinter.java"><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="2" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="8" ci="0" mb="0" cb="0"/><line nr="117" mi="10" ci="0" mb="0" cb="0"/><line nr="122" mi="10" ci="0" mb="0" cb="0"/><line nr="127" mi="10" ci="0" mb="0" cb="0"/><line nr="132" mi="10" ci="0" mb="0" cb="0"/><line nr="137" mi="10" ci="0" mb="0" cb="0"/><line nr="142" mi="10" ci="0" mb="0" cb="0"/><line nr="147" mi="10" ci="0" mb="0" cb="0"/><line nr="152" mi="10" ci="0" mb="0" cb="0"/><line nr="157" mi="10" ci="0" mb="0" cb="0"/><line nr="162" mi="10" ci="0" mb="0" cb="0"/><line nr="167" mi="10" ci="0" mb="0" cb="0"/><line nr="172" mi="10" ci="0" mb="0" cb="0"/><line nr="177" mi="10" ci="0" mb="0" cb="0"/><line nr="182" mi="10" ci="0" mb="0" cb="0"/><line nr="187" mi="10" ci="0" mb="0" cb="0"/><line nr="192" mi="10" ci="0" mb="0" cb="0"/><line nr="197" mi="10" ci="0" mb="0" cb="0"/><line nr="202" mi="10" ci="0" mb="0" cb="0"/><line nr="207" mi="10" ci="0" mb="0" cb="0"/><line nr="212" mi="10" ci="0" mb="0" cb="0"/><line nr="217" mi="10" ci="0" mb="0" cb="0"/><line nr="222" mi="10" ci="0" mb="0" cb="0"/><line nr="227" mi="10" ci="0" mb="0" cb="0"/><line nr="232" mi="10" ci="0" mb="0" cb="0"/><line nr="237" mi="10" ci="0" mb="0" cb="0"/><line nr="242" mi="10" ci="0" mb="0" cb="0"/><line nr="247" mi="10" ci="0" mb="0" cb="0"/><line nr="252" mi="10" ci="0" mb="0" cb="0"/><line nr="257" mi="10" ci="0" mb="0" cb="0"/><line nr="262" mi="10" ci="0" mb="0" cb="0"/><line nr="267" mi="10" ci="0" mb="0" cb="0"/><line nr="272" mi="10" ci="0" mb="0" cb="0"/><line nr="277" mi="10" ci="0" mb="0" cb="0"/><line nr="282" mi="10" ci="0" mb="0" cb="0"/><line nr="287" mi="10" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="5" ci="0" mb="2" cb="0"/><line nr="297" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="8" ci="0" mb="2" cb="0"/><line nr="299" mi="4" ci="0" mb="0" cb="0"/><line nr="301" mi="4" ci="0" mb="0" cb="0"/><line nr="302" mi="4" ci="0" mb="0" cb="0"/><line nr="304" mi="3" ci="0" mb="0" cb="0"/><line nr="308" mi="6" ci="0" mb="0" cb="0"/><line nr="309" mi="2" ci="0" mb="0" cb="0"/><line nr="313" mi="6" ci="0" mb="0" cb="0"/><line nr="314" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="478" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="69" covered="0"/><counter type="COMPLEXITY" missed="50" covered="0"/><counter type="METHOD" missed="46" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="InvalidTypeMetapathException.java"><line nr="46" mi="14" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="13" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Step.java"><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="33"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RootSlashOnlyPath.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="27"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IExpressionVisitor.java"/><sourcefile name="Subtraction.java"><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="2" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="2" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="2" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="2" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="2" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="2" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="2" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="2" cb="0"/><line nr="126" mi="9" ci="0" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ContextItem.java"><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="1" cb="1"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeMetapathException.java"><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractComparison.java"><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="16" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="1" cb="3"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="1" cb="3"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="2" cb="2"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="4" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="119" mi="6" ci="0" mb="4" cb="0"/><line nr="120" mi="8" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="4" cb="0"/><line nr="122" mi="8" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="4" cb="0"/><line nr="124" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="9" ci="0" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="0" cb="0"/><line nr="129" mi="10" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="1" cb="6"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="6" cb="1"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="11" ci="0" mb="4" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="11" ci="0" mb="4" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="215" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="13" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="1" cb="6"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="1" ci="10" mb="2" cb="2"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="1" ci="10" mb="2" cb="2"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="13" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="5" ci="0" mb="7" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="1" ci="0" mb="0" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="11" ci="0" mb="4" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="4" ci="0" mb="0" cb="0"/><line nr="301" mi="4" ci="0" mb="0" cb="0"/><line nr="302" mi="11" ci="0" mb="4" cb="0"/><line nr="303" mi="1" ci="0" mb="0" cb="0"/><line nr="306" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="309" mi="5" ci="0" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="13" ci="0" mb="0" cb="0"/><line nr="314" mi="2" ci="0" mb="0" cb="0"/><line nr="333" mi="5" ci="0" mb="7" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="336" mi="1" ci="0" mb="0" cb="0"/><line nr="338" mi="4" ci="0" mb="0" cb="0"/><line nr="339" mi="4" ci="0" mb="0" cb="0"/><line nr="340" mi="11" ci="0" mb="4" cb="0"/><line nr="341" mi="1" ci="0" mb="0" cb="0"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="1" ci="0" mb="0" cb="0"/><line nr="347" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="4" ci="0" mb="0" cb="0"/><line nr="349" mi="11" ci="0" mb="4" cb="0"/><line nr="350" mi="1" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="1" ci="0" mb="0" cb="0"/><line nr="356" mi="5" ci="0" mb="0" cb="0"/><line nr="357" mi="1" ci="0" mb="0" cb="0"/><line nr="359" mi="13" ci="0" mb="0" cb="0"/><line nr="361" mi="2" ci="0" mb="0" cb="0"/><line nr="381" mi="2" ci="0" mb="0" cb="0"/><line nr="382" mi="5" ci="0" mb="7" cb="0"/><line nr="384" mi="4" ci="0" mb="0" cb="0"/><line nr="385" mi="1" ci="0" mb="0" cb="0"/><line nr="387" mi="6" ci="0" mb="4" cb="0"/><line nr="388" mi="6" ci="0" mb="0" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="11" ci="0" mb="4" cb="0"/><line nr="393" mi="7" ci="0" mb="4" cb="0"/><line nr="394" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="4" ci="0" mb="0" cb="0"/><line nr="398" mi="11" ci="0" mb="4" cb="0"/><line nr="399" mi="1" ci="0" mb="0" cb="0"/><line nr="402" mi="6" ci="0" mb="4" cb="0"/><line nr="403" mi="7" ci="0" mb="0" cb="0"/><line nr="406" mi="6" ci="0" mb="4" cb="0"/><line nr="407" mi="7" ci="0" mb="0" cb="0"/><line nr="413" mi="6" ci="0" mb="4" cb="0"/><line nr="414" mi="6" ci="0" mb="0" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><line nr="418" mi="11" ci="0" mb="4" cb="0"/><line nr="419" mi="7" ci="0" mb="4" cb="0"/><line nr="420" mi="6" ci="0" mb="0" cb="0"/><line nr="423" mi="4" ci="0" mb="0" cb="0"/><line nr="424" mi="11" ci="0" mb="4" cb="0"/><line nr="425" mi="1" ci="0" mb="0" cb="0"/><line nr="428" mi="6" ci="0" mb="4" cb="0"/><line nr="429" mi="7" ci="0" mb="0" cb="0"/><line nr="432" mi="6" ci="0" mb="4" cb="0"/><line nr="433" mi="7" ci="0" mb="0" cb="0"/><line nr="439" mi="5" ci="0" mb="0" cb="0"/><line nr="440" mi="1" ci="0" mb="0" cb="0"/><line nr="442" mi="13" ci="0" mb="0" cb="0"/><line nr="445" mi="2" ci="0" mb="2" cb="0"/><line nr="446" mi="9" ci="0" mb="0" cb="0"/><line nr="448" mi="3" ci="0" mb="0" cb="0"/><line nr="449" mi="6" ci="0" mb="0" cb="0"/><line nr="450" mi="3" ci="0" mb="0" cb="0"/><line nr="452" mi="2" ci="0" mb="0" cb="0"/><line nr="471" mi="5" ci="0" mb="7" cb="0"/><line nr="473" mi="4" ci="0" mb="0" cb="0"/><line nr="474" mi="1" ci="0" mb="0" cb="0"/><line nr="476" mi="4" ci="0" mb="0" cb="0"/><line nr="477" mi="4" ci="0" mb="0" cb="0"/><line nr="478" mi="11" ci="0" mb="4" cb="0"/><line nr="479" mi="1" ci="0" mb="0" cb="0"/><line nr="482" mi="4" ci="0" mb="0" cb="0"/><line nr="483" mi="1" ci="0" mb="0" cb="0"/><line nr="485" mi="4" ci="0" mb="0" cb="0"/><line nr="486" mi="4" ci="0" mb="0" cb="0"/><line nr="487" mi="11" ci="0" mb="4" cb="0"/><line nr="488" mi="1" ci="0" mb="0" cb="0"/><line nr="491" mi="4" ci="0" mb="0" cb="0"/><line nr="492" mi="1" ci="0" mb="0" cb="0"/><line nr="494" mi="5" ci="0" mb="0" cb="0"/><line nr="495" mi="1" ci="0" mb="0" cb="0"/><line nr="497" mi="13" ci="0" mb="0" cb="0"/><line nr="499" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="660" covered="186"/><counter type="BRANCH" missed="142" covered="25"/><counter type="LINE" missed="126" covered="47"/><counter type="COMPLEXITY" missed="94" covered="18"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MetapathExpression.java"><line nr="58" mi="0" ci="24" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="7" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="13" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="1" cb="1"/><line nr="115" mi="13" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="9" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="241" mi="5" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="5" cb="1"/><line nr="276" mi="5" ci="0" mb="0" cb="0"/><line nr="277" mi="1" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="4" ci="0" mb="0" cb="0"/><line nr="283" mi="7" ci="0" mb="2" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="1" ci="0" mb="0" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="8" ci="0" mb="2" cb="0"/><line nr="291" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="14" ci="0" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="7" mb="0" cb="0"/><line nr="362" mi="1" ci="0" mb="0" cb="0"/><line nr="363" mi="8" ci="0" mb="0" cb="0"/><line nr="364" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="143" covered="195"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="29" covered="43"/><counter type="COMPLEXITY" missed="13" covered="11"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Addition.java"><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="1" cb="1"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="2" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="3" mb="1" cb="1"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="2" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="3" mb="1" cb="1"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="3" mb="1" cb="1"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="2" cb="0"/><line nr="118" mi="6" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="2" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="1" cb="1"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="9" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="127" covered="37"/><counter type="BRANCH" missed="25" covered="5"/><counter type="LINE" missed="29" covered="13"/><counter type="COMPLEXITY" missed="16" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Metapath.java"><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="RootDoubleSlashPath.java"><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractBinaryExpression.java"><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DynamicMetapathException.java"><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IntegerDivision.java"><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="4" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ISequence.java"><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="7" mb="1" cb="1"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="1" cb="1"/><line nr="207" mi="3" ci="0" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="1" cb="1"/><line nr="209" mi="0" ci="11" mb="0" cb="0"/><line nr="211" mi="6" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="68"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="9" covered="17"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="EmptyListImpl.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="4" mb="3" cb="1"/><line nr="74" mi="3" ci="2" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="9"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Name.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="1" cb="1"/><line nr="88" mi="0" ci="9" mb="0" cb="2"/><line nr="94" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GeneralComparison.java"><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="11" ci="0" mb="2" cb="0"/><line nr="89" mi="7" ci="0" mb="2" cb="0"/><line nr="90" mi="11" ci="0" mb="2" cb="0"/><line nr="91" mi="7" ci="0" mb="2" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="2" cb="0"/><line nr="111" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="2" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="2" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="152" covered="7"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="35" covered="3"/><counter type="COMPLEXITY" missed="16" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractRootPathExpression.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="15"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BuildAstVisitor.java"><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="1" cb="1"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="1" cb="1"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="1" cb="1"/><line nr="180" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="9" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="10" mb="0" cb="2"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="1" cb="1"/><line nr="224" mi="8" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="1" cb="1"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="235" mi="0" ci="12" mb="0" cb="2"/><line nr="236" mi="0" ci="8" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="246" mi="7" ci="0" mb="2" cb="0"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="4" ci="3" mb="1" cb="1"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="4" ci="3" mb="1" cb="1"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="4" ci="5" mb="1" cb="1"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="2"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="7" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="1" cb="6"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="10" ci="0" mb="0" cb="0"/><line nr="305" mi="0" ci="7" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="1" cb="1"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="7" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="1" cb="6"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="326" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="10" ci="0" mb="0" cb="0"/><line nr="331" mi="0" ci="7" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="5" ci="0" mb="0" cb="0"/><line nr="341" mi="7" ci="0" mb="2" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="348" mi="0" ci="8" mb="0" cb="0"/><line nr="349" mi="0" ci="5" mb="0" cb="0"/><line nr="350" mi="0" ci="7" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="4" ci="3" mb="1" cb="1"/><line nr="354" mi="4" ci="3" mb="1" cb="1"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="2" cb="1"/><line nr="361" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="1" mb="0" cb="0"/><line nr="364" mi="6" ci="0" mb="0" cb="0"/><line nr="365" mi="1" ci="0" mb="0" cb="0"/><line nr="367" mi="8" ci="0" mb="0" cb="0"/><line nr="369" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="8" ci="0" mb="0" cb="0"/><line nr="376" mi="5" ci="0" mb="0" cb="0"/><line nr="377" mi="7" ci="0" mb="0" cb="0"/><line nr="378" mi="5" ci="0" mb="0" cb="0"/><line nr="380" mi="7" ci="0" mb="2" cb="0"/><line nr="381" mi="7" ci="0" mb="2" cb="0"/><line nr="383" mi="5" ci="0" mb="0" cb="0"/><line nr="385" mi="2" ci="0" mb="5" cb="0"/><line nr="387" mi="6" ci="0" mb="0" cb="0"/><line nr="388" mi="1" ci="0" mb="0" cb="0"/><line nr="390" mi="6" ci="0" mb="0" cb="0"/><line nr="391" mi="1" ci="0" mb="0" cb="0"/><line nr="393" mi="6" ci="0" mb="0" cb="0"/><line nr="394" mi="1" ci="0" mb="0" cb="0"/><line nr="396" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="1" ci="0" mb="0" cb="0"/><line nr="399" mi="8" ci="0" mb="0" cb="0"/><line nr="401" mi="2" ci="0" mb="0" cb="0"/><line nr="407" mi="5" ci="0" mb="0" cb="0"/><line nr="408" mi="7" ci="0" mb="2" cb="0"/><line nr="409" mi="5" ci="0" mb="0" cb="0"/><line nr="415" mi="8" ci="0" mb="0" cb="0"/><line nr="416" mi="5" ci="0" mb="0" cb="0"/><line nr="417" mi="7" ci="0" mb="0" cb="0"/><line nr="418" mi="5" ci="0" mb="0" cb="0"/><line nr="420" mi="7" ci="0" mb="2" cb="0"/><line nr="421" mi="7" ci="0" mb="2" cb="0"/><line nr="423" mi="5" ci="0" mb="0" cb="0"/><line nr="426" mi="2" ci="0" mb="3" cb="0"/><line nr="428" mi="6" ci="0" mb="0" cb="0"/><line nr="429" mi="1" ci="0" mb="0" cb="0"/><line nr="431" mi="6" ci="0" mb="0" cb="0"/><line nr="432" mi="1" ci="0" mb="0" cb="0"/><line nr="434" mi="8" ci="0" mb="0" cb="0"/><line nr="436" mi="2" ci="0" mb="0" cb="0"/><line nr="445" mi="8" ci="0" mb="0" cb="0"/><line nr="447" mi="13" ci="0" mb="2" cb="0"/><line nr="449" mi="9" ci="0" mb="0" cb="0"/><line nr="450" mi="4" ci="0" mb="0" cb="0"/><line nr="451" mi="7" ci="0" mb="2" cb="0"/><line nr="453" mi="7" ci="0" mb="0" cb="0"/><line nr="454" mi="5" ci="0" mb="0" cb="0"/><line nr="455" mi="7" ci="0" mb="2" cb="0"/><line nr="457" mi="11" ci="0" mb="0" cb="0"/><line nr="463" mi="3" ci="0" mb="0" cb="0"/><line nr="464" mi="2" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="467" mi="7" ci="0" mb="2" cb="0"/><line nr="468" mi="4" ci="0" mb="0" cb="0"/><line nr="469" mi="5" ci="0" mb="0" cb="0"/><line nr="470" mi="2" ci="0" mb="3" cb="0"/><line nr="472" mi="1" ci="0" mb="0" cb="0"/><line nr="474" mi="1" ci="0" mb="0" cb="0"/><line nr="475" mi="1" ci="0" mb="0" cb="0"/><line nr="477" mi="8" ci="0" mb="0" cb="0"/><line nr="481" mi="4" ci="0" mb="0" cb="0"/><line nr="482" mi="5" ci="0" mb="0" cb="0"/><line nr="483" mi="7" ci="0" mb="2" cb="0"/><line nr="484" mi="4" ci="0" mb="2" cb="0"/><line nr="485" mi="5" ci="0" mb="0" cb="0"/><line nr="487" mi="2" ci="0" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="495" mi="0" ci="4" mb="0" cb="0"/><line nr="496" mi="0" ci="3" mb="1" cb="1"/><line nr="497" mi="0" ci="5" mb="0" cb="0"/><line nr="498" mi="0" ci="2" mb="2" cb="1"/><line nr="501" mi="0" ci="3" mb="1" cb="1"/><line nr="503" mi="0" ci="4" mb="0" cb="0"/><line nr="504" mi="0" ci="10" mb="0" cb="0"/><line nr="505" mi="0" ci="1" mb="0" cb="0"/><line nr="506" mi="4" ci="0" mb="0" cb="0"/><line nr="508" mi="1" ci="0" mb="0" cb="0"/><line nr="511" mi="4" ci="0" mb="0" cb="0"/><line nr="512" mi="5" ci="0" mb="0" cb="0"/><line nr="513" mi="7" ci="0" mb="2" cb="0"/><line nr="514" mi="5" ci="0" mb="0" cb="0"/><line nr="515" mi="1" ci="0" mb="0" cb="0"/><line nr="517" mi="8" ci="0" mb="0" cb="0"/><line nr="519" mi="0" ci="1" mb="0" cb="0"/><line nr="521" mi="5" ci="0" mb="0" cb="0"/><line nr="523" mi="0" ci="2" mb="0" cb="0"/><line nr="528" mi="0" ci="8" mb="0" cb="0"/><line nr="529" mi="0" ci="5" mb="0" cb="0"/><line nr="530" mi="0" ci="7" mb="0" cb="0"/><line nr="531" mi="0" ci="5" mb="0" cb="0"/><line nr="533" mi="4" ci="3" mb="1" cb="1"/><line nr="534" mi="4" ci="3" mb="1" cb="1"/><line nr="536" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="2" mb="2" cb="1"/><line nr="541" mi="0" ci="6" mb="0" cb="0"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="544" mi="6" ci="0" mb="0" cb="0"/><line nr="545" mi="1" ci="0" mb="0" cb="0"/><line nr="547" mi="8" ci="0" mb="0" cb="0"/><line nr="549" mi="0" ci="2" mb="0" cb="0"/><line nr="557" mi="4" ci="0" mb="0" cb="0"/><line nr="558" mi="5" ci="0" mb="0" cb="0"/><line nr="563" mi="0" ci="3" mb="0" cb="0"/><line nr="564" mi="0" ci="4" mb="0" cb="0"/><line nr="567" mi="0" ci="2" mb="1" cb="1"/><line nr="569" mi="0" ci="3" mb="0" cb="0"/><line nr="570" mi="3" ci="0" mb="2" cb="0"/><line nr="572" mi="7" ci="0" mb="0" cb="0"/><line nr="573" mi="5" ci="0" mb="0" cb="0"/><line nr="574" mi="1" ci="0" mb="0" cb="0"/><line nr="576" mi="5" ci="0" mb="0" cb="0"/><line nr="577" mi="7" ci="0" mb="2" cb="0"/><line nr="578" mi="7" ci="0" mb="0" cb="0"/><line nr="579" mi="6" ci="0" mb="0" cb="0"/><line nr="582" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="3" ci="0" mb="0" cb="0"/><line nr="588" mi="4" ci="0" mb="0" cb="0"/><line nr="589" mi="7" ci="0" mb="0" cb="0"/><line nr="591" mi="10" ci="0" mb="2" cb="0"/><line nr="593" mi="3" ci="0" mb="2" cb="0"/><line nr="594" mi="6" ci="0" mb="0" cb="0"/><line nr="596" mi="2" ci="0" mb="0" cb="0"/><line nr="602" mi="0" ci="7" mb="0" cb="0"/><line nr="603" mi="4" ci="3" mb="1" cb="1"/><line nr="605" mi="0" ci="4" mb="0" cb="0"/><line nr="606" mi="4" ci="3" mb="1" cb="1"/><line nr="608" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="5" ci="6" mb="1" cb="1"/><line nr="615" mi="4" ci="5" mb="1" cb="1"/><line nr="617" mi="0" ci="7" mb="0" cb="0"/><line nr="620" mi="0" ci="3" mb="4" cb="1"/><line nr="622" mi="2" ci="0" mb="0" cb="0"/><line nr="623" mi="1" ci="0" mb="0" cb="0"/><line nr="625" mi="0" ci="2" mb="0" cb="0"/><line nr="626" mi="0" ci="1" mb="0" cb="0"/><line nr="628" mi="2" ci="0" mb="0" cb="0"/><line nr="629" mi="1" ci="0" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="0" cb="0"/><line nr="632" mi="1" ci="0" mb="0" cb="0"/><line nr="634" mi="6" ci="0" mb="0" cb="0"/><line nr="636" mi="0" ci="12" mb="0" cb="0"/><line nr="641" mi="0" ci="3" mb="0" cb="0"/><line nr="644" mi="0" ci="3" mb="0" cb="2"/><line nr="645" mi="0" ci="4" mb="0" cb="0"/><line nr="646" mi="0" ci="10" mb="0" cb="0"/><line nr="647" mi="0" ci="1" mb="0" cb="0"/><line nr="649" mi="0" ci="4" mb="0" cb="0"/><line nr="650" mi="0" ci="10" mb="0" cb="0"/><line nr="653" mi="0" ci="2" mb="0" cb="0"/><line nr="658" mi="4" ci="5" mb="1" cb="1"/><line nr="660" mi="0" ci="7" mb="0" cb="0"/><line nr="663" mi="0" ci="3" mb="3" cb="1"/><line nr="665" mi="0" ci="2" mb="0" cb="0"/><line nr="666" mi="0" ci="1" mb="0" cb="0"/><line nr="668" mi="2" ci="0" mb="0" cb="0"/><line nr="669" mi="1" ci="0" mb="0" cb="0"/><line nr="671" mi="2" ci="0" mb="0" cb="0"/><line nr="672" mi="1" ci="0" mb="0" cb="0"/><line nr="674" mi="6" ci="0" mb="0" cb="0"/><line nr="676" mi="0" ci="12" mb="0" cb="0"/><line nr="681" mi="0" ci="2" mb="0" cb="0"/><line nr="686" mi="4" ci="0" mb="0" cb="0"/><line nr="687" mi="8" ci="0" mb="0" cb="0"/><line nr="692" mi="0" ci="4" mb="0" cb="0"/><line nr="693" mi="0" ci="4" mb="0" cb="0"/><line nr="695" mi="0" ci="3" mb="2" cb="1"/><line nr="697" mi="0" ci="9" mb="0" cb="0"/><line nr="698" mi="0" ci="1" mb="0" cb="0"/><line nr="701" mi="9" ci="0" mb="0" cb="0"/><line nr="702" mi="1" ci="0" mb="0" cb="0"/><line nr="704" mi="6" ci="0" mb="0" cb="0"/><line nr="706" mi="0" ci="2" mb="0" cb="0"/><line nr="711" mi="0" ci="2" mb="0" cb="0"/><line nr="716" mi="0" ci="3" mb="0" cb="0"/><line nr="719" mi="0" ci="3" mb="1" cb="1"/><line nr="721" mi="0" ci="3" mb="0" cb="0"/><line nr="723" mi="5" ci="0" mb="0" cb="0"/><line nr="724" mi="2" ci="0" mb="0" cb="0"/><line nr="725" mi="6" ci="0" mb="0" cb="0"/><line nr="728" mi="4" ci="3" mb="1" cb="1"/><line nr="730" mi="0" ci="2" mb="0" cb="0"/><line nr="735" mi="0" ci="3" mb="0" cb="0"/><line nr="736" mi="0" ci="3" mb="0" cb="0"/><line nr="738" mi="4" ci="3" mb="1" cb="1"/><line nr="740" mi="0" ci="6" mb="0" cb="0"/><line nr="742" mi="0" ci="7" mb="0" cb="0"/><line nr="743" mi="0" ci="3" mb="0" cb="0"/><line nr="748" mi="0" ci="4" mb="0" cb="0"/><line nr="749" mi="0" ci="4" mb="0" cb="0"/><line nr="751" mi="4" ci="3" mb="1" cb="1"/><line nr="753" mi="0" ci="5" mb="0" cb="0"/><line nr="758" mi="0" ci="4" mb="0" cb="0"/><line nr="767" mi="3" ci="0" mb="0" cb="0"/><line nr="768" mi="12" ci="0" mb="0" cb="0"/><line nr="774" mi="8" ci="0" mb="0" cb="0"/><line nr="776" mi="3" ci="0" mb="0" cb="0"/><line nr="777" mi="3" ci="0" mb="0" cb="0"/><line nr="779" mi="5" ci="0" mb="0" cb="0"/><line nr="780" mi="3" ci="0" mb="2" cb="0"/><line nr="781" mi="4" ci="0" mb="0" cb="0"/><line nr="783" mi="6" ci="0" mb="0" cb="0"/><line nr="784" mi="6" ci="0" mb="0" cb="0"/><line nr="786" mi="7" ci="0" mb="2" cb="0"/><line nr="787" mi="7" ci="0" mb="2" cb="0"/><line nr="789" mi="7" ci="0" mb="0" cb="0"/><line nr="790" mi="1" ci="0" mb="0" cb="0"/><line nr="791" mi="2" ci="0" mb="0" cb="0"/><line nr="796" mi="6" ci="0" mb="0" cb="0"/><line nr="797" mi="7" ci="0" mb="2" cb="0"/><line nr="798" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="773" covered="633"/><counter type="BRANCH" missed="97" covered="51"/><counter type="LINE" missed="147" covered="166"/><counter type="COMPLEXITY" missed="93" covered="43"/><counter type="METHOD" missed="21" covered="29"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="IExpression.java"><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Negate.java"><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="2" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractLiteralExpression.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Axis.java"><line nr="41" mi="0" ci="32" mb="0" cb="0"/><line nr="43" mi="3" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="12" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="4" ci="3" mb="1" cb="1"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="141"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractAstVisitor.java"><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="0" cb="4"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="1" cb="1"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="7" ci="0" mb="2" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="7" mb="0" cb="0"/><line nr="157" mi="4" ci="3" mb="1" cb="1"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="11" mb="0" cb="0"/><line nr="188" mi="0" ci="11" mb="0" cb="0"/><line nr="203" mi="0" ci="11" mb="0" cb="0"/><line nr="218" mi="4" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="11" mb="0" cb="0"/><line nr="248" mi="4" ci="7" mb="0" cb="0"/><line nr="263" mi="4" ci="7" mb="0" cb="0"/><line nr="278" mi="4" ci="7" mb="0" cb="0"/><line nr="293" mi="4" ci="7" mb="0" cb="0"/><line nr="308" mi="4" ci="7" mb="0" cb="0"/><line nr="313" mi="4" ci="3" mb="1" cb="1"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="4" ci="0" mb="0" cb="0"/><line nr="341" mi="0" ci="11" mb="0" cb="0"/><line nr="356" mi="0" ci="11" mb="0" cb="0"/><line nr="361" mi="4" ci="3" mb="1" cb="1"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="377" mi="0" ci="11" mb="0" cb="0"/><line nr="392" mi="0" ci="11" mb="0" cb="0"/><line nr="398" mi="4" ci="0" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="428" mi="0" ci="11" mb="0" cb="0"/><line nr="434" mi="4" ci="0" mb="0" cb="0"/><line nr="449" mi="0" ci="4" mb="0" cb="0"/><line nr="454" mi="4" ci="3" mb="1" cb="1"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="470" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="4" ci="7" mb="0" cb="0"/><line nr="491" mi="4" ci="0" mb="0" cb="0"/><line nr="497" mi="4" ci="0" mb="0" cb="0"/><line nr="503" mi="4" ci="0" mb="0" cb="0"/><line nr="508" mi="4" ci="3" mb="1" cb="1"/><line nr="509" mi="0" ci="4" mb="0" cb="0"/><line nr="524" mi="4" ci="7" mb="0" cb="0"/><line nr="539" mi="0" ci="11" mb="0" cb="0"/><line nr="544" mi="5" ci="0" mb="0" cb="0"/><line nr="559" mi="0" ci="11" mb="0" cb="0"/><line nr="574" mi="0" ci="11" mb="0" cb="0"/><line nr="579" mi="7" ci="0" mb="2" cb="0"/><line nr="580" mi="4" ci="0" mb="0" cb="0"/><line nr="595" mi="0" ci="4" mb="0" cb="0"/><line nr="602" mi="7" ci="0" mb="2" cb="0"/><line nr="603" mi="4" ci="0" mb="0" cb="0"/><line nr="609" mi="4" ci="0" mb="0" cb="0"/><line nr="615" mi="4" ci="0" mb="0" cb="0"/><line nr="621" mi="4" ci="0" mb="0" cb="0"/><line nr="628" mi="7" ci="0" mb="2" cb="0"/><line nr="629" mi="4" ci="0" mb="0" cb="0"/><line nr="634" mi="7" ci="0" mb="2" cb="0"/><line nr="635" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="161" covered="286"/><counter type="BRANCH" missed="16" covered="10"/><counter type="LINE" missed="22" covered="43"/><counter type="COMPLEXITY" missed="36" covered="48"/><counter type="METHOD" missed="25" covered="46"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IComparison.java"><line nr="30" mi="0" ci="28" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingletonSequenceImpl.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="2" cb="2"/><line nr="92" mi="1" ci="8" mb="1" cb="1"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="34"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntegerLiteral.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractExpression.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="2" ci="5" mb="1" cb="1"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractCodedMetapathException.java"><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="15" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="8"/><counter type="LINE" missed="9" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractPathExpression.java"><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="2" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="63" covered="7"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="2"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Modulo.java"><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="4" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IPathExpression.java"/><sourcefile name="StaticMetapathException.java"><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractRelativePathExpression.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="28"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DecimalLiteral.java"><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StreamSequenceImpl.java"><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="4" ci="4" mb="1" cb="1"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="1" cb="1"/><line nr="70" mi="0" ci="3" mb="1" cb="1"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="4" mb="1" cb="1"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="4" cb="0"/><line nr="108" mi="9" ci="0" mb="2" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="64"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="11" covered="19"/><counter type="COMPLEXITY" missed="13" covered="6"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CSTPrinter.java"><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="16" ci="0" mb="6" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="2" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="8" ci="0" mb="2" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Flag.java"><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="4" ci="3" mb="1" cb="1"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="1" cb="1"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="2" ci="5" mb="1" cb="1"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="47"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ListSequenceImpl.java"><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="11" ci="0" mb="2" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="4" cb="0"/><line nr="93" mi="9" ci="0" mb="2" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractNAryExpression.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExpressionUtils.java"><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="1" cb="1"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="1" cb="1"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="2"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="4" ci="3" mb="1" cb="1"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="4" ci="3" mb="1" cb="1"/><line nr="79" mi="0" ci="4" mb="0" cb="2"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="1" cb="1"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="2"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="2" ci="15" mb="1" cb="1"/><line nr="116" mi="4" ci="3" mb="1" cb="1"/><line nr="118" mi="0" ci="4" mb="1" cb="1"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="1" cb="1"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="10" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="1" cb="1"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="158"/><counter type="BRANCH" missed="10" covered="22"/><counter type="LINE" missed="5" covered="46"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionCall.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="1" cb="1"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="17" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="60"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractFilterExpression.java"><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="StringConcat.java"><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="11" ci="0" mb="2" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ValueComparison.java"><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="2" cb="2"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Intersect.java"><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractExpressionVisitor.java"><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="11" ci="0" mb="2" cb="0"/><line nr="71" mi="7" ci="0" mb="2" cb="0"/><line nr="72" mi="7" ci="0" mb="2" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="188" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="5" ci="0" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="5" ci="0" mb="0" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="5" ci="0" mb="0" cb="0"/><line nr="253" mi="5" ci="0" mb="0" cb="0"/><line nr="258" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="5" ci="0" mb="0" cb="0"/><line nr="273" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="3" ci="0" mb="0" cb="0"/><line nr="283" mi="5" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="293" mi="3" ci="0" mb="0" cb="0"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><line nr="303" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="217" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="43" covered="0"/><counter type="METHOD" missed="40" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Wildcard.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IBooleanLogicExpression.java"><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Multiplication.java"><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="2" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="2" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="2" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="2" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="2" cb="0"/><line nr="110" mi="9" ci="0" mb="0" cb="0"/><line nr="112" mi="9" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ModelInstance.java"><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="4" ci="3" mb="1" cb="1"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="1" cb="1"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="45"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Except.java"><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="9" ci="0" mb="2" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="VariableReference.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="17" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractBasicArithmeticExpression.java"><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="2" cb="2"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="41"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Predicate.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="9" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="8" ci="4" mb="3" cb="1"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="75"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="13" covered="19"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="5" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="4808" covered="2783"/><counter type="BRANCH" missed="503" covered="162"/><counter type="LINE" missed="1019" covered="691"/><counter type="COMPLEXITY" missed="696" covered="293"/><counter type="METHOD" missed="375" covered="250"/><counter type="CLASS" missed="34" covered="49"/></package><package name="gov/nist/secauto/metaschema/core/metapath/item"><class name="gov/nist/secauto/metaschema/core/metapath/item/IItem" sourcefilename="IItem.java"><method name="hasValue" desc="()Z" line="55"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/ItemUtils" sourcefilename="ItemUtils.java"><method name="checkItemIsNodeItemForStep" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;)Lgov/nist/secauto/metaschema/core/metapath/item/node/INodeItem;" line="43"><counter type="INSTRUCTION" missed="23" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkItemType" desc="(Lgov/nist/secauto/metaschema/core/metapath/item/IItem;Ljava/lang/Class;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="6"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/metapath/item/IAtomicValuedItem" sourcefilename="IAtomicValuedItem.java"/><sourcefile name="IAtomicValuedItem.java"/><sourcefile name="ItemUtils.java"><line nr="43" mi="0" ci="3" mb="1" cb="1"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="2" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="9" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="6"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IItem.java"><line nr="55" mi="7" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="56" covered="6"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="1" covered="1"/></package><package name="gov/nist/secauto/metaschema/core/util"><class name="gov/nist/secauto/metaschema/core/util/ObjectUtils" sourcefilename="ObjectUtils.java"><method name="notNull" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="4" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requireNonNull" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="4" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requireNonNull" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterNull" desc="(Ljava/lang/Object;)Ljava/util/stream/Stream;" line="110"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asType" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asNullableType" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="121"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="14"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/util/CollectionUtil" sourcefilename="CollectionUtil.java"><method name="toStream" desc="(Ljava/util/Iterator;)Ljava/util/stream/Stream;" line="64"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toIterable" desc="(Ljava/util/stream/Stream;)Ljava/lang/Iterable;" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toIterable" desc="(Ljava/util/Iterator;)Ljava/lang/Iterable;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDescendingIterable" desc="(Ljava/util/List;)Ljava/lang/Iterable;" line="107"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toList" desc="(Ljava/lang/Iterable;)Ljava/util/List;" line="121"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toList" desc="(Ljava/util/Iterator;)Ljava/util/List;" line="135"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="descendingIterator" desc="(Ljava/util/List;)Ljava/util/Iterator;" line="152"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="(Ljava/util/Collection;)Ljava/util/Collection;" line="166"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;" line="174"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unmodifiableCollection" desc="(Ljava/util/Collection;)Ljava/util/Collection;" line="193"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="singleton" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="199"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptySet" desc="()Ljava/util/Set;" line="205"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unmodifiableSet" desc="(Ljava/util/Set;)Ljava/util/Set;" line="211"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listOrEmpty" desc="(Ljava/util/List;)Ljava/util/List;" line="216"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listOrEmpty" desc="([Ljava/lang/Object;)Ljava/util/List;" line="223"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emptyList" desc="()Ljava/util/List;" line="229"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unmodifiableList" desc="(Ljava/util/List;)Ljava/util/List;" line="235"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singletonList" desc="(Ljava/lang/Object;)Ljava/util/List;" line="241"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyMap" desc="()Ljava/util/Map;" line="247"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singletonMap" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;" line="253"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unmodifiableMap" desc="(Ljava/util/Map;)Ljava/util/Map;" line="259"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$descendingIterator$1" desc="(Ljava/util/List;I)I" line="156"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toIterable$0" desc="(Ljava/util/Iterator;)Ljava/util/Iterator;" line="93"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="107" covered="42"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="24" covered="11"/><counter type="COMPLEXITY" missed="18" covered="12"/><counter type="METHOD" missed="11" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/util/ReplacementScanner" sourcefilename="ReplacementScanner.java"><method name="replaceTokens" desc="(Ljava/lang/CharSequence;Ljava/util/regex/Pattern;Ljava/util/function/Function;)Ljava/lang/CharSequence;" line="55"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/util/AutoCloser$Closer" sourcefilename="AutoCloser.java"/><class name="gov/nist/secauto/metaschema/core/util/IVersionInfo" sourcefilename="IVersionInfo.java"/><class name="gov/nist/secauto/metaschema/core/util/CustomCollectors$DuplicateHandler" sourcefilename="CustomCollectors.java"/><class name="gov/nist/secauto/metaschema/core/util/CustomCollectors" sourcefilename="CustomCollectors.java"><method name="identity" desc="()Ljava/util/function/Function;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="joiningWithOxfordComma" desc="(Ljava/lang/String;)Ljava/util/stream/Collector;" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withOxfordComma" desc="(Ljava/lang/String;)Ljava/util/function/Function;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distinctByKey" desc="(Ljava/util/stream/Stream;Ljava/util/function/Function;)Ljava/util/stream/Stream;" line="93"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distinctByKey" desc="(Ljava/util/stream/Stream;Ljava/util/function/Function;Lgov/nist/secauto/metaschema/core/util/CustomCollectors$DuplicateHandler;)Ljava/util/stream/Stream;" line="118"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMap" desc="(Ljava/util/function/Function;Ljava/util/function/Function;Lgov/nist/secauto/metaschema/core/util/CustomCollectors$DuplicateHandler;)Ljava/util/stream/Collector;" line="132"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMap" desc="(Ljava/util/function/Function;Ljava/util/function/Function;Lgov/nist/secauto/metaschema/core/util/CustomCollectors$DuplicateHandler;Ljava/util/function/Supplier;)Ljava/util/stream/Collector;" line="141"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="useFirstMapper" desc="()Ljava/util/function/BinaryOperator;" line="174"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="useLastMapper" desc="()Ljava/util/function/BinaryOperator;" line="179"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$useLastMapper$6" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="179"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$useFirstMapper$5" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="174"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toMap$4" desc="(Lgov/nist/secauto/metaschema/core/util/CustomCollectors$DuplicateHandler;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="154"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toMap$3" desc="(Ljava/util/Map;Lgov/nist/secauto/metaschema/core/util/CustomCollectors$DuplicateHandler;Ljava/lang/Object;Ljava/lang/Object;)V" line="155"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toMap$2" desc="(Ljava/util/function/Function;Ljava/util/function/Function;Lgov/nist/secauto/metaschema/core/util/CustomCollectors$DuplicateHandler;Ljava/util/Map;Ljava/lang/Object;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$distinctByKey$1" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$withOxfordComma$0" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="30" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="85" covered="70"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="20" covered="17"/><counter type="COMPLEXITY" missed="12" covered="8"/><counter type="METHOD" missed="9" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/util/AutoCloser" sourcefilename="AutoCloser.java"><method name="autoClose" desc="(Ljava/lang/Object;Lgov/nist/secauto/metaschema/core/util/AutoCloser$Closer;)Lgov/nist/secauto/metaschema/core/util/AutoCloser;" line="65"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lgov/nist/secauto/metaschema/core/util/AutoCloser$Closer;)V" line="77"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResource" desc="()Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="95"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="IVersionInfo.java"/><sourcefile name="CustomCollectors.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="1" cb="1"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="1" cb="1"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="12" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="12" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="2"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="2" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="70"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="20" covered="17"/><counter type="COMPLEXITY" missed="12" covered="8"/><counter type="METHOD" missed="9" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CollectionUtil.java"><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="10" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="2" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="2" cb="0"/><line nr="155" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="10" ci="0" mb="0" cb="0"/><line nr="157" mi="7" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="2" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="3" ci="0" mb="2" cb="0"/><line nr="175" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="6" ci="0" mb="2" cb="0"/><line nr="223" mi="10" ci="0" mb="4" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="107" covered="42"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="24" covered="11"/><counter type="COMPLEXITY" missed="18" covered="12"/><counter type="METHOD" missed="11" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReplacementScanner.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="1" cb="1"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AutoCloser.java"><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ObjectUtils.java"><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="4" ci="3" mb="1" cb="1"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="1" cb="1"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="1" cb="1"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="8" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="14"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="241" covered="168"/><counter type="BRANCH" missed="24" covered="10"/><counter type="LINE" missed="57" covered="45"/><counter type="COMPLEXITY" missed="42" covered="26"/><counter type="METHOD" missed="27" covered="24"/><counter type="CLASS" missed="1" covered="4"/></package><package name="gov/nist/secauto/metaschema/core/configuration"><class name="gov/nist/secauto/metaschema/core/configuration/DefaultConfiguration" sourcefilename="DefaultConfiguration.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="62"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgov/nist/secauto/metaschema/core/configuration/DefaultConfiguration;)V" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFeatureValues" desc="()Ljava/util/Map;" line="78"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureBooleanValue" desc="(Lgov/nist/secauto/metaschema/core/configuration/IConfigurationFeature;)V" line="82"><counter type="INSTRUCTION" missed="13" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFeatureEnabled" desc="(Lgov/nist/secauto/metaschema/core/configuration/IConfigurationFeature;)Z" line="91"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enableFeature" desc="(Lgov/nist/secauto/metaschema/core/configuration/IConfigurationFeature;)Lgov/nist/secauto/metaschema/core/configuration/IMutableConfiguration;" line="97"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disableFeature" desc="(Lgov/nist/secauto/metaschema/core/configuration/IConfigurationFeature;)Lgov/nist/secauto/metaschema/core/configuration/IMutableConfiguration;" line="104"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyConfiguration" desc="(Lgov/nist/secauto/metaschema/core/configuration/IConfiguration;)Lgov/nist/secauto/metaschema/core/configuration/IMutableConfiguration;" line="111"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Lgov/nist/secauto/metaschema/core/configuration/IConfigurationFeature;Ljava/lang/Object;)Lgov/nist/secauto/metaschema/core/configuration/IMutableConfiguration;" line="117"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="53"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="18" covered="15"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/configuration/IConfigurationFeature" sourcefilename="IConfigurationFeature.java"/><class name="gov/nist/secauto/metaschema/core/configuration/IMutableConfiguration" sourcefilename="IMutableConfiguration.java"><method name="enableFeature" desc="(Lgov/nist/secauto/metaschema/core/configuration/IConfigurationFeature;)Lgov/nist/secauto/metaschema/core/configuration/IMutableConfiguration;" line="53"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="disableFeature" desc="(Lgov/nist/secauto/metaschema/core/configuration/IConfigurationFeature;)Lgov/nist/secauto/metaschema/core/configuration/IMutableConfiguration;" line="68"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="gov/nist/secauto/metaschema/core/configuration/AbstractConfigurationFeature" sourcefilename="AbstractConfigurationFeature.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Object;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefault" desc="()Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueClass" desc="()Ljava/lang/Class;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="12"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/configuration/IConfiguration" sourcefilename="IConfiguration.java"><method name="get" desc="(Lgov/nist/secauto/metaschema/core/configuration/IConfigurationFeature;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DefaultConfiguration.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="1" cb="1"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="2" cb="0"/><line nr="120" mi="8" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="70" covered="53"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="18" covered="15"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IConfiguration.java"><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="1" cb="1"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IConfigurationFeature.java"/><sourcefile name="IMutableConfiguration.java"><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractConfigurationFeature.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="12"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="88" covered="74"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="22" covered="23"/><counter type="COMPLEXITY" missed="10" covered="9"/><counter type="METHOD" missed="7" covered="9"/><counter type="CLASS" missed="1" covered="3"/></package><package name="gov/nist/secauto/metaschema/core/model/constraint/impl"><class name="gov/nist/secauto/metaschema/core/model/constraint/impl/IFeatureValueConstrained" sourcefilename="IFeatureValueConstrained.java"><method name="getConstraints" desc="()Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedValuesConstraints" desc="()Ljava/util/List;" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchesConstraints" desc="()Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexHasKeyConstraints" desc="()Ljava/util/List;" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpectConstraints" desc="()Ljava/util/List;" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IAllowedValuesConstraint;)V" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IMatchesConstraint;)V" line="82"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexHasKeyConstraint;)V" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IExpectConstraint;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="25"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="gov/nist/secauto/metaschema/core/model/constraint/impl/IFeatureModelConstrained" sourcefilename="IFeatureModelConstrained.java"><method name="getIndexConstraints" desc="()Ljava/util/List;" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUniqueConstraints" desc="()Ljava/util/List;" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHasCardinalityConstraints" desc="()Ljava/util/List;" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IIndexConstraint;)V" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/IUniqueConstraint;)V" line="64"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConstraint" desc="(Lgov/nist/secauto/metaschema/core/model/constraint/ICardinalityConstraint;)V" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="IFeatureModelConstrained.java"><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IFeatureValueConstrained.java"><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="25"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="42" covered="25"/><counter type="LINE" missed="15" covered="7"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="1" covered="1"/></package><package name="gov/nist/secauto/metaschema/core"><class name="gov/nist/secauto/metaschema/core/MetaschemaJavaVersion" sourcefilename="MetaschemaJavaVersion.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVersion" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBuildTimestamp" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGitOriginUrl" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGitCommit" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGitBranch" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGitClosestTag" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="MetaschemaJavaVersion.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><counter type="INSTRUCTION" missed="24288" covered="18182"/><counter type="BRANCH" missed="2104" covered="873"/><counter type="LINE" missed="5767" covered="4437"/><counter type="COMPLEXITY" missed="3388" covered="1486"/><counter type="METHOD" missed="2091" covered="1246"/><counter type="CLASS" missed="194" covered="313"/></report>