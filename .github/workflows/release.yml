on:
  push:
    tags:
    - "v*"
  workflow_dispatch:
name: Deploy Tagged Release
jobs:
  deploy-to-nexus:
    name: Build and Publish Java Artifacts
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
    steps:
    - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      with:
        submodules: recursive
        filter: tree:0
    # -------------------------
    # Java
    # -------------------------
    - name: Set up Maven
      uses: stCarolas/setup-maven@07fbbe97d97ef44336b7382563d66743297e442f
      with:
        maven-version: 3.9.3
    - name: Set up JDK 11
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        java-version: 11
        distribution: 'temurin'
        cache: 'maven'
        server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
    # -------------------------
    # Maven Deploy
    # -------------------------
    - name: Deploy Maven Artifacts
      run: |
        mvn -B -e -Pgpg -Prelease -Preporting deploy
        # mvn -Pgpg -Prelease nexus-staging:close -DstagingDescription="closing to release"
      env:
        MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    - name: Create release
      uses: softprops/action-gh-release@d99959edae48b5ffffd7b00da66dcdb0a33a52ee
      with:
        draft: true
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: |
          metaschema-cli/target/metaschema-cli-*-metaschema-cli.*
    # -------------------------
    # Maven Site
    # -------------------------
    - name: Build Website
      run: |
        mvn -B -e -Prelease -Preporting install site site:stage
    - name: Run Website Deploy Script
      run: |
        touch target/staging/.nojekyll
        bash .github/workflows/deploy.sh --push-only -v -m "Deploying website [ci skip]"
